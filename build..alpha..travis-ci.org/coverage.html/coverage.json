{"/home/travis/build/npmtest/node-npmtest-ramda/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_ramda */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-ramda/lib.npmtest_ramda.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/lib.npmtest_ramda.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_ramda */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_ramda = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_ramda = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-ramda/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-ramda && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_ramda */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_ramda","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_ramda.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_ramda.rollup.js'] =","            local.assetsDict['/assets.npmtest_ramda.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_ramda.__dirname + '/lib.npmtest_ramda.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":240,"column":2}}},"branchMap":{},"code":["module.exports = {","  F: require('./src/F'),","  T: require('./src/T'),","  __: require('./src/__'),","  add: require('./src/add'),","  addIndex: require('./src/addIndex'),","  adjust: require('./src/adjust'),","  all: require('./src/all'),","  allPass: require('./src/allPass'),","  always: require('./src/always'),","  and: require('./src/and'),","  any: require('./src/any'),","  anyPass: require('./src/anyPass'),","  ap: require('./src/ap'),","  aperture: require('./src/aperture'),","  append: require('./src/append'),","  apply: require('./src/apply'),","  applySpec: require('./src/applySpec'),","  ascend: require('./src/ascend'),","  assoc: require('./src/assoc'),","  assocPath: require('./src/assocPath'),","  binary: require('./src/binary'),","  bind: require('./src/bind'),","  both: require('./src/both'),","  call: require('./src/call'),","  chain: require('./src/chain'),","  clamp: require('./src/clamp'),","  clone: require('./src/clone'),","  comparator: require('./src/comparator'),","  complement: require('./src/complement'),","  compose: require('./src/compose'),","  composeK: require('./src/composeK'),","  composeP: require('./src/composeP'),","  concat: require('./src/concat'),","  cond: require('./src/cond'),","  construct: require('./src/construct'),","  constructN: require('./src/constructN'),","  contains: require('./src/contains'),","  converge: require('./src/converge'),","  countBy: require('./src/countBy'),","  curry: require('./src/curry'),","  curryN: require('./src/curryN'),","  dec: require('./src/dec'),","  descend: require('./src/descend'),","  defaultTo: require('./src/defaultTo'),","  difference: require('./src/difference'),","  differenceWith: require('./src/differenceWith'),","  dissoc: require('./src/dissoc'),","  dissocPath: require('./src/dissocPath'),","  divide: require('./src/divide'),","  drop: require('./src/drop'),","  dropLast: require('./src/dropLast'),","  dropLastWhile: require('./src/dropLastWhile'),","  dropRepeats: require('./src/dropRepeats'),","  dropRepeatsWith: require('./src/dropRepeatsWith'),","  dropWhile: require('./src/dropWhile'),","  either: require('./src/either'),","  empty: require('./src/empty'),","  eqBy: require('./src/eqBy'),","  eqProps: require('./src/eqProps'),","  equals: require('./src/equals'),","  evolve: require('./src/evolve'),","  filter: require('./src/filter'),","  find: require('./src/find'),","  findIndex: require('./src/findIndex'),","  findLast: require('./src/findLast'),","  findLastIndex: require('./src/findLastIndex'),","  flatten: require('./src/flatten'),","  flip: require('./src/flip'),","  forEach: require('./src/forEach'),","  forEachObjIndexed: require('./src/forEachObjIndexed'),","  fromPairs: require('./src/fromPairs'),","  groupBy: require('./src/groupBy'),","  groupWith: require('./src/groupWith'),","  gt: require('./src/gt'),","  gte: require('./src/gte'),","  has: require('./src/has'),","  hasIn: require('./src/hasIn'),","  head: require('./src/head'),","  identical: require('./src/identical'),","  identity: require('./src/identity'),","  ifElse: require('./src/ifElse'),","  inc: require('./src/inc'),","  indexBy: require('./src/indexBy'),","  indexOf: require('./src/indexOf'),","  init: require('./src/init'),","  insert: require('./src/insert'),","  insertAll: require('./src/insertAll'),","  intersection: require('./src/intersection'),","  intersectionWith: require('./src/intersectionWith'),","  intersperse: require('./src/intersperse'),","  into: require('./src/into'),","  invert: require('./src/invert'),","  invertObj: require('./src/invertObj'),","  invoker: require('./src/invoker'),","  is: require('./src/is'),","  isArrayLike: require('./src/isArrayLike'),","  isEmpty: require('./src/isEmpty'),","  isNil: require('./src/isNil'),","  join: require('./src/join'),","  juxt: require('./src/juxt'),","  keys: require('./src/keys'),","  keysIn: require('./src/keysIn'),","  last: require('./src/last'),","  lastIndexOf: require('./src/lastIndexOf'),","  length: require('./src/length'),","  lens: require('./src/lens'),","  lensIndex: require('./src/lensIndex'),","  lensPath: require('./src/lensPath'),","  lensProp: require('./src/lensProp'),","  lift: require('./src/lift'),","  liftN: require('./src/liftN'),","  lt: require('./src/lt'),","  lte: require('./src/lte'),","  map: require('./src/map'),","  mapAccum: require('./src/mapAccum'),","  mapAccumRight: require('./src/mapAccumRight'),","  mapObjIndexed: require('./src/mapObjIndexed'),","  match: require('./src/match'),","  mathMod: require('./src/mathMod'),","  max: require('./src/max'),","  maxBy: require('./src/maxBy'),","  mean: require('./src/mean'),","  median: require('./src/median'),","  memoize: require('./src/memoize'),","  merge: require('./src/merge'),","  mergeAll: require('./src/mergeAll'),","  mergeWith: require('./src/mergeWith'),","  mergeWithKey: require('./src/mergeWithKey'),","  min: require('./src/min'),","  minBy: require('./src/minBy'),","  modulo: require('./src/modulo'),","  multiply: require('./src/multiply'),","  nAry: require('./src/nAry'),","  negate: require('./src/negate'),","  none: require('./src/none'),","  not: require('./src/not'),","  nth: require('./src/nth'),","  nthArg: require('./src/nthArg'),","  objOf: require('./src/objOf'),","  of: require('./src/of'),","  omit: require('./src/omit'),","  once: require('./src/once'),","  or: require('./src/or'),","  over: require('./src/over'),","  pair: require('./src/pair'),","  partial: require('./src/partial'),","  partialRight: require('./src/partialRight'),","  partition: require('./src/partition'),","  path: require('./src/path'),","  pathEq: require('./src/pathEq'),","  pathOr: require('./src/pathOr'),","  pathSatisfies: require('./src/pathSatisfies'),","  pick: require('./src/pick'),","  pickAll: require('./src/pickAll'),","  pickBy: require('./src/pickBy'),","  pipe: require('./src/pipe'),","  pipeK: require('./src/pipeK'),","  pipeP: require('./src/pipeP'),","  pluck: require('./src/pluck'),","  prepend: require('./src/prepend'),","  product: require('./src/product'),","  project: require('./src/project'),","  prop: require('./src/prop'),","  propEq: require('./src/propEq'),","  propIs: require('./src/propIs'),","  propOr: require('./src/propOr'),","  propSatisfies: require('./src/propSatisfies'),","  props: require('./src/props'),","  range: require('./src/range'),","  reduce: require('./src/reduce'),","  reduceBy: require('./src/reduceBy'),","  reduceRight: require('./src/reduceRight'),","  reduceWhile: require('./src/reduceWhile'),","  reduced: require('./src/reduced'),","  reject: require('./src/reject'),","  remove: require('./src/remove'),","  repeat: require('./src/repeat'),","  replace: require('./src/replace'),","  reverse: require('./src/reverse'),","  scan: require('./src/scan'),","  sequence: require('./src/sequence'),","  set: require('./src/set'),","  slice: require('./src/slice'),","  sort: require('./src/sort'),","  sortBy: require('./src/sortBy'),","  sortWith: require('./src/sortWith'),","  split: require('./src/split'),","  splitAt: require('./src/splitAt'),","  splitEvery: require('./src/splitEvery'),","  splitWhen: require('./src/splitWhen'),","  subtract: require('./src/subtract'),","  sum: require('./src/sum'),","  symmetricDifference: require('./src/symmetricDifference'),","  symmetricDifferenceWith: require('./src/symmetricDifferenceWith'),","  tail: require('./src/tail'),","  take: require('./src/take'),","  takeLast: require('./src/takeLast'),","  takeLastWhile: require('./src/takeLastWhile'),","  takeWhile: require('./src/takeWhile'),","  tap: require('./src/tap'),","  test: require('./src/test'),","  times: require('./src/times'),","  toLower: require('./src/toLower'),","  toPairs: require('./src/toPairs'),","  toPairsIn: require('./src/toPairsIn'),","  toString: require('./src/toString'),","  toUpper: require('./src/toUpper'),","  transduce: require('./src/transduce'),","  transpose: require('./src/transpose'),","  traverse: require('./src/traverse'),","  trim: require('./src/trim'),","  tryCatch: require('./src/tryCatch'),","  type: require('./src/type'),","  unapply: require('./src/unapply'),","  unary: require('./src/unary'),","  uncurryN: require('./src/uncurryN'),","  unfold: require('./src/unfold'),","  union: require('./src/union'),","  unionWith: require('./src/unionWith'),","  uniq: require('./src/uniq'),","  uniqBy: require('./src/uniqBy'),","  uniqWith: require('./src/uniqWith'),","  unless: require('./src/unless'),","  unnest: require('./src/unnest'),","  until: require('./src/until'),","  update: require('./src/update'),","  useWith: require('./src/useWith'),","  values: require('./src/values'),","  valuesIn: require('./src/valuesIn'),","  view: require('./src/view'),","  when: require('./src/when'),","  where: require('./src/where'),","  whereEq: require('./src/whereEq'),","  without: require('./src/without'),","  xprod: require('./src/xprod'),","  zip: require('./src/zip'),","  zipObj: require('./src/zipObj'),","  zipWith: require('./src/zipWith')","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/F.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/F.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}}},"branchMap":{},"code":["var always = require('./always');","","","/**"," * A function that always returns `false`. Any passed in parameters are ignored."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Function"," * @sig * -> Boolean"," * @param {*}"," * @return {Boolean}"," * @see R.always, R.T"," * @example"," *"," *      R.F(); //=> false"," */","module.exports = always(false);",""],"l":{"1":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/always.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/always.js","s":{"1":1,"2":1,"3":2,"4":0},"b":{},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"always","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":46}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":9},"end":{"line":24,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":4}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":15}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Returns a function that always returns the given value. Note that for"," * non-primitives the value returned is a reference to the original value."," *"," * This function is known as `const`, `constant`, or `K` (for K combinator) in"," * other languages and libraries."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig a -> (* -> a)"," * @param {*} val The value to wrap in a function"," * @return {Function} A Function :: * -> val."," * @example"," *"," *      var t = R.always('Tee');"," *      t(); //=> 'Tee'"," */","module.exports = _curry1(function always(val) {","  return function() {","    return val;","  };","});",""],"l":{"1":1,"23":1,"24":2,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curry1.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curry1.js","s":{"1":1,"2":1,"3":70,"4":14,"5":0,"6":14},"b":{"1":[0,14],"2":[14,14]},"f":{"1":70,"2":14},"fnMap":{"1":{"name":"_curry1","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":38}}},"2":{"name":"f1","line":13,"loc":{"start":{"line":13,"column":9},"end":{"line":13,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":12,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":13,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":16}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":39}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":30}},{"start":{"line":14,"column":34},"end":{"line":14,"column":51}}]}},"code":["var _isPlaceholder = require('./_isPlaceholder');","","","/**"," * Optimized internal one-arity curry function."," *"," * @private"," * @category Function"," * @param {Function} fn The function to curry."," * @return {Function} The curried function."," */","module.exports = function _curry1(fn) {","  return function f1(a) {","    if (arguments.length === 0 || _isPlaceholder(a)) {","      return f1;","    } else {","      return fn.apply(this, arguments);","    }","  };","};",""],"l":{"1":1,"12":1,"13":70,"14":14,"15":0,"17":14}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isPlaceholder.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isPlaceholder.js","s":{"1":1,"2":121},"b":{"1":[121,119,12]},"f":{"1":121},"fnMap":{"1":{"name":"_isPlaceholder","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":48}}},"branchMap":{"1":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":9},"end":{"line":2,"column":18}},{"start":{"line":3,"column":9},"end":{"line":3,"column":30}},{"start":{"line":4,"column":9},"end":{"line":4,"column":47}}]}},"code":["module.exports = function _isPlaceholder(a) {","  return a != null &&","         typeof a === 'object' &&","         a['@@functional/placeholder'] === true;","};",""],"l":{"1":1,"2":121}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/T.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/T.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}}},"branchMap":{},"code":["var always = require('./always');","","","/**"," * A function that always returns `true`. Any passed in parameters are ignored."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Function"," * @sig * -> Boolean"," * @param {*}"," * @return {Boolean}"," * @see R.always, R.F"," * @example"," *"," *      R.T(); //=> true"," */","module.exports = always(true);",""],"l":{"1":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/__.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/__.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":27,"column":0},"end":{"line":27,"column":52}}},"branchMap":{},"code":["/**"," * A special placeholder value used to specify \"gaps\" within curried functions,"," * allowing partial application of any combination of arguments, regardless of"," * their positions."," *"," * If `g` is a curried ternary function and `_` is `R.__`, the following are"," * equivalent:"," *"," *   - `g(1, 2, 3)`"," *   - `g(_, 2, 3)(1)`"," *   - `g(_, _, 3)(1)(2)`"," *   - `g(_, _, 3)(1, 2)`"," *   - `g(_, 2, _)(1, 3)`"," *   - `g(_, 2)(1)(3)`"," *   - `g(_, 2)(1, 3)`"," *   - `g(_, 2)(_, 3)(1)`"," *"," * @constant"," * @memberOf R"," * @since v0.6.0"," * @category Function"," * @example"," *"," *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');"," *      greet('Alice'); //=> 'Hello, Alice!'"," */","module.exports = {'@@functional/placeholder': true};",""],"l":{"27":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/add.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/add.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"add","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":21,"column":0},"end":{"line":23,"column":3}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":31}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Adds two values."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Math"," * @sig Number -> Number -> Number"," * @param {Number} a"," * @param {Number} b"," * @return {Number}"," * @see R.subtract"," * @example"," *"," *      R.add(2, 3);       //=>  5"," *      R.add(7)(10);      //=> 17"," */","module.exports = _curry2(function add(a, b) {","  return Number(a) + Number(b);","});",""],"l":{"1":1,"21":1,"22":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curry2.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curry2.js","s":{"1":1,"2":1,"3":1,"4":129,"5":31,"6":0,"7":9,"8":2,"9":22,"10":0,"11":0},"b":{"1":[0,9,22],"2":[0,9],"3":[0,22],"4":[22,0],"5":[0,22],"6":[0,22]},"f":{"1":129,"2":31,"3":2,"4":0,"5":0},"fnMap":{"1":{"name":"_curry2","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":38}}},"2":{"name":"f2","line":14,"loc":{"start":{"line":14,"column":9},"end":{"line":14,"column":27}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":23},"end":{"line":20,"column":36}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":43},"end":{"line":23,"column":56}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":43},"end":{"line":24,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":13,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":27,"column":4}},"5":{"start":{"line":15,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":18}},"7":{"start":{"line":19,"column":8},"end":{"line":20,"column":59}},"8":{"start":{"line":20,"column":38},"end":{"line":20,"column":55}},"9":{"start":{"line":22,"column":8},"end":{"line":25,"column":24}},"10":{"start":{"line":23,"column":58},"end":{"line":23,"column":75}},"11":{"start":{"line":24,"column":58},"end":{"line":24,"column":75}}},"branchMap":{"1":{"line":15,"type":"switch","locations":[{"start":{"line":16,"column":6},"end":{"line":17,"column":18}},{"start":{"line":18,"column":6},"end":{"line":20,"column":59}},{"start":{"line":21,"column":6},"end":{"line":25,"column":24}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":35},"end":{"line":19,"column":37}},{"start":{"line":20,"column":15},"end":{"line":20,"column":58}}]},"3":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":56},"end":{"line":22,"column":58}},{"start":{"line":23,"column":15},"end":{"line":25,"column":23}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":15},"end":{"line":22,"column":32}},{"start":{"line":22,"column":36},"end":{"line":22,"column":53}}]},"5":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":35},"end":{"line":23,"column":78}},{"start":{"line":24,"column":15},"end":{"line":25,"column":23}}]},"6":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":35},"end":{"line":24,"column":78}},{"start":{"line":25,"column":15},"end":{"line":25,"column":23}}]}},"code":["var _curry1 = require('./_curry1');","var _isPlaceholder = require('./_isPlaceholder');","","","/**"," * Optimized internal two-arity curry function."," *"," * @private"," * @category Function"," * @param {Function} fn The function to curry."," * @return {Function} The curried function."," */","module.exports = function _curry2(fn) {","  return function f2(a, b) {","    switch (arguments.length) {","      case 0:","        return f2;","      case 1:","        return _isPlaceholder(a) ? f2","             : _curry1(function(_b) { return fn(a, _b); });","      default:","        return _isPlaceholder(a) && _isPlaceholder(b) ? f2","             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })","             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })","             : fn(a, b);","    }","  };","};",""],"l":{"1":1,"2":1,"13":1,"14":129,"15":31,"17":0,"19":9,"20":2,"22":22,"23":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/addIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/addIndex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"addIndex","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":47}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":38}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":14},"end":{"line":36,"column":25}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":30,"column":0},"end":{"line":43,"column":3}},"5":{"start":{"line":31,"column":2},"end":{"line":42,"column":5}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":47}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":56}},"10":{"start":{"line":36,"column":4},"end":{"line":40,"column":6}},"11":{"start":{"line":37,"column":6},"end":{"line":37,"column":71}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":15}},"13":{"start":{"line":39,"column":6},"end":{"line":39,"column":20}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":32}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _curry1 = require('./internal/_curry1');","var curryN = require('./curryN');","","","/**"," * Creates a new list iteration function from an existing one by adding two new"," * parameters to its callback function: the current index, and the entire list."," *"," * This would turn, for instance, Ramda's simple `map` function into one that"," * more closely resembles `Array.prototype.map`. Note that this will only work"," * for functions in which the iteration callback function is the first"," * parameter, and where the list is the last parameter. (This latter might be"," * unimportant if the list parameter is not used.)"," *"," * @func"," * @memberOf R"," * @since v0.15.0"," * @category Function"," * @category List"," * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)"," * @param {Function} fn A list iteration function that does not pass index or list to its callback"," * @return {Function} An altered list iteration function that passes (item, index, list) to its callback"," * @example"," *"," *      var mapIndexed = R.addIndex(R.map);"," *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);"," *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']"," */","module.exports = _curry1(function addIndex(fn) {","  return curryN(fn.length, function() {","    var idx = 0;","    var origFn = arguments[0];","    var list = arguments[arguments.length - 1];","    var args = Array.prototype.slice.call(arguments, 0);","    args[0] = function() {","      var result = origFn.apply(this, _concat(arguments, [idx, list]));","      idx += 1;","      return result;","    };","    return fn.apply(this, args);","  });","});",""],"l":{"1":1,"2":1,"3":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_concat.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_concat","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":46}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":31,"column":2}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":20}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":10}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":25}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":10}},"9":{"start":{"line":21,"column":2},"end":{"line":24,"column":3}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":38}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":13}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":10}},"13":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":9},"end":{"line":13,"column":13}},{"start":{"line":13,"column":17},"end":{"line":13,"column":19}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":9},"end":{"line":14,"column":13}},{"start":{"line":14,"column":17},"end":{"line":14,"column":19}}]}},"code":["/**"," * Private `concat` function to merge two array-like objects."," *"," * @private"," * @param {Array|Arguments} [set1=[]] An array-like object."," * @param {Array|Arguments} [set2=[]] An array-like object."," * @return {Array} A new, merged array."," * @example"," *"," *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]"," */","module.exports = function _concat(set1, set2) {","  set1 = set1 || [];","  set2 = set2 || [];","  var idx;","  var len1 = set1.length;","  var len2 = set2.length;","  var result = [];","","  idx = 0;","  while (idx < len1) {","    result[result.length] = set1[idx];","    idx += 1;","  }","  idx = 0;","  while (idx < len2) {","    result[result.length] = set2[idx];","    idx += 1;","  }","  return result;","};",""],"l":{"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/curryN.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/curryN.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":11,"7":5,"8":6},"b":{"1":[5,6]},"f":{"1":11},"fnMap":{"1":{"name":"curryN","line":49,"loc":{"start":{"line":49,"column":25},"end":{"line":49,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":49,"column":0},"end":{"line":54,"column":3}},"6":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"7":{"start":{"line":51,"column":4},"end":{"line":51,"column":23}},"8":{"start":{"line":53,"column":2},"end":{"line":53,"column":49}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]}},"code":["var _arity = require('./internal/_arity');","var _curry1 = require('./internal/_curry1');","var _curry2 = require('./internal/_curry2');","var _curryN = require('./internal/_curryN');","","","/**"," * Returns a curried equivalent of the provided function, with the specified"," * arity. The curried function has two unusual capabilities. First, its"," * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the"," * following are equivalent:"," *"," *   - `g(1)(2)(3)`"," *   - `g(1)(2, 3)`"," *   - `g(1, 2)(3)`"," *   - `g(1, 2, 3)`"," *"," * Secondly, the special placeholder value `R.__` may be used to specify"," * \"gaps\", allowing partial application of any combination of arguments,"," * regardless of their positions. If `g` is as above and `_` is `R.__`, the"," * following are equivalent:"," *"," *   - `g(1, 2, 3)`"," *   - `g(_, 2, 3)(1)`"," *   - `g(_, _, 3)(1)(2)`"," *   - `g(_, _, 3)(1, 2)`"," *   - `g(_, 2)(1)(3)`"," *   - `g(_, 2)(1, 3)`"," *   - `g(_, 2)(_, 3)(1)`"," *"," * @func"," * @memberOf R"," * @since v0.5.0"," * @category Function"," * @sig Number -> (* -> a) -> (* -> a)"," * @param {Number} length The arity for the returned function."," * @param {Function} fn The function to curry."," * @return {Function} A new, curried function."," * @see R.curry"," * @example"," *"," *      var sumArgs = (...args) => R.sum(args);"," *"," *      var curriedAddFourNumbers = R.curryN(4, sumArgs);"," *      var f = curriedAddFourNumbers(1, 2);"," *      var g = f(3);"," *      g(4); //=> 10"," */","module.exports = _curry2(function curryN(length, fn) {","  if (length === 1) {","    return _curry1(fn);","  }","  return _arity(length, _curryN(length, [], fn));","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"49":1,"50":11,"51":5,"53":6}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_arity.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_arity.js","s":{"1":1,"2":10,"3":0,"4":0,"5":0,"6":0,"7":9,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0,9,0,1,0,0,0,0,0,0,0]},"f":{"1":10,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"_arity","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":40}}},"2":{"name":"(anonymous_2)","line":4,"loc":{"start":{"line":4,"column":19},"end":{"line":4,"column":30}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":32}}},"4":{"name":"(anonymous_4)","line":6,"loc":{"start":{"line":6,"column":19},"end":{"line":6,"column":36}}},"5":{"name":"(anonymous_5)","line":7,"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":40}}},"6":{"name":"(anonymous_6)","line":8,"loc":{"start":{"line":8,"column":19},"end":{"line":8,"column":44}}},"7":{"name":"(anonymous_7)","line":9,"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":48}}},"8":{"name":"(anonymous_8)","line":10,"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":52}}},"9":{"name":"(anonymous_9)","line":11,"loc":{"start":{"line":11,"column":19},"end":{"line":11,"column":56}}},"10":{"name":"(anonymous_10)","line":12,"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":60}}},"11":{"name":"(anonymous_11)","line":13,"loc":{"start":{"line":13,"column":19},"end":{"line":13,"column":64}}},"12":{"name":"(anonymous_12)","line":14,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":3,"column":2},"end":{"line":16,"column":3}},"3":{"start":{"line":4,"column":12},"end":{"line":4,"column":68}},"4":{"start":{"line":4,"column":32},"end":{"line":4,"column":65}},"5":{"start":{"line":5,"column":12},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":34},"end":{"line":5,"column":67}},"7":{"start":{"line":6,"column":12},"end":{"line":6,"column":74}},"8":{"start":{"line":6,"column":38},"end":{"line":6,"column":71}},"9":{"start":{"line":7,"column":12},"end":{"line":7,"column":78}},"10":{"start":{"line":7,"column":42},"end":{"line":7,"column":75}},"11":{"start":{"line":8,"column":12},"end":{"line":8,"column":82}},"12":{"start":{"line":8,"column":46},"end":{"line":8,"column":79}},"13":{"start":{"line":9,"column":12},"end":{"line":9,"column":86}},"14":{"start":{"line":9,"column":50},"end":{"line":9,"column":83}},"15":{"start":{"line":10,"column":12},"end":{"line":10,"column":90}},"16":{"start":{"line":10,"column":54},"end":{"line":10,"column":87}},"17":{"start":{"line":11,"column":12},"end":{"line":11,"column":94}},"18":{"start":{"line":11,"column":58},"end":{"line":11,"column":91}},"19":{"start":{"line":12,"column":12},"end":{"line":12,"column":98}},"20":{"start":{"line":12,"column":62},"end":{"line":12,"column":95}},"21":{"start":{"line":13,"column":12},"end":{"line":13,"column":102}},"22":{"start":{"line":13,"column":66},"end":{"line":13,"column":99}},"23":{"start":{"line":14,"column":13},"end":{"line":14,"column":107}},"24":{"start":{"line":14,"column":71},"end":{"line":14,"column":104}},"25":{"start":{"line":15,"column":13},"end":{"line":15,"column":108}}},"branchMap":{"1":{"line":3,"type":"switch","locations":[{"start":{"line":4,"column":4},"end":{"line":4,"column":68}},{"start":{"line":5,"column":4},"end":{"line":5,"column":70}},{"start":{"line":6,"column":4},"end":{"line":6,"column":74}},{"start":{"line":7,"column":4},"end":{"line":7,"column":78}},{"start":{"line":8,"column":4},"end":{"line":8,"column":82}},{"start":{"line":9,"column":4},"end":{"line":9,"column":86}},{"start":{"line":10,"column":4},"end":{"line":10,"column":90}},{"start":{"line":11,"column":4},"end":{"line":11,"column":94}},{"start":{"line":12,"column":4},"end":{"line":12,"column":98}},{"start":{"line":13,"column":4},"end":{"line":13,"column":102}},{"start":{"line":14,"column":4},"end":{"line":14,"column":107}},{"start":{"line":15,"column":4},"end":{"line":15,"column":108}}]}},"code":["module.exports = function _arity(n, fn) {","  /* eslint-disable no-unused-vars */","  switch (n) {","    case 0: return function() { return fn.apply(this, arguments); };","    case 1: return function(a0) { return fn.apply(this, arguments); };","    case 2: return function(a0, a1) { return fn.apply(this, arguments); };","    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };","    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };","    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };","    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };","    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };","    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };","    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };","    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };","    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');","  }","};",""],"l":{"1":1,"3":10,"4":0,"5":0,"6":9,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curryN.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curryN.js","s":{"1":1,"2":1,"3":1,"4":12,"5":3,"6":3,"7":3,"8":3,"9":3,"10":6,"11":6,"12":0,"13":6,"14":6,"15":6,"16":6,"17":6,"18":6,"19":3},"b":{"1":[9,9],"2":[0,6],"3":[6,0,0],"4":[6,0],"5":[0,3]},"f":{"1":12,"2":3},"fnMap":{"1":{"name":"_curryN","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":56}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":9},"end":{"line":16,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":15,"column":0},"end":{"line":40,"column":2}},"4":{"start":{"line":16,"column":2},"end":{"line":39,"column":4}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":22}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"9":{"start":{"line":21,"column":4},"end":{"line":36,"column":5}},"10":{"start":{"line":22,"column":6},"end":{"line":22,"column":17}},"11":{"start":{"line":23,"column":6},"end":{"line":30,"column":7}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":39}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":36}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":21}},"15":{"start":{"line":31,"column":6},"end":{"line":31,"column":37}},"16":{"start":{"line":32,"column":6},"end":{"line":34,"column":7}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":18}},"18":{"start":{"line":35,"column":6},"end":{"line":35,"column":23}},"19":{"start":{"line":37,"column":4},"end":{"line":38,"column":67}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":40}},{"start":{"line":21,"column":44},"end":{"line":21,"column":70}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":10},"end":{"line":23,"column":39}},{"start":{"line":24,"column":11},"end":{"line":24,"column":49}},{"start":{"line":25,"column":11},"end":{"line":25,"column":38}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"5":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":23},"end":{"line":37,"column":47}},{"start":{"line":38,"column":23},"end":{"line":38,"column":66}}]}},"code":["var _arity = require('./_arity');","var _isPlaceholder = require('./_isPlaceholder');","","","/**"," * Internal curryN function."," *"," * @private"," * @category Function"," * @param {Number} length The arity of the curried function."," * @param {Array} received An array of arguments received thus far."," * @param {Function} fn The function to curry."," * @return {Function} The curried function."," */","module.exports = function _curryN(length, received, fn) {","  return function() {","    var combined = [];","    var argsIdx = 0;","    var left = length;","    var combinedIdx = 0;","    while (combinedIdx < received.length || argsIdx < arguments.length) {","      var result;","      if (combinedIdx < received.length &&","          (!_isPlaceholder(received[combinedIdx]) ||","           argsIdx >= arguments.length)) {","        result = received[combinedIdx];","      } else {","        result = arguments[argsIdx];","        argsIdx += 1;","      }","      combined[combinedIdx] = result;","      if (!_isPlaceholder(result)) {","        left -= 1;","      }","      combinedIdx += 1;","    }","    return left <= 0 ? fn.apply(this, combined)","                     : _arity(left, _curryN(length, combined, fn));","  };","};",""],"l":{"1":1,"2":1,"15":1,"16":12,"17":3,"18":3,"19":3,"20":3,"21":3,"22":6,"23":6,"26":0,"28":6,"29":6,"31":6,"32":6,"33":6,"35":6,"37":3}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/adjust.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/adjust.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"adjust","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":30,"column":0},"end":{"line":39,"column":3}},"4":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":40}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":28}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":31}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":15}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":24}},{"start":{"line":31,"column":28},"end":{"line":31,"column":46}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":24},"end":{"line":34,"column":35}},{"start":{"line":34,"column":38},"end":{"line":34,"column":39}}]}},"code":["var _concat = require('./internal/_concat');","var _curry3 = require('./internal/_curry3');","","","/**"," * Applies a function to the value at the given index of an array, returning a"," * new copy of the array with the element at the given index replaced with the"," * result of the function application."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category List"," * @sig (a -> a) -> Number -> [a] -> [a]"," * @param {Function} fn The function to apply."," * @param {Number} idx The index."," * @param {Array|Arguments} list An array-like object whose value"," *        at the supplied index will be replaced."," * @return {Array} A copy of the supplied array-like object with"," *         the element at index `idx` replaced with the value"," *         returned by applying `fn` to the existing element."," * @see R.update"," * @example"," *"," *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]"," *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]"," * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]"," * @symb R.adjust(f, 0, [a, b]) = [f(a), b]"," */","module.exports = _curry3(function adjust(fn, idx, list) {","  if (idx >= list.length || idx < -list.length) {","    return list;","  }","  var start = idx < 0 ? list.length : 0;","  var _idx = start + idx;","  var _list = _concat(list);","  _list[_idx] = fn(list[_idx]);","  return _list;","});",""],"l":{"1":1,"2":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curry3.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_curry3.js","s":{"1":1,"2":1,"3":1,"4":1,"5":43,"6":6,"7":0,"8":0,"9":0,"10":4,"11":0,"12":0,"13":1,"14":2,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0,4,2],"2":[0,0],"3":[0,4],"4":[4,0],"5":[0,4],"6":[0,4],"7":[0,2],"8":[2,0,0],"9":[0,2],"10":[2,0],"11":[0,2],"12":[2,0],"13":[0,2],"14":[2,0],"15":[0,2],"16":[0,2],"17":[0,2]},"f":{"1":43,"2":6,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"_curry3","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":38}}},"2":{"name":"f3","line":15,"loc":{"start":{"line":15,"column":9},"end":{"line":15,"column":30}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":23},"end":{"line":21,"column":40}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":43},"end":{"line":24,"column":60}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":43},"end":{"line":25,"column":60}}},"6":{"name":"(anonymous_6)","line":26,"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":36}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":64},"end":{"line":29,"column":81}}},"8":{"name":"(anonymous_8)","line":30,"loc":{"start":{"line":30,"column":64},"end":{"line":30,"column":81}}},"9":{"name":"(anonymous_9)","line":31,"loc":{"start":{"line":31,"column":64},"end":{"line":31,"column":81}}},"10":{"name":"(anonymous_10)","line":32,"loc":{"start":{"line":32,"column":43},"end":{"line":32,"column":56}}},"11":{"name":"(anonymous_11)","line":33,"loc":{"start":{"line":33,"column":43},"end":{"line":33,"column":56}}},"12":{"name":"(anonymous_12)","line":34,"loc":{"start":{"line":34,"column":43},"end":{"line":34,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":14,"column":0},"end":{"line":38,"column":2}},"5":{"start":{"line":15,"column":2},"end":{"line":37,"column":4}},"6":{"start":{"line":16,"column":4},"end":{"line":36,"column":5}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":18}},"8":{"start":{"line":20,"column":8},"end":{"line":21,"column":67}},"9":{"start":{"line":21,"column":42},"end":{"line":21,"column":63}},"10":{"start":{"line":23,"column":8},"end":{"line":26,"column":62}},"11":{"start":{"line":24,"column":62},"end":{"line":24,"column":83}},"12":{"start":{"line":25,"column":62},"end":{"line":25,"column":83}},"13":{"start":{"line":26,"column":38},"end":{"line":26,"column":58}},"14":{"start":{"line":28,"column":8},"end":{"line":35,"column":27}},"15":{"start":{"line":29,"column":83},"end":{"line":29,"column":104}},"16":{"start":{"line":30,"column":83},"end":{"line":30,"column":104}},"17":{"start":{"line":31,"column":83},"end":{"line":31,"column":104}},"18":{"start":{"line":32,"column":58},"end":{"line":32,"column":78}},"19":{"start":{"line":33,"column":58},"end":{"line":33,"column":78}},"20":{"start":{"line":34,"column":58},"end":{"line":34,"column":78}}},"branchMap":{"1":{"line":16,"type":"switch","locations":[{"start":{"line":17,"column":6},"end":{"line":18,"column":18}},{"start":{"line":19,"column":6},"end":{"line":21,"column":67}},{"start":{"line":22,"column":6},"end":{"line":26,"column":62}},{"start":{"line":27,"column":6},"end":{"line":35,"column":27}}]},"2":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":35},"end":{"line":20,"column":37}},{"start":{"line":21,"column":15},"end":{"line":21,"column":66}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":56},"end":{"line":23,"column":58}},{"start":{"line":24,"column":15},"end":{"line":26,"column":61}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":32}},{"start":{"line":23,"column":36},"end":{"line":23,"column":53}}]},"5":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":35},"end":{"line":24,"column":86}},{"start":{"line":25,"column":15},"end":{"line":26,"column":61}}]},"6":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":35},"end":{"line":25,"column":86}},{"start":{"line":26,"column":15},"end":{"line":26,"column":61}}]},"7":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":77},"end":{"line":28,"column":79}},{"start":{"line":29,"column":15},"end":{"line":35,"column":26}}]},"8":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":32}},{"start":{"line":28,"column":36},"end":{"line":28,"column":53}},{"start":{"line":28,"column":57},"end":{"line":28,"column":74}}]},"9":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":56},"end":{"line":29,"column":107}},{"start":{"line":30,"column":15},"end":{"line":35,"column":26}}]},"10":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":32}},{"start":{"line":29,"column":36},"end":{"line":29,"column":53}}]},"11":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":56},"end":{"line":30,"column":107}},{"start":{"line":31,"column":15},"end":{"line":35,"column":26}}]},"12":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":32}},{"start":{"line":30,"column":36},"end":{"line":30,"column":53}}]},"13":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":56},"end":{"line":31,"column":107}},{"start":{"line":32,"column":15},"end":{"line":35,"column":26}}]},"14":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":15},"end":{"line":31,"column":32}},{"start":{"line":31,"column":36},"end":{"line":31,"column":53}}]},"15":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":35},"end":{"line":32,"column":81}},{"start":{"line":33,"column":15},"end":{"line":35,"column":26}}]},"16":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":35},"end":{"line":33,"column":81}},{"start":{"line":34,"column":15},"end":{"line":35,"column":26}}]},"17":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":35},"end":{"line":34,"column":81}},{"start":{"line":35,"column":15},"end":{"line":35,"column":26}}]}},"code":["var _curry1 = require('./_curry1');","var _curry2 = require('./_curry2');","var _isPlaceholder = require('./_isPlaceholder');","","","/**"," * Optimized internal three-arity curry function."," *"," * @private"," * @category Function"," * @param {Function} fn The function to curry."," * @return {Function} The curried function."," */","module.exports = function _curry3(fn) {","  return function f3(a, b, c) {","    switch (arguments.length) {","      case 0:","        return f3;","      case 1:","        return _isPlaceholder(a) ? f3","             : _curry2(function(_b, _c) { return fn(a, _b, _c); });","      case 2:","        return _isPlaceholder(a) && _isPlaceholder(b) ? f3","             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })","             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })","             : _curry1(function(_c) { return fn(a, b, _c); });","      default:","        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3","             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })","             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })","             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })","             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })","             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })","             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })","             : fn(a, b, c);","    }","  };","};",""],"l":{"1":1,"2":1,"3":1,"14":1,"15":43,"16":6,"18":0,"20":0,"21":0,"23":4,"24":0,"25":0,"26":1,"28":2,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/all.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/all.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"all","line":30,"loc":{"start":{"line":30,"column":55},"end":{"line":30,"column":78}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"4":{"start":{"line":30,"column":0},"end":{"line":39,"column":4}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"6":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"8":{"start":{"line":34,"column":6},"end":{"line":34,"column":19}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":13}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":14}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xall = require('./internal/_xall');","","","/**"," * Returns `true` if all elements of the list match the predicate, `false` if"," * there are any that don't."," *"," * Dispatches to the `all` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> Boolean"," * @param {Function} fn The predicate function."," * @param {Array} list The array to consider."," * @return {Boolean} `true` if the predicate is satisfied by every element, `false`"," *         otherwise."," * @see R.any, R.none, R.transduce"," * @example"," *"," *      var equals3 = R.equals(3);"," *      R.all(equals3)([3, 3, 3, 3]); //=> true"," *      R.all(equals3)([3, 3, 1, 3]); //=> false"," */","module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {","  var idx = 0;","  while (idx < list.length) {","    if (!fn(list[idx])) {","      return false;","    }","    idx += 1;","  }","  return true;","}));",""],"l":{"1":1,"2":1,"3":1,"30":1,"31":0,"32":0,"33":0,"34":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_dispatchable.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_dispatchable.js","s":{"1":1,"2":1,"3":1,"4":20,"5":1,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,1],"2":[0,1],"3":[0,0],"4":[0,0]},"f":{"1":20,"2":1},"fnMap":{"1":{"name":"_dispatchable","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":61}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":19,"column":0},"end":{"line":41,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":40,"column":4}},"5":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"6":{"start":{"line":22,"column":6},"end":{"line":22,"column":18}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":56}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"9":{"start":{"line":26,"column":4},"end":{"line":38,"column":5}},"10":{"start":{"line":27,"column":6},"end":{"line":27,"column":18}},"11":{"start":{"line":28,"column":6},"end":{"line":33,"column":7}},"12":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":30,"column":10},"end":{"line":30,"column":56}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":17}},"15":{"start":{"line":34,"column":6},"end":{"line":37,"column":7}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":46}},"17":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":37}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]}},"code":["var _isArray = require('./_isArray');","var _isTransformer = require('./_isTransformer');","","","/**"," * Returns a function that dispatches with different strategies based on the"," * object in list position (last argument). If it is an array, executes [fn]."," * Otherwise, if it has a function with one of the given method names, it will"," * execute that function (functor case). Otherwise, if it is a transformer,"," * uses transducer [xf] to return a new transformer (transducer case)."," * Otherwise, it will default to executing [fn]."," *"," * @private"," * @param {Array} methodNames properties to check for a custom implementation"," * @param {Function} xf transducer to initialize if object is transformer"," * @param {Function} fn default ramda implementation"," * @return {Function} A function that dispatches on object in list position"," */","module.exports = function _dispatchable(methodNames, xf, fn) {","  return function() {","    if (arguments.length === 0) {","      return fn();","    }","    var args = Array.prototype.slice.call(arguments, 0);","    var obj = args.pop();","    if (!_isArray(obj)) {","      var idx = 0;","      while (idx < methodNames.length) {","        if (typeof obj[methodNames[idx]] === 'function') {","          return obj[methodNames[idx]].apply(obj, args);","        }","        idx += 1;","      }","      if (_isTransformer(obj)) {","        var transducer = xf.apply(null, args);","        return transducer(obj);","      }","    }","    return fn.apply(this, arguments);","  };","};",""],"l":{"1":1,"2":1,"19":1,"20":20,"21":1,"22":0,"24":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isArray.js","s":{"1":1,"2":0},"b":{"1":[1,0],"2":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_isArray","line":13,"loc":{"start":{"line":13,"column":34},"end":{"line":13,"column":57}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":16,"column":68}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":17},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":17,"column":1}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":10},"end":{"line":14,"column":21}},{"start":{"line":15,"column":10},"end":{"line":15,"column":25}},{"start":{"line":16,"column":10},"end":{"line":16,"column":66}}]}},"code":["/**"," * Tests whether or not an object is an array."," *"," * @private"," * @param {*} val The object to test."," * @return {Boolean} `true` if `val` is an array, `false` otherwise."," * @example"," *"," *      _isArray([]); //=> true"," *      _isArray(null); //=> false"," *      _isArray({}); //=> false"," */","module.exports = Array.isArray || function _isArray(val) {","  return (val != null &&","          val.length >= 0 &&","          Object.prototype.toString.call(val) === '[object Array]');","};",""],"l":{"13":1,"14":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isTransformer.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isTransformer.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_isTransformer","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":56}}},"branchMap":{},"code":["module.exports = function _isTransformer(obj) {","  return typeof obj['@@transducer/step'] === 'function';","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xall.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xall.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XAll","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":23}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":42},"end":{"line":13,"column":59}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":40},"end":{"line":19,"column":64}}},"5":{"name":"_xall","line":27,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":28,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":20}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":53}},"10":{"start":{"line":13,"column":2},"end":{"line":18,"column":4}},"11":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":15,"column":6},"end":{"line":15,"column":58}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":50}},"14":{"start":{"line":19,"column":2},"end":{"line":25,"column":4}},"15":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"16":{"start":{"line":21,"column":6},"end":{"line":21,"column":23}},"17":{"start":{"line":22,"column":6},"end":{"line":22,"column":69}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"19":{"start":{"line":27,"column":2},"end":{"line":27,"column":68}},"20":{"start":{"line":27,"column":41},"end":{"line":27,"column":64}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _reduced = require('./_reduced');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XAll(f, xf) {","    this.xf = xf;","    this.f = f;","    this.all = true;","  }","  XAll.prototype['@@transducer/init'] = _xfBase.init;","  XAll.prototype['@@transducer/result'] = function(result) {","    if (this.all) {","      result = this.xf['@@transducer/step'](result, true);","    }","    return this.xf['@@transducer/result'](result);","  };","  XAll.prototype['@@transducer/step'] = function(result, input) {","    if (!this.f(input)) {","      this.all = false;","      result = _reduced(this.xf['@@transducer/step'](result, false));","    }","    return result;","  };","","  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"12":1,"13":1,"14":0,"15":0,"17":0,"19":1,"20":0,"21":0,"22":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_reduced.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_reduced.js","s":{"1":1,"2":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_reduced","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":6,"column":6}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":42},"end":{"line":2,"column":43}},{"start":{"line":3,"column":4},"end":{"line":6,"column":5}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":9},"end":{"line":2,"column":10}},{"start":{"line":2,"column":14},"end":{"line":2,"column":39}}]}},"code":["module.exports = function _reduced(x) {","  return x && x['@@transducer/reduced'] ? x :","    {","      '@@transducer/value': x,","      '@@transducer/reduced': true","    };","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfBase.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfBase.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":8},"end":{"line":2,"column":19}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":10},"end":{"line":5,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":50}}},"branchMap":{},"code":["module.exports = {","  init: function() {","    return this.xf['@@transducer/init']();","  },","  result: function(result) {","    return this.xf['@@transducer/result'](result);","  }","};",""],"l":{"1":1,"3":0,"6":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/allPass.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/allPass.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"allPass","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":49}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":56},"end":{"line":34,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"6":{"start":{"line":33,"column":0},"end":{"line":45,"column":3}},"7":{"start":{"line":34,"column":2},"end":{"line":44,"column":5}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"10":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"12":{"start":{"line":39,"column":8},"end":{"line":39,"column":21}},"13":{"start":{"line":41,"column":6},"end":{"line":41,"column":15}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]}},"code":["var _curry1 = require('./internal/_curry1');","var curryN = require('./curryN');","var max = require('./max');","var pluck = require('./pluck');","var reduce = require('./reduce');","","","/**"," * Takes a list of predicates and returns a predicate that returns true for a"," * given list of arguments if every one of the provided predicates is satisfied"," * by those arguments."," *"," * The function returned is a curried function whose arity matches that of the"," * highest-arity predicate."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Logic"," * @sig [(*... -> Boolean)] -> (*... -> Boolean)"," * @param {Array} predicates An array of predicates to check"," * @return {Function} The combined predicate"," * @see R.anyPass"," * @example"," *"," *      var isQueen = R.propEq('rank', 'Q');"," *      var isSpade = R.propEq('suit', '♠︎');"," *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);"," *"," *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false"," *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true"," */","module.exports = _curry1(function allPass(preds) {","  return curryN(reduce(max, 0, pluck('length', preds)), function() {","    var idx = 0;","    var len = preds.length;","    while (idx < len) {","      if (!preds[idx].apply(this, arguments)) {","        return false;","      }","      idx += 1;","    }","    return true;","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/max.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/max.js","s":{"1":1,"2":1,"3":2},"b":{"1":[1,1]},"f":{"1":2},"fnMap":{"1":{"name":"max","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":71}},"3":{"start":{"line":21,"column":46},"end":{"line":21,"column":67}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":61},"end":{"line":21,"column":62}},{"start":{"line":21,"column":65},"end":{"line":21,"column":66}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns the larger of its two arguments."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord a => a -> a -> a"," * @param {*} a"," * @param {*} b"," * @return {*}"," * @see R.maxBy, R.min"," * @example"," *"," *      R.max(789, 123); //=> 789"," *      R.max('a', 'b'); //=> 'b'"," */","module.exports = _curry2(function max(a, b) { return b > a ? b : a; });",""],"l":{"1":1,"21":2}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pluck.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pluck.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"pluck","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":26,"column":0},"end":{"line":28,"column":3}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":28}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var map = require('./map');","var prop = require('./prop');","","","/**"," * Returns a new list by plucking the same named property off all objects in"," * the list supplied."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig k -> [{k: v}] -> [v]"," * @param {Number|String} key The key name to pluck off of each object."," * @param {Array} list The array to consider."," * @return {Array} The list of values for the given key."," * @see R.props"," * @example"," *"," *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]"," *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]"," * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]"," * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]"," */","module.exports = _curry2(function pluck(p, list) {","  return map(prop(p), list);","});",""],"l":{"1":1,"2":1,"3":1,"26":1,"27":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"map","line":45,"loc":{"start":{"line":45,"column":55},"end":{"line":45,"column":81}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":36},"end":{"line":48,"column":47}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":21},"end":{"line":52,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"8":{"start":{"line":45,"column":0},"end":{"line":59,"column":4}},"9":{"start":{"line":46,"column":2},"end":{"line":58,"column":3}},"10":{"start":{"line":48,"column":6},"end":{"line":50,"column":9}},"11":{"start":{"line":49,"column":8},"end":{"line":49,"column":61}},"12":{"start":{"line":52,"column":6},"end":{"line":55,"column":28}},"13":{"start":{"line":53,"column":8},"end":{"line":53,"column":36}},"14":{"start":{"line":54,"column":8},"end":{"line":54,"column":19}},"15":{"start":{"line":57,"column":6},"end":{"line":57,"column":31}}},"branchMap":{"1":{"line":46,"type":"switch","locations":[{"start":{"line":47,"column":4},"end":{"line":50,"column":9}},{"start":{"line":51,"column":4},"end":{"line":55,"column":28}},{"start":{"line":56,"column":4},"end":{"line":57,"column":31}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _map = require('./internal/_map');","var _reduce = require('./internal/_reduce');","var _xmap = require('./internal/_xmap');","var curryN = require('./curryN');","var keys = require('./keys');","","","/**"," * Takes a function and"," * a [functor](https://github.com/fantasyland/fantasy-land#functor),"," * applies the function to each of the functor's values, and returns"," * a functor of the same shape."," *"," * Ramda provides suitable `map` implementations for `Array` and `Object`,"," * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`."," *"," * Dispatches to the `map` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * Also treats functions as functors and will compose them together."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Functor f => (a -> b) -> f a -> f b"," * @param {Function} fn The function to be called on every element of the input `list`."," * @param {Array} list The list to be iterated over."," * @return {Array} The new list."," * @see R.transduce, R.addIndex"," * @example"," *"," *      var double = x => x * 2;"," *"," *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]"," *"," *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}"," * @symb R.map(f, [a, b]) = [f(a), f(b)]"," * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }"," * @symb R.map(f, functor_o) = functor_o.map(f)"," */","module.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {","  switch (Object.prototype.toString.call(functor)) {","    case '[object Function]':","      return curryN(functor.length, function() {","        return fn.call(this, functor.apply(this, arguments));","      });","    case '[object Object]':","      return _reduce(function(acc, key) {","        acc[key] = fn(functor[key]);","        return acc;","      }, {}, keys(functor));","    default:","      return _map(fn, functor);","  }","}));",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"45":1,"46":1,"48":0,"49":0,"52":0,"53":0,"54":0,"57":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_map.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"_map","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":14}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":2},"end":{"line":4,"column":26}},"5":{"start":{"line":5,"column":2},"end":{"line":8,"column":3}},"6":{"start":{"line":6,"column":4},"end":{"line":6,"column":35}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":13}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}}},"branchMap":{},"code":["module.exports = function _map(fn, functor) {","  var idx = 0;","  var len = functor.length;","  var result = Array(len);","  while (idx < len) {","    result[idx] = fn(functor[idx]);","    idx += 1;","  }","  return result;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"9":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_reduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_reduce.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":3,"10":3,"11":0,"12":0,"13":3,"14":2,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":1,"28":2,"29":2,"30":2,"31":2,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,3],"2":[3,3],"3":[0,0],"4":[0,0],"5":[1,0],"6":[2,0],"7":[2,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":2,"3":0,"4":0,"5":2},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"_arrayReduce","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":39}}},"3":{"name":"_iterableReduce","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":42}}},"4":{"name":"_methodReduce","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}}},"5":{"name":"_reduce","line":39,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":6,"column":0},"end":{"line":57,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":19,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":16}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":26}},"8":{"start":{"line":10,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":11,"column":6},"end":{"line":11,"column":52}},"10":{"start":{"line":12,"column":6},"end":{"line":15,"column":7}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":40}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":14}},"13":{"start":{"line":16,"column":6},"end":{"line":16,"column":15}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":42}},"15":{"start":{"line":21,"column":2},"end":{"line":32,"column":3}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":27}},"17":{"start":{"line":23,"column":4},"end":{"line":30,"column":5}},"18":{"start":{"line":24,"column":6},"end":{"line":24,"column":53}},"19":{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":40}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":14}},"22":{"start":{"line":29,"column":6},"end":{"line":29,"column":25}},"23":{"start":{"line":31,"column":4},"end":{"line":31,"column":42}},"24":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"25":{"start":{"line":35,"column":4},"end":{"line":35,"column":89}},"26":{"start":{"line":38,"column":2},"end":{"line":38,"column":85}},"27":{"start":{"line":39,"column":2},"end":{"line":56,"column":4}},"28":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"29":{"start":{"line":41,"column":6},"end":{"line":41,"column":22}},"30":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"31":{"start":{"line":44,"column":6},"end":{"line":44,"column":41}},"32":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"33":{"start":{"line":47,"column":6},"end":{"line":47,"column":42}},"34":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"35":{"start":{"line":50,"column":6},"end":{"line":50,"column":59}},"36":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"37":{"start":{"line":53,"column":6},"end":{"line":53,"column":44}},"38":{"start":{"line":55,"column":4},"end":{"line":55,"column":66}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":6}},{"start":{"line":12,"column":6},"end":{"line":12,"column":6}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":10},"end":{"line":12,"column":13}},{"start":{"line":12,"column":17},"end":{"line":12,"column":44}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":13}},{"start":{"line":25,"column":17},"end":{"line":25,"column":44}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":54},"end":{"line":38,"column":69}},{"start":{"line":38,"column":72},"end":{"line":38,"column":84}}]},"6":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"7":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"9":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]}},"code":["var _xwrap = require('./_xwrap');","var bind = require('../bind');","var isArrayLike = require('../isArrayLike');","","","module.exports = (function() {","  function _arrayReduce(xf, acc, list) {","    var idx = 0;","    var len = list.length;","    while (idx < len) {","      acc = xf['@@transducer/step'](acc, list[idx]);","      if (acc && acc['@@transducer/reduced']) {","        acc = acc['@@transducer/value'];","        break;","      }","      idx += 1;","    }","    return xf['@@transducer/result'](acc);","  }","","  function _iterableReduce(xf, acc, iter) {","    var step = iter.next();","    while (!step.done) {","      acc = xf['@@transducer/step'](acc, step.value);","      if (acc && acc['@@transducer/reduced']) {","        acc = acc['@@transducer/value'];","        break;","      }","      step = iter.next();","    }","    return xf['@@transducer/result'](acc);","  }","","  function _methodReduce(xf, acc, obj) {","    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));","  }","","  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';","  return function _reduce(fn, acc, list) {","    if (typeof fn === 'function') {","      fn = _xwrap(fn);","    }","    if (isArrayLike(list)) {","      return _arrayReduce(fn, acc, list);","    }","    if (typeof list.reduce === 'function') {","      return _methodReduce(fn, acc, list);","    }","    if (list[symIterator] != null) {","      return _iterableReduce(fn, acc, list[symIterator]());","    }","    if (typeof list.next === 'function') {","      return _iterableReduce(fn, acc, list);","    }","    throw new TypeError('reduce: list must be array or iterable');","  };","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":2,"9":2,"10":2,"11":3,"12":3,"13":0,"14":0,"16":3,"18":2,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"31":0,"34":1,"35":0,"38":1,"39":1,"40":2,"41":2,"43":2,"44":2,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xwrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xwrap.js","s":{"1":1,"2":1,"3":2,"4":1,"5":0,"6":1,"7":2,"8":1,"9":3,"10":1,"11":2},"b":{},"f":{"1":1,"2":2,"3":0,"4":2,"5":3,"6":2},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":18},"end":{"line":1,"column":29}}},"2":{"name":"XWrap","line":2,"loc":{"start":{"line":2,"column":2},"end":{"line":2,"column":21}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":41},"end":{"line":5,"column":52}}},"4":{"name":"(anonymous_4)","line":8,"loc":{"start":{"line":8,"column":43},"end":{"line":8,"column":57}}},"5":{"name":"(anonymous_5)","line":9,"loc":{"start":{"line":9,"column":41},"end":{"line":9,"column":58}}},"6":{"name":"_xwrap","line":13,"loc":{"start":{"line":13,"column":9},"end":{"line":13,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":5}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":16}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":4}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":53}},"6":{"start":{"line":8,"column":2},"end":{"line":8,"column":73}},"7":{"start":{"line":8,"column":59},"end":{"line":8,"column":70}},"8":{"start":{"line":9,"column":2},"end":{"line":11,"column":4}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":55}},"11":{"start":{"line":13,"column":31},"end":{"line":13,"column":52}}},"branchMap":{},"code":["module.exports = (function() {","  function XWrap(fn) {","    this.f = fn;","  }","  XWrap.prototype['@@transducer/init'] = function() {","    throw new Error('init not implemented on XWrap');","  };","  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };","  XWrap.prototype['@@transducer/step'] = function(acc, x) {","    return this.f(acc, x);","  };","","  return function _xwrap(fn) { return new XWrap(fn); };","}());",""],"l":{"1":1,"2":1,"3":2,"5":1,"6":0,"8":2,"9":1,"10":3,"13":2}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/bind.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/bind.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"bind","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":52}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":27},"end":{"line":28,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":27,"column":0},"end":{"line":31,"column":3}},"4":{"start":{"line":28,"column":2},"end":{"line":30,"column":5}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":40}}},"branchMap":{},"code":["var _arity = require('./internal/_arity');","var _curry2 = require('./internal/_curry2');","","","/**"," * Creates a function that is bound to a context."," * Note: `R.bind` does not provide the additional argument-binding capabilities of"," * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)."," *"," * @func"," * @memberOf R"," * @since v0.6.0"," * @category Function"," * @category Object"," * @sig (* -> *) -> {*} -> (* -> *)"," * @param {Function} fn The function to bind to context"," * @param {Object} thisObj The context to bind `fn` to"," * @return {Function} A function that will execute in the context of `thisObj`."," * @see R.partial"," * @example"," *"," *      var log = R.bind(console.log, console);"," *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}"," *      // logs {a: 2}"," * @symb R.bind(f, o)(a, b) = f.call(o, a, b)"," */","module.exports = _curry2(function bind(fn, thisObj) {","  return _arity(fn.length, function() {","    return fn.apply(thisObj, arguments);","  });","});",""],"l":{"1":1,"2":1,"27":1,"28":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/isArrayLike.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/isArrayLike.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[2,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":2},"fnMap":{"1":{"name":"isArrayLike","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":26,"column":0},"end":{"line":37,"column":3}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":35}},"6":{"start":{"line":27,"column":21},"end":{"line":27,"column":33}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":27}},"8":{"start":{"line":28,"column":12},"end":{"line":28,"column":25}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":46}},"10":{"start":{"line":29,"column":31},"end":{"line":29,"column":44}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":37}},"12":{"start":{"line":30,"column":22},"end":{"line":30,"column":35}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":46}},"14":{"start":{"line":31,"column":26},"end":{"line":31,"column":44}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":38}},"16":{"start":{"line":32,"column":24},"end":{"line":32,"column":36}},"17":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"18":{"start":{"line":34,"column":4},"end":{"line":34,"column":65}},"19":{"start":{"line":36,"column":2},"end":{"line":36,"column":15}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"7":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"8":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":30}},{"start":{"line":34,"column":34},"end":{"line":34,"column":64}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _isArray = require('./internal/_isArray');","var _isString = require('./internal/_isString');","","","/**"," * Tests whether or not an object is similar to an array."," *"," * @func"," * @memberOf R"," * @since v0.5.0"," * @category Type"," * @category List"," * @sig * -> Boolean"," * @param {*} x The object to test."," * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise."," * @deprecated since v0.23.0"," * @example"," *"," *      R.isArrayLike([]); //=> true"," *      R.isArrayLike(true); //=> false"," *      R.isArrayLike({}); //=> false"," *      R.isArrayLike({length: 10}); //=> false"," *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true"," */","module.exports = _curry1(function isArrayLike(x) {","  if (_isArray(x)) { return true; }","  if (!x) { return false; }","  if (typeof x !== 'object') { return false; }","  if (_isString(x)) { return false; }","  if (x.nodeType === 1) { return !!x.length; }","  if (x.length === 0) { return true; }","  if (x.length > 0) {","    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);","  }","  return false;","});",""],"l":{"1":1,"2":1,"3":1,"26":1,"27":2,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isString.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isString.js","s":{"1":1,"2":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"_isString","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":65}}},"branchMap":{},"code":["module.exports = function _isString(x) {","  return Object.prototype.toString.call(x) === '[object String]';","};",""],"l":{"1":1,"2":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xmap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xmap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0},"b":{},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XMap","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":23}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":40},"end":{"line":12,"column":64}}},"4":{"name":"_xmap","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":17,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":53}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":57}},"9":{"start":{"line":12,"column":2},"end":{"line":14,"column":4}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":63}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":68}},"12":{"start":{"line":16,"column":41},"end":{"line":16,"column":64}}},"branchMap":{},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XMap(f, xf) {","    this.xf = xf;","    this.f = f;","  }","  XMap.prototype['@@transducer/init'] = _xfBase.init;","  XMap.prototype['@@transducer/result'] = _xfBase.result;","  XMap.prototype['@@transducer/step'] = function(result, input) {","    return this.xf['@@transducer/step'](result, this.f(input));","  };","","  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"10":1,"11":1,"12":1,"13":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/keys.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/keys.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[1,0],"3":[1,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":29}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":24},"end":{"line":29,"column":35}}},"3":{"name":"contains","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":47}}},"4":{"name":"keys","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":31}}},"5":{"name":"keys","line":49,"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"4":{"start":{"line":23,"column":0},"end":{"line":73,"column":5}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":72}},"6":{"start":{"line":26,"column":2},"end":{"line":27,"column":88}},"7":{"start":{"line":29,"column":2},"end":{"line":32,"column":7}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":52}},"9":{"start":{"line":34,"column":2},"end":{"line":43,"column":4}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"11":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"12":{"start":{"line":37,"column":6},"end":{"line":39,"column":7}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"14":{"start":{"line":40,"column":6},"end":{"line":40,"column":15}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":17}},"16":{"start":{"line":45,"column":2},"end":{"line":72,"column":7}},"17":{"start":{"line":47,"column":6},"end":{"line":47,"column":57}},"18":{"start":{"line":50,"column":6},"end":{"line":52,"column":7}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":18}},"20":{"start":{"line":53,"column":6},"end":{"line":53,"column":21}},"21":{"start":{"line":54,"column":6},"end":{"line":54,"column":18}},"22":{"start":{"line":55,"column":6},"end":{"line":55,"column":64}},"23":{"start":{"line":56,"column":6},"end":{"line":60,"column":7}},"24":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"25":{"start":{"line":58,"column":10},"end":{"line":58,"column":31}},"26":{"start":{"line":61,"column":6},"end":{"line":70,"column":7}},"27":{"start":{"line":62,"column":8},"end":{"line":62,"column":45}},"28":{"start":{"line":63,"column":8},"end":{"line":69,"column":9}},"29":{"start":{"line":64,"column":10},"end":{"line":64,"column":42}},"30":{"start":{"line":65,"column":10},"end":{"line":67,"column":11}},"31":{"start":{"line":66,"column":12},"end":{"line":66,"column":33}},"32":{"start":{"line":68,"column":10},"end":{"line":68,"column":20}},"33":{"start":{"line":71,"column":6},"end":{"line":71,"column":16}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"2":{"line":45,"type":"cond-expr","locations":[{"start":{"line":46,"column":4},"end":{"line":48,"column":6}},{"start":{"line":49,"column":4},"end":{"line":72,"column":6}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":9},"end":{"line":45,"column":42}},{"start":{"line":45,"column":46},"end":{"line":45,"column":61}}]},"4":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":35},"end":{"line":47,"column":37}},{"start":{"line":47,"column":40},"end":{"line":47,"column":56}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":28},"end":{"line":55,"column":42}},{"start":{"line":55,"column":46},"end":{"line":55,"column":63}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"8":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":27}},{"start":{"line":57,"column":32},"end":{"line":57,"column":48}},{"start":{"line":57,"column":52},"end":{"line":57,"column":69}}]},"9":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"10":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":10}},{"start":{"line":65,"column":10},"end":{"line":65,"column":10}}]},"11":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":14},"end":{"line":65,"column":29}},{"start":{"line":65,"column":33},"end":{"line":65,"column":52}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _has = require('./internal/_has');","var _isArguments = require('./internal/_isArguments');","","","/**"," * Returns a list containing the names of all the enumerable own properties of"," * the supplied object."," * Note that the order of the output array is not guaranteed to be consistent"," * across different JS platforms."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig {k: v} -> [k]"," * @param {Object} obj The object to extract properties from"," * @return {Array} An array of the object's own properties."," * @example"," *"," *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']"," */","module.exports = (function() {","  // cover IE < 9 keys issues","  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');","  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',","                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];","  // Safari bug","  var hasArgsEnumBug = (function() {","    'use strict';","    return arguments.propertyIsEnumerable('length');","  }());","","  var contains = function contains(list, item) {","    var idx = 0;","    while (idx < list.length) {","      if (list[idx] === item) {","        return true;","      }","      idx += 1;","    }","    return false;","  };","","  return typeof Object.keys === 'function' && !hasArgsEnumBug ?","    _curry1(function keys(obj) {","      return Object(obj) !== obj ? [] : Object.keys(obj);","    }) :","    _curry1(function keys(obj) {","      if (Object(obj) !== obj) {","        return [];","      }","      var prop, nIdx;","      var ks = [];","      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);","      for (prop in obj) {","        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {","          ks[ks.length] = prop;","        }","      }","      if (hasEnumBug) {","        nIdx = nonEnumerableProps.length - 1;","        while (nIdx >= 0) {","          prop = nonEnumerableProps[nIdx];","          if (_has(prop, obj) && !contains(ks, prop)) {","            ks[ks.length] = prop;","          }","          nIdx -= 1;","        }","      }","      return ks;","    });","}());",""],"l":{"1":1,"2":1,"3":1,"23":1,"25":1,"26":1,"29":1,"31":1,"34":1,"35":0,"36":0,"37":0,"38":0,"40":0,"42":0,"45":1,"47":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_has.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_has.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_has","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":57}}},"branchMap":{},"code":["module.exports = function _has(prop, obj) {","  return Object.prototype.hasOwnProperty.call(obj, prop);","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isArguments.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isArguments.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0},"b":{"1":[1,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":29}}},"2":{"name":"_isArguments","line":7,"loc":{"start":{"line":7,"column":4},"end":{"line":7,"column":29}}},"3":{"name":"_isArguments","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":8,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":9,"column":5}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":2},"end":{"line":8,"column":59}},"5":{"start":{"line":7,"column":31},"end":{"line":7,"column":80}},"6":{"start":{"line":8,"column":31},"end":{"line":8,"column":56}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":82}},{"start":{"line":8,"column":4},"end":{"line":8,"column":58}}]}},"code":["var _has = require('./_has');","","","module.exports = (function() {","  var toString = Object.prototype.toString;","  return toString.call(arguments) === '[object Arguments]' ?","    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :","    function _isArguments(x) { return _has('callee', x); };","}());",""],"l":{"1":1,"4":1,"5":1,"6":1,"7":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/prop.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/prop.js","s":{"1":1,"2":1,"3":2},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"prop","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":67}},"3":{"start":{"line":22,"column":49},"end":{"line":22,"column":63}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a function that when supplied an object returns the indicated"," * property of that object, if it exists."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig s -> {s: a} -> a | Undefined"," * @param {String} p The property name"," * @param {Object} obj The object to query"," * @return {*} The value at `obj.p`."," * @see R.path"," * @example"," *"," *      R.prop('x', {x: 100}); //=> 100"," *      R.prop('x', {}); //=> undefined"," */","module.exports = _curry2(function prop(p, obj) { return obj[p]; });",""],"l":{"1":1,"22":2}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduce.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":48,"column":0},"end":{"line":48,"column":34}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var _reduce = require('./internal/_reduce');","","","/**"," * Returns a single item by iterating through the list, successively calling"," * the iterator function and passing it an accumulator value and the current"," * value from the array, and then passing the result to the next call."," *"," * The iterator function receives two values: *(acc, value)*. It may use"," * `R.reduced` to shortcut the iteration."," *"," * The arguments' order of `reduceRight`'s iterator function is *(value, acc)*."," *"," * Note: `R.reduce` does not skip deleted or unassigned indices (sparse"," * arrays), unlike the native `Array.prototype.reduce` method. For more details"," * on this behavior, see:"," * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description"," *"," * Dispatches to the `reduce` method of the third argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig ((a, b) -> a) -> a -> [b] -> a"," * @param {Function} fn The iterator function. Receives two values, the accumulator and the"," *        current element from the array."," * @param {*} acc The accumulator value."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @see R.reduced, R.addIndex, R.reduceRight"," * @example"," *"," *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10"," *                -               -10"," *               / \\              / \\"," *              -   4           -6   4"," *             / \\              / \\"," *            -   3   ==>     -3   3"," *           / \\              / \\"," *          -   2           -1   2"," *         / \\              / \\"," *        0   1            0   1"," *"," * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)"," */","module.exports = _curry3(_reduce);",""],"l":{"1":1,"2":1,"48":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/and.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/and.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"and","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":25,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":10}},{"start":{"line":24,"column":14},"end":{"line":24,"column":15}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if both arguments are `true`; `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Logic"," * @sig a -> b -> a | b"," * @param {Any} a"," * @param {Any} b"," * @return {Any} the first argument if it is falsy, otherwise the second argument."," * @see R.both"," * @example"," *"," *      R.and(true, true); //=> true"," *      R.and(true, false); //=> false"," *      R.and(false, true); //=> false"," *      R.and(false, false); //=> false"," */","module.exports = _curry2(function and(a, b) {","  return a && b;","});",""],"l":{"1":1,"23":1,"24":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/any.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/any.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"any","line":31,"loc":{"start":{"line":31,"column":55},"end":{"line":31,"column":78}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"4":{"start":{"line":31,"column":0},"end":{"line":40,"column":4}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"6":{"start":{"line":33,"column":2},"end":{"line":38,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"8":{"start":{"line":35,"column":6},"end":{"line":35,"column":18}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":15}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xany = require('./internal/_xany');","","","/**"," * Returns `true` if at least one of elements of the list match the predicate,"," * `false` otherwise."," *"," * Dispatches to the `any` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> Boolean"," * @param {Function} fn The predicate function."," * @param {Array} list The array to consider."," * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`"," *         otherwise."," * @see R.all, R.none, R.transduce"," * @example"," *"," *      var lessThan0 = R.flip(R.lt)(0);"," *      var lessThan2 = R.flip(R.lt)(2);"," *      R.any(lessThan0)([1, 2]); //=> false"," *      R.any(lessThan2)([1, 2]); //=> true"," */","module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {","  var idx = 0;","  while (idx < list.length) {","    if (fn(list[idx])) {","      return true;","    }","    idx += 1;","  }","  return false;","}));",""],"l":{"1":1,"2":1,"3":1,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xany.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xany.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XAny","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":23}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":42},"end":{"line":13,"column":59}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":40},"end":{"line":19,"column":64}}},"5":{"name":"_xany","line":27,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":28,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":21}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":53}},"10":{"start":{"line":13,"column":2},"end":{"line":18,"column":4}},"11":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":15,"column":6},"end":{"line":15,"column":59}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":50}},"14":{"start":{"line":19,"column":2},"end":{"line":25,"column":4}},"15":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"16":{"start":{"line":21,"column":6},"end":{"line":21,"column":22}},"17":{"start":{"line":22,"column":6},"end":{"line":22,"column":68}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"19":{"start":{"line":27,"column":2},"end":{"line":27,"column":68}},"20":{"start":{"line":27,"column":41},"end":{"line":27,"column":64}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _reduced = require('./_reduced');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XAny(f, xf) {","    this.xf = xf;","    this.f = f;","    this.any = false;","  }","  XAny.prototype['@@transducer/init'] = _xfBase.init;","  XAny.prototype['@@transducer/result'] = function(result) {","    if (!this.any) {","      result = this.xf['@@transducer/step'](result, false);","    }","    return this.xf['@@transducer/result'](result);","  };","  XAny.prototype['@@transducer/step'] = function(result, input) {","    if (this.f(input)) {","      this.any = true;","      result = _reduced(this.xf['@@transducer/step'](result, true));","    }","    return result;","  };","","  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"12":1,"13":1,"14":0,"15":0,"17":0,"19":1,"20":0,"21":0,"22":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/anyPass.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/anyPass.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"anyPass","line":34,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":49}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":56},"end":{"line":35,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"6":{"start":{"line":34,"column":0},"end":{"line":46,"column":3}},"7":{"start":{"line":35,"column":2},"end":{"line":45,"column":5}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":27}},"10":{"start":{"line":38,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"12":{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},"13":{"start":{"line":42,"column":6},"end":{"line":42,"column":15}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":17}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]}},"code":["var _curry1 = require('./internal/_curry1');","var curryN = require('./curryN');","var max = require('./max');","var pluck = require('./pluck');","var reduce = require('./reduce');","","","/**"," * Takes a list of predicates and returns a predicate that returns true for a"," * given list of arguments if at least one of the provided predicates is"," * satisfied by those arguments."," *"," * The function returned is a curried function whose arity matches that of the"," * highest-arity predicate."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Logic"," * @sig [(*... -> Boolean)] -> (*... -> Boolean)"," * @param {Array} predicates An array of predicates to check"," * @return {Function} The combined predicate"," * @see R.allPass"," * @example"," *"," *      var isClub = R.propEq('suit', '♣');"," *      var isSpade = R.propEq('suit', '♠');"," *      var isBlackCard = R.anyPass([isClub, isSpade]);"," *"," *      isBlackCard({rank: '10', suit: '♣'}); //=> true"," *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true"," *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false"," */","module.exports = _curry1(function anyPass(preds) {","  return curryN(reduce(max, 0, pluck('length', preds)), function() {","    var idx = 0;","    var len = preds.length;","    while (idx < len) {","      if (preds[idx].apply(this, arguments)) {","        return true;","      }","      idx += 1;","    }","    return false;","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/ap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/ap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ap","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":54}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":6},"end":{"line":33,"column":18}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":14},"end":{"line":35,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"5":{"start":{"line":28,"column":0},"end":{"line":37,"column":3}},"6":{"start":{"line":29,"column":2},"end":{"line":36,"column":4}},"7":{"start":{"line":33,"column":20},"end":{"line":33,"column":49}},"8":{"start":{"line":35,"column":33},"end":{"line":35,"column":65}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":24}},{"start":{"line":32,"column":4},"end":{"line":35,"column":85}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":51}},{"start":{"line":35,"column":6},"end":{"line":35,"column":85}}]}},"code":["var _concat = require('./internal/_concat');","var _curry2 = require('./internal/_curry2');","var _reduce = require('./internal/_reduce');","var map = require('./map');","","","/**"," * ap applies a list of functions to a list of values."," *"," * Dispatches to the `ap` method of the second argument, if present. Also"," * treats curried functions as applicatives."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category Function"," * @sig [a -> b] -> [a] -> [b]"," * @sig Apply f => f (a -> b) -> f a -> f b"," * @param {Array} fns An array of functions"," * @param {Array} vs An array of values"," * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn."," * @example"," *"," *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]"," *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]"," * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]"," */","module.exports = _curry2(function ap(applicative, fn) {","  return (","    typeof applicative.ap === 'function' ?","      applicative.ap(fn) :","    typeof applicative === 'function' ?","      function(x) { return applicative(x)(fn(x)); } :","    // else","      _reduce(function(acc, f) { return _concat(acc, map(f, fn)); }, [], applicative)","  );","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"28":1,"29":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/aperture.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/aperture.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":67}}},"branchMap":{},"code":["var _aperture = require('./internal/_aperture');","var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xaperture = require('./internal/_xaperture');","","","/**"," * Returns a new list, composed of n-tuples of consecutive elements If `n` is"," * greater than the length of the list, an empty list is returned."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category List"," * @sig Number -> [a] -> [[a]]"," * @param {Number} n The size of the tuples to create"," * @param {Array} list The list to split into `n`-length tuples"," * @return {Array} The resulting list of `n`-length tuples"," * @see R.transduce"," * @example"," *"," *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]"," *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]"," *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []"," */","module.exports = _curry2(_dispatchable([], _xaperture, _aperture));",""],"l":{"1":1,"2":1,"3":1,"4":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_aperture.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_aperture.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_aperture","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":14}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":2},"end":{"line":4,"column":46}},"5":{"start":{"line":5,"column":2},"end":{"line":8,"column":3}},"6":{"start":{"line":6,"column":4},"end":{"line":6,"column":62}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":13}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":13}}},"branchMap":{"1":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":35},"end":{"line":4,"column":40}},{"start":{"line":4,"column":43},"end":{"line":4,"column":44}}]}},"code":["module.exports = function _aperture(n, list) {","  var idx = 0;","  var limit = list.length - (n - 1);","  var acc = new Array(limit >= 0 ? limit : 0);","  while (idx < limit) {","    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);","    idx += 1;","  }","  return acc;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"9":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xaperture.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xaperture.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XAperture","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":28}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":47},"end":{"line":14,"column":64}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":45},"end":{"line":18,"column":69}}},"5":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":30},"end":{"line":22,"column":46}}},"6":{"name":"(anonymous_6)","line":30,"loc":{"start":{"line":30,"column":32},"end":{"line":30,"column":43}}},"7":{"name":"_xaperture","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":36,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":12,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":22}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":58}},"11":{"start":{"line":14,"column":2},"end":{"line":17,"column":4}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":20}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":50}},"14":{"start":{"line":18,"column":2},"end":{"line":21,"column":4}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"16":{"start":{"line":20,"column":4},"end":{"line":20,"column":85}},"17":{"start":{"line":22,"column":2},"end":{"line":29,"column":4}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":31}},"19":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"20":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"21":{"start":{"line":26,"column":6},"end":{"line":26,"column":19}},"22":{"start":{"line":27,"column":6},"end":{"line":27,"column":23}},"23":{"start":{"line":30,"column":2},"end":{"line":33,"column":4}},"24":{"start":{"line":31,"column":4},"end":{"line":32,"column":70}},"25":{"start":{"line":35,"column":2},"end":{"line":35,"column":78}},"26":{"start":{"line":35,"column":46},"end":{"line":35,"column":74}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":75}},{"start":{"line":20,"column":78},"end":{"line":20,"column":84}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]}},"code":["var _concat = require('./_concat');","var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XAperture(n, xf) {","    this.xf = xf;","    this.pos = 0;","    this.full = false;","    this.acc = new Array(n);","  }","  XAperture.prototype['@@transducer/init'] = _xfBase.init;","  XAperture.prototype['@@transducer/result'] = function(result) {","    this.acc = null;","    return this.xf['@@transducer/result'](result);","  };","  XAperture.prototype['@@transducer/step'] = function(result, input) {","    this.store(input);","    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;","  };","  XAperture.prototype.store = function(input) {","    this.acc[this.pos] = input;","    this.pos += 1;","    if (this.pos === this.acc.length) {","      this.pos = 0;","      this.full = true;","    }","  };","  XAperture.prototype.getCopy = function() {","    return _concat(Array.prototype.slice.call(this.acc, this.pos),","                   Array.prototype.slice.call(this.acc, 0, this.pos));","  };","","  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"13":1,"14":1,"15":0,"16":0,"18":1,"19":0,"20":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"30":1,"31":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/append.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/append.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"append","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":25,"column":0},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a new list containing the contents of the given list, followed by"," * the given element."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig a -> [a] -> [a]"," * @param {*} el The element to add to the end of the new list."," * @param {Array} list The list of elements to add a new item to."," *        list."," * @return {Array} A new list containing the elements of the old list followed by `el`."," * @see R.prepend"," * @example"," *"," *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']"," *      R.append('tests', []); //=> ['tests']"," *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]"," */","module.exports = _curry2(function append(el, list) {","  return _concat(list, [el]);","});",""],"l":{"1":1,"2":1,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/apply.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/apply.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"apply","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":30}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Applies function `fn` to the argument list `args`. This is useful for"," * creating a fixed-arity function from a variadic function. `fn` should be a"," * bound function if context is significant."," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category Function"," * @sig (*... -> a) -> [*] -> a"," * @param {Function} fn The function which will be called with `args`"," * @param {Array} args The arguments to call `fn` with"," * @return {*} result The result, equivalent to `fn(...args)`"," * @see R.call, R.unapply"," * @example"," *"," *      var nums = [1, 2, 3, -99, 42, 6, 7];"," *      R.apply(Math.max, nums); //=> 42"," * @symb R.apply(f, [a, b, c]) = f(a, b, c)"," */","module.exports = _curry2(function apply(fn, args) {","  return fn.apply(this, args);","});",""],"l":{"1":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/applySpec.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/applySpec.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"applySpec","line":36,"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":50}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":13},"end":{"line":37,"column":25}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":16},"end":{"line":40,"column":27}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"9":{"start":{"line":36,"column":0},"end":{"line":44,"column":3}},"10":{"start":{"line":37,"column":2},"end":{"line":38,"column":19}},"11":{"start":{"line":37,"column":27},"end":{"line":37,"column":76}},"12":{"start":{"line":39,"column":2},"end":{"line":43,"column":19}},"13":{"start":{"line":41,"column":18},"end":{"line":41,"column":39}},"14":{"start":{"line":42,"column":18},"end":{"line":42,"column":75}},"15":{"start":{"line":42,"column":43},"end":{"line":42,"column":65}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":59},"end":{"line":37,"column":60}},{"start":{"line":37,"column":63},"end":{"line":37,"column":75}}]}},"code":["var _curry1 = require('./internal/_curry1');","var apply = require('./apply');","var curryN = require('./curryN');","var map = require('./map');","var max = require('./max');","var pluck = require('./pluck');","var reduce = require('./reduce');","var values = require('./values');","","","/**"," * Given a spec object recursively mapping properties to functions, creates a"," * function producing an object of the same structure, by mapping each property"," * to the result of calling its associated function with the supplied arguments."," *"," * @func"," * @memberOf R"," * @since v0.20.0"," * @category Function"," * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})"," * @param {Object} spec an object recursively mapping properties to functions for"," *        producing the values for these properties."," * @return {Function} A function that returns an object of the same structure"," * as `spec', with each property set to the value returned by calling its"," * associated function with the supplied arguments."," * @see R.converge, R.juxt"," * @example"," *"," *      var getMetrics = R.applySpec({"," *                                      sum: R.add,"," *                                      nested: { mul: R.multiply }"," *                                   });"," *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }"," * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }"," */","module.exports = _curry1(function applySpec(spec) {","  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },","             spec);","  return curryN(reduce(max, 0, pluck('length', values(spec))),","                function() {","                  var args = arguments;","                  return map(function(f) { return apply(f, args); }, spec);","                });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"36":1,"37":0,"39":0,"41":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/values.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/values.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"values","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":21,"column":0},"end":{"line":31,"column":3}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":24}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"8":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":32}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":14}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var keys = require('./keys');","","","/**"," * Returns a list of all the enumerable own properties of the supplied object."," * Note that the order of the output array is not guaranteed across different"," * JS platforms."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig {k: v} -> [v]"," * @param {Object} obj The object to extract values from"," * @return {Array} An array of the values of the object's own properties."," * @example"," *"," *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]"," */","module.exports = _curry1(function values(obj) {","  var props = keys(obj);","  var len = props.length;","  var vals = [];","  var idx = 0;","  while (idx < len) {","    vals[idx] = obj[props[idx]];","    idx += 1;","  }","  return vals;","});",""],"l":{"1":1,"2":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/ascend.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/ascend.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ascend","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":29,"column":3}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":17}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":40}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":21}},{"start":{"line":28,"column":24},"end":{"line":28,"column":39}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":34},"end":{"line":28,"column":35}},{"start":{"line":28,"column":38},"end":{"line":28,"column":39}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Makes an ascending comparator function out of a function that returns a value"," * that can be compared with `<` and `>`."," *"," * @func"," * @memberOf R"," * @since v0.23.0"," * @category Function"," * @sig Ord b => (a -> b) -> a -> a -> Number"," * @param {Function} fn A function of arity one that returns a value that can be compared"," * @param {*} a The first item to be compared."," * @param {*} b The second item to be compared."," * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`"," * @example"," *"," *      var byAge = R.ascend(R.prop('age'));"," *      var people = ["," *        // ..."," *      ];"," *      var peopleByYoungestFirst = R.sort(byAge, people);"," */","module.exports = _curry3(function ascend(fn, a, b) {","  var aa = fn(a);","  var bb = fn(b);","  return aa < bb ? -1 : aa > bb ? 1 : 0;","});",""],"l":{"1":1,"25":1,"26":0,"27":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/assoc.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/assoc.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"assoc","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"4":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":21}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Makes a shallow clone of an object, setting or overriding the specified"," * property with the given value. Note that this copies and flattens prototype"," * properties onto the new object as well. All non-primitive properties are"," * copied by reference."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Object"," * @sig String -> a -> {k: v} -> {k: v}"," * @param {String} prop The property name to set"," * @param {*} val The new value"," * @param {Object} obj The object to clone"," * @return {Object} A new object equivalent to the original except for the changed property."," * @see R.dissoc"," * @example"," *"," *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}"," */","module.exports = _curry3(function assoc(prop, val, obj) {","  var result = {};","  for (var p in obj) {","    result[p] = obj[p];","  }","  result[prop] = val;","  return result;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/assocPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/assocPath.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"assocPath","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"6":{"start":{"line":32,"column":0},"end":{"line":48,"column":3}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}},"10":{"start":{"line":37,"column":2},"end":{"line":40,"column":3}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":76}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":71}},"13":{"start":{"line":41,"column":2},"end":{"line":47,"column":3}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":19}},"16":{"start":{"line":44,"column":4},"end":{"line":44,"column":15}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":32}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":35},"end":{"line":38,"column":43}},{"start":{"line":38,"column":46},"end":{"line":38,"column":75}}]},"4":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":68},"end":{"line":38,"column":70}},{"start":{"line":38,"column":73},"end":{"line":38,"column":75}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":21}},{"start":{"line":41,"column":25},"end":{"line":41,"column":38}}]}},"code":["var _curry3 = require('./internal/_curry3');","var _has = require('./internal/_has');","var _isArray = require('./internal/_isArray');","var _isInteger = require('./internal/_isInteger');","var assoc = require('./assoc');","","","/**"," * Makes a shallow clone of an object, setting or overriding the nodes required"," * to create the given path, and placing the specific value at the tail end of"," * that path. Note that this copies and flattens prototype properties onto the"," * new object as well. All non-primitive properties are copied by reference."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Object"," * @typedefn Idx = String | Int"," * @sig [Idx] -> a -> {a} -> {a}"," * @param {Array} path the path to set"," * @param {*} val The new value"," * @param {Object} obj The object to clone"," * @return {Object} A new object equivalent to the original except along the specified path."," * @see R.dissocPath"," * @example"," *"," *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}"," *"," *      // Any missing or non-object keys in path will be overridden"," *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}"," */","module.exports = _curry3(function assocPath(path, val, obj) {","  if (path.length === 0) {","    return val;","  }","  var idx = path[0];","  if (path.length > 1) {","    var nextObj = _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};","    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);","  }","  if (_isInteger(idx) && _isArray(obj)) {","    var arr = [].concat(obj);","    arr[idx] = val;","    return arr;","  } else {","    return assoc(idx, val, obj);","  }","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isInteger.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isInteger.js","s":{"1":1,"2":0},"b":{"1":[1,0]},"f":{"1":0},"fnMap":{"1":{"name":"_isInteger","line":9,"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":60}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":24}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":17},"end":{"line":9,"column":33}},{"start":{"line":9,"column":37},"end":{"line":11,"column":1}}]}},"code":["/**"," * Determine if the passed argument is an integer."," *"," * @private"," * @param {*} n"," * @category Type"," * @return {Boolean}"," */","module.exports = Number.isInteger || function _isInteger(n) {","  return (n << 0) === n;","};",""],"l":{"9":1,"10":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/binary.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/binary.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"binary","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":32,"column":0},"end":{"line":34,"column":3}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var nAry = require('./nAry');","","","/**"," * Wraps a function of any arity (including nullary) in a function that accepts"," * exactly 2 parameters. Any extraneous parameters will not be passed to the"," * supplied function."," *"," * @func"," * @memberOf R"," * @since v0.2.0"," * @category Function"," * @sig (* -> c) -> (a, b -> c)"," * @param {Function} fn The function to wrap."," * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of"," *         arity 2."," * @example"," *"," *      var takesThreeArgs = function(a, b, c) {"," *        return [a, b, c];"," *      };"," *      takesThreeArgs.length; //=> 3"," *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]"," *"," *      var takesTwoArgs = R.binary(takesThreeArgs);"," *      takesTwoArgs.length; //=> 2"," *      // Only 2 arguments are passed to the wrapped function"," *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]"," * @symb R.binary(f)(a, b, c) = f(a, b)"," */","module.exports = _curry1(function binary(fn) {","  return nAry(2, fn);","});",""],"l":{"1":1,"2":1,"32":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/nAry.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/nAry.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0,0,0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"nAry","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":46}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":30}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":19},"end":{"line":36,"column":32}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":36}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":40}}},"6":{"name":"(anonymous_6)","line":39,"loc":{"start":{"line":39,"column":19},"end":{"line":39,"column":44}}},"7":{"name":"(anonymous_7)","line":40,"loc":{"start":{"line":40,"column":19},"end":{"line":40,"column":48}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":19},"end":{"line":41,"column":52}}},"9":{"name":"(anonymous_9)","line":42,"loc":{"start":{"line":42,"column":19},"end":{"line":42,"column":56}}},"10":{"name":"(anonymous_10)","line":43,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":60}}},"11":{"name":"(anonymous_11)","line":44,"loc":{"start":{"line":44,"column":19},"end":{"line":44,"column":64}}},"12":{"name":"(anonymous_12)","line":45,"loc":{"start":{"line":45,"column":20},"end":{"line":45,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":33,"column":0},"end":{"line":48,"column":3}},"3":{"start":{"line":34,"column":2},"end":{"line":47,"column":3}},"4":{"start":{"line":35,"column":12},"end":{"line":35,"column":54}},"5":{"start":{"line":35,"column":31},"end":{"line":35,"column":52}},"6":{"start":{"line":36,"column":12},"end":{"line":36,"column":60}},"7":{"start":{"line":36,"column":33},"end":{"line":36,"column":58}},"8":{"start":{"line":37,"column":12},"end":{"line":37,"column":68}},"9":{"start":{"line":37,"column":37},"end":{"line":37,"column":66}},"10":{"start":{"line":38,"column":12},"end":{"line":38,"column":76}},"11":{"start":{"line":38,"column":41},"end":{"line":38,"column":74}},"12":{"start":{"line":39,"column":12},"end":{"line":39,"column":84}},"13":{"start":{"line":39,"column":45},"end":{"line":39,"column":82}},"14":{"start":{"line":40,"column":12},"end":{"line":40,"column":92}},"15":{"start":{"line":40,"column":49},"end":{"line":40,"column":90}},"16":{"start":{"line":41,"column":12},"end":{"line":41,"column":100}},"17":{"start":{"line":41,"column":53},"end":{"line":41,"column":98}},"18":{"start":{"line":42,"column":12},"end":{"line":42,"column":108}},"19":{"start":{"line":42,"column":57},"end":{"line":42,"column":106}},"20":{"start":{"line":43,"column":12},"end":{"line":43,"column":116}},"21":{"start":{"line":43,"column":61},"end":{"line":43,"column":114}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":124}},"23":{"start":{"line":44,"column":65},"end":{"line":44,"column":122}},"24":{"start":{"line":45,"column":13},"end":{"line":45,"column":133}},"25":{"start":{"line":45,"column":70},"end":{"line":45,"column":131}},"26":{"start":{"line":46,"column":13},"end":{"line":46,"column":106}}},"branchMap":{"1":{"line":34,"type":"switch","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":54}},{"start":{"line":36,"column":4},"end":{"line":36,"column":60}},{"start":{"line":37,"column":4},"end":{"line":37,"column":68}},{"start":{"line":38,"column":4},"end":{"line":38,"column":76}},{"start":{"line":39,"column":4},"end":{"line":39,"column":84}},{"start":{"line":40,"column":4},"end":{"line":40,"column":92}},{"start":{"line":41,"column":4},"end":{"line":41,"column":100}},{"start":{"line":42,"column":4},"end":{"line":42,"column":108}},{"start":{"line":43,"column":4},"end":{"line":43,"column":116}},{"start":{"line":44,"column":4},"end":{"line":44,"column":124}},{"start":{"line":45,"column":4},"end":{"line":45,"column":133}},{"start":{"line":46,"column":4},"end":{"line":46,"column":106}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Wraps a function of any arity (including nullary) in a function that accepts"," * exactly `n` parameters. Any extraneous parameters will not be passed to the"," * supplied function."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig Number -> (* -> a) -> (* -> a)"," * @param {Number} n The desired arity of the new function."," * @param {Function} fn The function to wrap."," * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of"," *         arity `n`."," * @example"," *"," *      var takesTwoArgs = (a, b) => [a, b];"," *"," *      takesTwoArgs.length; //=> 2"," *      takesTwoArgs(1, 2); //=> [1, 2]"," *"," *      var takesOneArg = R.nAry(1, takesTwoArgs);"," *      takesOneArg.length; //=> 1"," *      // Only `n` arguments are passed to the wrapped function"," *      takesOneArg(1, 2); //=> [1, undefined]"," * @symb R.nAry(0, f)(a, b) = f()"," * @symb R.nAry(1, f)(a, b) = f(a)"," * @symb R.nAry(2, f)(a, b) = f(a, b)"," */","module.exports = _curry2(function nAry(n, fn) {","  switch (n) {","    case 0: return function() {return fn.call(this);};","    case 1: return function(a0) {return fn.call(this, a0);};","    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};","    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};","    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};","    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};","    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};","    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};","    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};","    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};","    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};","    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');","  }","});",""],"l":{"1":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/both.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/both.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"both","line":35,"loc":{"start":{"line":35,"column":25},"end":{"line":35,"column":45}}},"2":{"name":"_both","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":35,"column":0},"end":{"line":41,"column":3}},"6":{"start":{"line":36,"column":2},"end":{"line":40,"column":20}},"7":{"start":{"line":38,"column":6},"end":{"line":38,"column":66}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":40,"column":4},"end":{"line":40,"column":19}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":13},"end":{"line":38,"column":37}},{"start":{"line":38,"column":41},"end":{"line":38,"column":65}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isFunction = require('./internal/_isFunction');","var and = require('./and');","var lift = require('./lift');","","","/**"," * A function which calls the two provided functions and returns the `&&`"," * of the results."," * It returns the result of the first function if it is false-y and the result"," * of the second function otherwise. Note that this is short-circuited,"," * meaning that the second function will not be invoked if the first returns a"," * false-y value."," *"," * In addition to functions, `R.both` also accepts any fantasy-land compatible"," * applicative functor."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category Logic"," * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)"," * @param {Function} f A predicate"," * @param {Function} g Another predicate"," * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together."," * @see R.and"," * @example"," *"," *      var gt10 = R.gt(R.__, 10)"," *      var lt20 = R.lt(R.__, 20)"," *      var f = R.both(gt10, lt20);"," *      f(15); //=> true"," *      f(30); //=> false"," */","module.exports = _curry2(function both(f, g) {","  return _isFunction(f) ?","    function _both() {","      return f.apply(this, arguments) && g.apply(this, arguments);","    } :","    lift(and)(f, g);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"35":1,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isFunction.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isFunction.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_isFunction","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":67}}},"branchMap":{},"code":["module.exports = function _isFunction(x) {","  return Object.prototype.toString.call(x) === '[object Function]';","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lift.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lift.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"lift","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var liftN = require('./liftN');","","","/**"," * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other"," * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply)."," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category Function"," * @sig (*... -> *) -> ([*]... -> [*])"," * @param {Function} fn The function to lift into higher context"," * @return {Function} The lifted function."," * @see R.liftN"," * @example"," *"," *      var madd3 = R.lift((a, b, c) => a + b + c);"," *"," *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]"," *"," *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);"," *"," *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]"," */","module.exports = _curry1(function lift(fn) {","  return liftN(fn.length, fn);","});",""],"l":{"1":1,"2":1,"27":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/liftN.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/liftN.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"liftN","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":51}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":23},"end":{"line":27,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"6":{"start":{"line":25,"column":0},"end":{"line":30,"column":3}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"8":{"start":{"line":27,"column":2},"end":{"line":29,"column":5}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":92}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _reduce = require('./internal/_reduce');","var ap = require('./ap');","var curryN = require('./curryN');","var map = require('./map');","","","/**"," * \"lifts\" a function to be the specified arity, so that it may \"map over\" that"," * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply)."," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category Function"," * @sig Number -> (*... -> *) -> ([*]... -> [*])"," * @param {Function} fn The function to lift into higher context"," * @return {Function} The lifted function."," * @see R.lift, R.ap"," * @example"," *"," *      var madd3 = R.liftN(3, (...args) => R.sum(args));"," *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]"," */","module.exports = _curry2(function liftN(arity, fn) {","  var lifted = curryN(arity, fn);","  return curryN(arity, function() {","    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"25":1,"26":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/call.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/call.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"call","line":35,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":35,"column":0},"end":{"line":37,"column":3}},"3":{"start":{"line":36,"column":2},"end":{"line":36,"column":66}}},"branchMap":{},"code":["var curry = require('./curry');","","","/**"," * Returns the result of calling its first argument with the remaining"," * arguments. This is occasionally useful as a converging function for"," * `R.converge`: the left branch can produce a function while the right branch"," * produces a value to be passed to that function as an argument."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Function"," * @sig (*... -> a),*... -> a"," * @param {Function} fn The function to apply to the remaining arguments."," * @param {...*} args Any number of positional arguments."," * @return {*}"," * @see R.apply"," * @example"," *"," *      R.call(R.add, 1, 2); //=> 3"," *"," *      var indentN = R.pipe(R.times(R.always(' ')),"," *                           R.join(''),"," *                           R.replace(/^(?!$)/gm));"," *"," *      var format = R.converge(R.call, ["," *                                  R.pipe(R.prop('indent'), indentN),"," *                                  R.prop('value')"," *                              ]);"," *"," *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'"," * @symb R.call(f, a, b) = f(a, b)"," */","module.exports = curry(function call(fn) {","  return fn.apply(this, Array.prototype.slice.call(arguments, 1));","});",""],"l":{"1":1,"35":1,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/curry.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/curry.js","s":{"1":1,"2":1,"3":1,"4":2},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"curry","line":46,"loc":{"start":{"line":46,"column":25},"end":{"line":46,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":46,"column":0},"end":{"line":48,"column":3}},"4":{"start":{"line":47,"column":2},"end":{"line":47,"column":31}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var curryN = require('./curryN');","","","/**"," * Returns a curried equivalent of the provided function. The curried function"," * has two unusual capabilities. First, its arguments needn't be provided one"," * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the"," * following are equivalent:"," *"," *   - `g(1)(2)(3)`"," *   - `g(1)(2, 3)`"," *   - `g(1, 2)(3)`"," *   - `g(1, 2, 3)`"," *"," * Secondly, the special placeholder value `R.__` may be used to specify"," * \"gaps\", allowing partial application of any combination of arguments,"," * regardless of their positions. If `g` is as above and `_` is `R.__`, the"," * following are equivalent:"," *"," *   - `g(1, 2, 3)`"," *   - `g(_, 2, 3)(1)`"," *   - `g(_, _, 3)(1)(2)`"," *   - `g(_, _, 3)(1, 2)`"," *   - `g(_, 2)(1)(3)`"," *   - `g(_, 2)(1, 3)`"," *   - `g(_, 2)(_, 3)(1)`"," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (* -> a) -> (* -> a)"," * @param {Function} fn The function to curry."," * @return {Function} A new, curried function."," * @see R.curryN"," * @example"," *"," *      var addFourNumbers = (a, b, c, d) => a + b + c + d;"," *"," *      var curriedAddFourNumbers = R.curry(addFourNumbers);"," *      var f = curriedAddFourNumbers(1, 2);"," *      var g = f(3);"," *      g(4); //=> 10"," */","module.exports = _curry1(function curry(fn) {","  return curryN(fn.length, fn);","});",""],"l":{"1":1,"2":1,"46":1,"47":2}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/chain.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/chain.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"chain","line":30,"loc":{"start":{"line":30,"column":59},"end":{"line":30,"column":85}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"6":{"start":{"line":30,"column":0},"end":{"line":35,"column":4}},"7":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":51}},"9":{"start":{"line":32,"column":25},"end":{"line":32,"column":48}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":42}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _makeFlat = require('./internal/_makeFlat');","var _xchain = require('./internal/_xchain');","var map = require('./map');","","","/**"," * `chain` maps a function over a list and concatenates the results. `chain`"," * is also known as `flatMap` in some libraries"," *"," * Dispatches to the `chain` method of the second argument, if present,"," * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain)."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category List"," * @sig Chain m => (a -> m b) -> m a -> m b"," * @param {Function} fn The function to map with"," * @param {Array} list The list to map over"," * @return {Array} The result of flat-mapping `list` with `fn`"," * @example"," *"," *      var duplicate = n => [n, n];"," *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]"," *"," *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]"," */","module.exports = _curry2(_dispatchable(['chain'], _xchain, function chain(fn, monad) {","  if (typeof monad === 'function') {","    return function(x) { return fn(monad(x))(x); };","  }","  return _makeFlat(false)(map(fn, monad));","}));",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"30":1,"31":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_makeFlat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_makeFlat.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_makeFlat","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":47}}},"2":{"name":"flatt","line":11,"loc":{"start":{"line":11,"column":9},"end":{"line":11,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":10,"column":0},"end":{"line":33,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":32,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":27}},"8":{"start":{"line":17,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":18,"column":6},"end":{"line":28,"column":7}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":57}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":14}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"13":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"14":{"start":{"line":23,"column":10},"end":{"line":23,"column":43}},"15":{"start":{"line":24,"column":10},"end":{"line":24,"column":17}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":42}},"17":{"start":{"line":29,"column":6},"end":{"line":29,"column":15}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":28},"end":{"line":19,"column":44}},{"start":{"line":19,"column":47},"end":{"line":19,"column":56}}]}},"code":["var isArrayLike = require('../isArrayLike');","","","/**"," * `_makeFlat` is a helper function that returns a one-level or fully recursive"," * function based on the flag passed in."," *"," * @private"," */","module.exports = function _makeFlat(recursive) {","  return function flatt(list) {","    var value, jlen, j;","    var result = [];","    var idx = 0;","    var ilen = list.length;","","    while (idx < ilen) {","      if (isArrayLike(list[idx])) {","        value = recursive ? flatt(list[idx]) : list[idx];","        j = 0;","        jlen = value.length;","        while (j < jlen) {","          result[result.length] = value[j];","          j += 1;","        }","      } else {","        result[result.length] = list[idx];","      }","      idx += 1;","    }","    return result;","  };","};",""],"l":{"1":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"27":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xchain.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xchain.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_xchain","line":6,"loc":{"start":{"line":6,"column":25},"end":{"line":6,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"4":{"start":{"line":6,"column":0},"end":{"line":8,"column":3}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":30}}},"branchMap":{},"code":["var _curry2 = require('./_curry2');","var _flatCat = require('./_flatCat');","var map = require('../map');","","","module.exports = _curry2(function _xchain(f, xf) {","  return map(f, _flatCat(xf));","});",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_flatCat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_flatCat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":26},"end":{"line":7,"column":39}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":29},"end":{"line":10,"column":46}}},"4":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":51}}},"5":{"name":"_xcat","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":28}}},"6":{"name":"(anonymous_6)","line":24,"loc":{"start":{"line":24,"column":29},"end":{"line":24,"column":46}}},"7":{"name":"(anonymous_7)","line":27,"loc":{"start":{"line":27,"column":27},"end":{"line":27,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":6,"column":0},"end":{"line":32,"column":5}},"6":{"start":{"line":7,"column":2},"end":{"line":18,"column":4}},"7":{"start":{"line":8,"column":4},"end":{"line":17,"column":6}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":49}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":57}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":70}},"11":{"start":{"line":20,"column":2},"end":{"line":31,"column":4}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"13":{"start":{"line":22,"column":4},"end":{"line":30,"column":6}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":50}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":97}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":45},"end":{"line":15,"column":63}},{"start":{"line":15,"column":66},"end":{"line":15,"column":69}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":37},"end":{"line":28,"column":66}},{"start":{"line":28,"column":69},"end":{"line":28,"column":96}}]}},"code":["var _forceReduced = require('./_forceReduced');","var _reduce = require('./_reduce');","var _xfBase = require('./_xfBase');","var isArrayLike = require('../isArrayLike');","","module.exports = (function() {","  var preservingReduced = function(xf) {","    return {","      '@@transducer/init': _xfBase.init,","      '@@transducer/result': function(result) {","        return xf['@@transducer/result'](result);","      },","      '@@transducer/step': function(result, input) {","        var ret = xf['@@transducer/step'](result, input);","        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;","      }","    };","  };","","  return function _xcat(xf) {","    var rxf = preservingReduced(xf);","    return {","      '@@transducer/init': _xfBase.init,","      '@@transducer/result': function(result) {","        return rxf['@@transducer/result'](result);","      },","      '@@transducer/step': function(result, input) {","        return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);","      }","    };","  };","}());",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":1,"8":0,"11":0,"14":0,"15":0,"20":1,"21":0,"22":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_forceReduced.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_forceReduced.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_forceReduced","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":5,"column":4}}},"branchMap":{},"code":["module.exports = function _forceReduced(x) {","  return {","    '@@transducer/value': x,","    '@@transducer/reduced': true","  };","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/clamp.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/clamp.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"clamp","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":30,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":82}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":15}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":26}},{"start":{"line":28,"column":9},"end":{"line":29,"column":14}}]},"3":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":26}},{"start":{"line":29,"column":9},"end":{"line":29,"column":14}}]}},"code":["var _curry3 = require('./internal/_curry3');","","/**"," * Restricts a number to be within a range."," *"," * Also works for other ordered types such as Strings and Dates."," *"," * @func"," * @memberOf R"," * @since v0.20.0"," * @category Relation"," * @sig Ord a => a -> a -> a -> a"," * @param {Number} minimum The lower limit of the clamp (inclusive)"," * @param {Number} maximum The upper limit of the clamp (inclusive)"," * @param {Number} value Value to be clamped"," * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise"," * @example"," *"," *      R.clamp(1, 10, -5) // => 1"," *      R.clamp(1, 10, 15) // => 10"," *      R.clamp(1, 10, 4)  // => 4"," */","module.exports = _curry3(function clamp(min, max, value) {","  if (min > max) {","    throw new Error('min must not be greater than max in clamp(min, max, value)');","  }","  return value < min ? min :","         value > max ? max :","         value;","});",""],"l":{"1":1,"23":1,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/clone.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"clone","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":26,"column":0},"end":{"line":30,"column":3}},"4":{"start":{"line":27,"column":2},"end":{"line":29,"column":32}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":17}},{"start":{"line":29,"column":4},"end":{"line":29,"column":31}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":22}},{"start":{"line":27,"column":26},"end":{"line":27,"column":59}}]}},"code":["var _clone = require('./internal/_clone');","var _curry1 = require('./internal/_curry1');","","","/**"," * Creates a deep copy of the value which may contain (nested) `Array`s and"," * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are"," * assigned by reference rather than copied"," *"," * Dispatches to a `clone` method if present."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig {*} -> {*}"," * @param {*} value The object or array to clone"," * @return {*} A deeply cloned copy of `val`"," * @example"," *"," *      var objects = [{}, {}, {}];"," *      var objectsClone = R.clone(objects);"," *      objects === objectsClone; //=> false"," *      objects[0] === objectsClone[0]; //=> false"," */","module.exports = _curry1(function clone(value) {","  return value != null && typeof value.clone === 'function' ?","    value.clone() :","    _clone(value, [], [], true);","});",""],"l":{"1":1,"2":1,"26":1,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_clone.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_clone","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":62}}},"2":{"name":"copy","line":16,"loc":{"start":{"line":16,"column":13},"end":{"line":16,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":15,"column":0},"end":{"line":40,"column":2}},"4":{"start":{"line":16,"column":2},"end":{"line":32,"column":4}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":29}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}},"7":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"8":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":26}},"10":{"start":{"line":23,"column":6},"end":{"line":23,"column":15}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":29}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"13":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"14":{"start":{"line":28,"column":6},"end":{"line":29,"column":62}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":23}},"16":{"start":{"line":33,"column":2},"end":{"line":39,"column":3}},"17":{"start":{"line":34,"column":20},"end":{"line":34,"column":36}},"18":{"start":{"line":35,"column":20},"end":{"line":35,"column":36}},"19":{"start":{"line":36,"column":20},"end":{"line":36,"column":53}},"20":{"start":{"line":37,"column":20},"end":{"line":37,"column":47}},"21":{"start":{"line":38,"column":20},"end":{"line":38,"column":33}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":48}},{"start":{"line":29,"column":51},"end":{"line":29,"column":61}}]},"3":{"line":33,"type":"switch","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":36}},{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},{"start":{"line":36,"column":4},"end":{"line":36,"column":53}},{"start":{"line":37,"column":4},"end":{"line":37,"column":47}},{"start":{"line":38,"column":4},"end":{"line":38,"column":33}}]}},"code":["var _cloneRegExp = require('./_cloneRegExp');","var type = require('../type');","","","/**"," * Copies an object."," *"," * @private"," * @param {*} value The value to be copied"," * @param {Array} refFrom Array containing the source references"," * @param {Array} refTo Array containing the copied source references"," * @param {Boolean} deep Whether or not to perform deep cloning."," * @return {*} The copied value."," */","module.exports = function _clone(value, refFrom, refTo, deep) {","  var copy = function copy(copiedValue) {","    var len = refFrom.length;","    var idx = 0;","    while (idx < len) {","      if (value === refFrom[idx]) {","        return refTo[idx];","      }","      idx += 1;","    }","    refFrom[idx + 1] = value;","    refTo[idx + 1] = copiedValue;","    for (var key in value) {","      copiedValue[key] = deep ?","        _clone(value[key], refFrom, refTo, true) : value[key];","    }","    return copiedValue;","  };","  switch (type(value)) {","    case 'Object':  return copy({});","    case 'Array':   return copy([]);","    case 'Date':    return new Date(value.valueOf());","    case 'RegExp':  return _cloneRegExp(value);","    default:        return value;","  }","};",""],"l":{"1":1,"2":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"25":0,"26":0,"27":0,"28":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_cloneRegExp.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_cloneRegExp.js","s":{"1":1,"2":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_cloneRegExp","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":6,"column":69}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":58},"end":{"line":2,"column":61}},{"start":{"line":2,"column":64},"end":{"line":2,"column":66}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":58},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":66}}]},"3":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":58},"end":{"line":4,"column":61}},{"start":{"line":4,"column":64},"end":{"line":4,"column":66}}]},"4":{"line":5,"type":"cond-expr","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":61}},{"start":{"line":5,"column":64},"end":{"line":5,"column":66}}]},"5":{"line":6,"type":"cond-expr","locations":[{"start":{"line":6,"column":58},"end":{"line":6,"column":61}},{"start":{"line":6,"column":64},"end":{"line":6,"column":66}}]}},"code":["module.exports = function _cloneRegExp(pattern) {","  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +","                                    (pattern.ignoreCase ? 'i' : '') +","                                    (pattern.multiline  ? 'm' : '') +","                                    (pattern.sticky     ? 'y' : '') +","                                    (pattern.unicode    ? 'u' : ''));","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/type.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/type.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"type","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":27,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":58}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":29},"end":{"line":28,"column":35}},{"start":{"line":29,"column":9},"end":{"line":30,"column":57}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":29},"end":{"line":29,"column":40}},{"start":{"line":30,"column":9},"end":{"line":30,"column":57}}]}},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Gives a single-word string description of the (native) type of a value,"," * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not"," * attempt to distinguish user Object types any further, reporting them all as"," * 'Object'."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Type"," * @sig (* -> {*}) -> String"," * @param {*} val The value to test"," * @return {String}"," * @example"," *"," *      R.type({}); //=> \"Object\""," *      R.type(1); //=> \"Number\""," *      R.type(false); //=> \"Boolean\""," *      R.type('s'); //=> \"String\""," *      R.type(null); //=> \"Null\""," *      R.type([]); //=> \"Array\""," *      R.type(/[A-z]/); //=> \"RegExp\""," */","module.exports = _curry1(function type(val) {","  return val === null      ? 'Null'      :","         val === undefined ? 'Undefined' :","         Object.prototype.toString.call(val).slice(8, -1);","});",""],"l":{"1":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/comparator.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/comparator.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"comparator","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":51}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":28,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":4}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":48}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":24},"end":{"line":26,"column":26}},{"start":{"line":26,"column":29},"end":{"line":26,"column":47}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":42},"end":{"line":26,"column":43}},{"start":{"line":26,"column":46},"end":{"line":26,"column":47}}]}},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Makes a comparator function out of a function that reports whether the first"," * element is less than the second."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (a, b -> Boolean) -> (a, b -> Number)"," * @param {Function} pred A predicate function of arity two which will return `true` if the first argument"," * is less than the second, `false` otherwise"," * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`"," * @example"," *"," *      var byAge = R.comparator((a, b) => a.age < b.age);"," *      var people = ["," *        // ..."," *      ];"," *      var peopleByIncreasingAge = R.sort(byAge, people);"," */","module.exports = _curry1(function comparator(pred) {","  return function(a, b) {","    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;","  };","});",""],"l":{"1":1,"24":1,"25":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/complement.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/complement.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}}},"branchMap":{},"code":["var lift = require('./lift');","var not = require('./not');","","","/**"," * Takes a function `f` and returns a function `g` such that if called with the same arguments"," * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`."," *"," * `R.complement` may be applied to any functor"," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category Logic"," * @sig (*... -> *) -> (*... -> Boolean)"," * @param {Function} f"," * @return {Function}"," * @see R.not"," * @example"," *"," *      var isNotNil = R.complement(R.isNil);"," *      isNil(null); //=> true"," *      isNotNil(null); //=> false"," *      isNil(7); //=> false"," *      isNotNil(7); //=> true"," */","module.exports = lift(not);",""],"l":{"1":1,"2":1,"27":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/not.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/not.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"not","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":25,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":12}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * A function that returns the `!` of its argument. It will return `true` when"," * passed false-y value, and `false` when passed a truth-y one."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Logic"," * @sig * -> Boolean"," * @param {*} a any value"," * @return {Boolean} the logical inverse of passed argument."," * @see R.complement"," * @example"," *"," *      R.not(true); //=> false"," *      R.not(false); //=> true"," *      R.not(0); //=> true"," *      R.not(1); //=> false"," */","module.exports = _curry1(function not(a) {","  return !a;","});",""],"l":{"1":1,"23":1,"24":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/compose.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/compose.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1},"b":{"1":[0,1]},"f":{"1":1},"fnMap":{"1":{"name":"compose","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":29,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":62}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":46}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]}},"code":["var pipe = require('./pipe');","var reverse = require('./reverse');","","","/**"," * Performs right-to-left function composition. The rightmost function may have"," * any arity; the remaining functions must be unary."," *"," * **Note:** The result of compose is not automatically curried."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)"," * @param {...Function} ...functions The functions to compose"," * @return {Function}"," * @see R.pipe"," * @example"," *"," *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName"," *      var yellGreeting = R.compose(R.toUpper, classyGreeting);"," *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\""," *"," *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7"," *"," * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))"," */","module.exports = function compose() {","  if (arguments.length === 0) {","    throw new Error('compose requires at least one argument');","  }","  return pipe.apply(this, reverse(arguments));","};",""],"l":{"1":1,"2":1,"29":1,"30":1,"31":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pipe.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pipe.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1},"b":{"1":[0,1]},"f":{"1":1},"fnMap":{"1":{"name":"pipe","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":40}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":30,"column":0},"end":{"line":36,"column":2}},"6":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":59}},"8":{"start":{"line":34,"column":2},"end":{"line":35,"column":62}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["var _arity = require('./internal/_arity');","var _pipe = require('./internal/_pipe');","var reduce = require('./reduce');","var tail = require('./tail');","","","/**"," * Performs left-to-right function composition. The leftmost function may have"," * any arity; the remaining functions must be unary."," *"," * In some libraries this function is named `sequence`."," *"," * **Note:** The result of pipe is not automatically curried."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)"," * @param {...Function} functions"," * @return {Function}"," * @see R.compose"," * @example"," *"," *      var f = R.pipe(Math.pow, R.negate, R.inc);"," *"," *      f(3, 4); // -(3^4) + 1"," * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))"," */","module.exports = function pipe() {","  if (arguments.length === 0) {","    throw new Error('pipe requires at least one argument');","  }","  return _arity(arguments[0].length,","                reduce(_pipe, arguments[0], tail(arguments)));","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"30":1,"31":1,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_pipe.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_pipe.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_pipe","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":38}}},"2":{"name":"(anonymous_2)","line":2,"loc":{"start":{"line":2,"column":9},"end":{"line":2,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":4}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":50}}},"branchMap":{},"code":["module.exports = function _pipe(f, g) {","  return function() {","    return g.call(this, f.apply(this, arguments));","  };","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/tail.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/tail.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":33,"column":0},"end":{"line":33,"column":70}}},"branchMap":{},"code":["var _checkForMethod = require('./internal/_checkForMethod');","var _curry1 = require('./internal/_curry1');","var slice = require('./slice');","","","/**"," * Returns all but the first element of the given list or string (or object"," * with a `tail` method)."," *"," * Dispatches to the `slice` method of the first argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [a]"," * @sig String -> String"," * @param {*} list"," * @return {*}"," * @see R.head, R.init, R.last"," * @example"," *"," *      R.tail([1, 2, 3]);  //=> [2, 3]"," *      R.tail([1, 2]);     //=> [2]"," *      R.tail([1]);        //=> []"," *      R.tail([]);         //=> []"," *"," *      R.tail('abc');  //=> 'bc'"," *      R.tail('ab');   //=> 'b'"," *      R.tail('a');    //=> ''"," *      R.tail('');     //=> ''"," */","module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));",""],"l":{"1":1,"2":1,"3":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_checkForMethod.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_checkForMethod.js","s":{"1":1,"2":1,"3":5,"4":2,"5":2,"6":0,"7":2,"8":2},"b":{"1":[0,2],"2":[2,0],"3":[2,2]},"f":{"1":5,"2":2},"fnMap":{"1":{"name":"_checkForMethod","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":58}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":9},"end":{"line":15,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":14,"column":0},"end":{"line":25,"column":2}},"3":{"start":{"line":15,"column":2},"end":{"line":24,"column":4}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":34}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":6},"end":{"line":18,"column":18}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":36}},"8":{"start":{"line":21,"column":4},"end":{"line":23,"column":87}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":21,"type":"cond-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":31}},{"start":{"line":23,"column":6},"end":{"line":23,"column":86}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":25}},{"start":{"line":21,"column":29},"end":{"line":21,"column":66}}]}},"code":["var _isArray = require('./_isArray');","","","/**"," * This checks whether a function has a [methodname] function. If it isn't an"," * array it will execute that function otherwise it will default to the ramda"," * implementation."," *"," * @private"," * @param {Function} fn ramda implemtation"," * @param {String} methodname property to check for a custom implementation"," * @return {Object} Whatever the return value of the method is."," */","module.exports = function _checkForMethod(methodname, fn) {","  return function() {","    var length = arguments.length;","    if (length === 0) {","      return fn();","    }","    var obj = arguments[length - 1];","    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?","      fn.apply(this, arguments) :","      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));","  };","};",""],"l":{"1":1,"14":1,"15":5,"16":2,"17":2,"18":0,"20":2,"21":2}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/slice.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/slice.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"slice","line":29,"loc":{"start":{"line":29,"column":50},"end":{"line":29,"column":91}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":29,"column":0},"end":{"line":31,"column":4}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":62}}},"branchMap":{},"code":["var _checkForMethod = require('./internal/_checkForMethod');","var _curry3 = require('./internal/_curry3');","","","/**"," * Returns the elements of the given list or string (or object with a `slice`"," * method) from `fromIndex` (inclusive) to `toIndex` (exclusive)."," *"," * Dispatches to the `slice` method of the third argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.4"," * @category List"," * @sig Number -> Number -> [a] -> [a]"," * @sig Number -> Number -> String -> String"," * @param {Number} fromIndex The start index (inclusive)."," * @param {Number} toIndex The end index (exclusive)."," * @param {*} list"," * @return {*}"," * @example"," *"," *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']"," *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']"," *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']"," *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']"," *      R.slice(0, 3, 'ramda');                     //=> 'ram'"," */","module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {","  return Array.prototype.slice.call(list, fromIndex, toIndex);","}));",""],"l":{"1":1,"2":1,"29":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reverse.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reverse.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{"1":[0,1]},"f":{"1":1},"fnMap":{"1":{"name":"reverse","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":29,"column":0},"end":{"line":32,"column":3}},"4":{"start":{"line":30,"column":2},"end":{"line":31,"column":73}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":27},"end":{"line":30,"column":60}},{"start":{"line":31,"column":27},"end":{"line":31,"column":72}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _isString = require('./internal/_isString');","","","/**"," * Returns a new list or string with the elements or characters in reverse"," * order."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [a]"," * @sig String -> String"," * @param {Array|String} list"," * @return {Array|String}"," * @example"," *"," *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]"," *      R.reverse([1, 2]);     //=> [2, 1]"," *      R.reverse([1]);        //=> [1]"," *      R.reverse([]);         //=> []"," *"," *      R.reverse('abc');      //=> 'cba'"," *      R.reverse('ab');       //=> 'ba'"," *      R.reverse('a');        //=> 'a'"," *      R.reverse('');         //=> ''"," */","module.exports = _curry1(function reverse(list) {","  return _isString(list) ? list.split('').reverse().join('') :","                           Array.prototype.slice.call(list, 0).reverse();","});",""],"l":{"1":1,"2":1,"29":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/composeK.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/composeK.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"composeK","line":36,"loc":{"start":{"line":36,"column":17},"end":{"line":36,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":36,"column":0},"end":{"line":43,"column":2}},"5":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":63}},"7":{"start":{"line":40,"column":2},"end":{"line":40,"column":51}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":24}},"9":{"start":{"line":42,"column":2},"end":{"line":42,"column":62}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["var chain = require('./chain');","var compose = require('./compose');","var map = require('./map');","","","/**"," * Returns the right-to-left Kleisli composition of the provided functions,"," * each of which must return a value of a type supported by [`chain`](#chain)."," *"," * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Function"," * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)"," * @param {...Function} ...functions The functions to compose"," * @return {Function}"," * @see R.pipeK"," * @example"," *"," *       //  get :: String -> Object -> Maybe *"," *       var get = R.curry((propName, obj) => Maybe(obj[propName]))"," *"," *       //  getStateCode :: Maybe String -> Maybe String"," *       var getStateCode = R.composeK("," *         R.compose(Maybe.of, R.toUpper),"," *         get('state'),"," *         get('address'),"," *         get('user'),"," *       );"," *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")"," *       getStateCode({}); //=> Maybe.Nothing()"," * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))"," */","module.exports = function composeK() {","  if (arguments.length === 0) {","    throw new Error('composeK requires at least one argument');","  }","  var init = Array.prototype.slice.call(arguments);","  var last = init.pop();","  return compose(compose.apply(this, map(chain, init)), last);","};",""],"l":{"1":1,"2":1,"3":1,"36":1,"37":0,"38":0,"40":0,"41":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/composeP.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/composeP.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"composeP","line":39,"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":39,"column":0},"end":{"line":44,"column":2}},"4":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"5":{"start":{"line":41,"column":4},"end":{"line":41,"column":63}},"6":{"start":{"line":43,"column":2},"end":{"line":43,"column":47}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["var pipeP = require('./pipeP');","var reverse = require('./reverse');","","","/**"," * Performs right-to-left composition of one or more Promise-returning"," * functions. The rightmost function may have any arity; the remaining"," * functions must be unary."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category Function"," * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)"," * @param {...Function} functions The functions to compose"," * @return {Function}"," * @see R.pipeP"," * @example"," *"," *      var db = {"," *        users: {"," *          JOE: {"," *            name: 'Joe',"," *            followers: ['STEVE', 'SUZY']"," *          }"," *        }"," *      }"," *"," *      // We'll pretend to do a db lookup which returns a promise"," *      var lookupUser = (userId) => Promise.resolve(db.users[userId])"," *      var lookupFollowers = (user) => Promise.resolve(user.followers)"," *      lookupUser('JOE').then(lookupFollowers)"," *"," *      //  followersForUser :: String -> Promise [UserId]"," *      var followersForUser = R.composeP(lookupFollowers, lookupUser);"," *      followersForUser('JOE').then(followers => console.log('Followers:', followers))"," *      // Followers: [\"STEVE\",\"SUZY\"]"," */","module.exports = function composeP() {","  if (arguments.length === 0) {","    throw new Error('composeP requires at least one argument');","  }","  return pipeP.apply(this, reverse(arguments));","};",""],"l":{"1":1,"2":1,"39":1,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pipeP.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pipeP.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pipeP","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":25,"column":0},"end":{"line":31,"column":2}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":60}},"8":{"start":{"line":29,"column":2},"end":{"line":30,"column":63}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["var _arity = require('./internal/_arity');","var _pipeP = require('./internal/_pipeP');","var reduce = require('./reduce');","var tail = require('./tail');","","","/**"," * Performs left-to-right composition of one or more Promise-returning"," * functions. The leftmost function may have any arity; the remaining functions"," * must be unary."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category Function"," * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)"," * @param {...Function} functions"," * @return {Function}"," * @see R.composeP"," * @example"," *"," *      //  followersForUser :: String -> Promise [User]"," *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);"," */","module.exports = function pipeP() {","  if (arguments.length === 0) {","    throw new Error('pipeP requires at least one argument');","  }","  return _arity(arguments[0].length,","                reduce(_pipeP, arguments[0], tail(arguments)));","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"25":1,"26":0,"27":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_pipeP.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_pipeP.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"_pipeP","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":39}}},"2":{"name":"(anonymous_2)","line":2,"loc":{"start":{"line":2,"column":9},"end":{"line":2,"column":20}}},"3":{"name":"(anonymous_3)","line":4,"loc":{"start":{"line":4,"column":40},"end":{"line":4,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":7,"column":4}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":19}},"4":{"start":{"line":4,"column":4},"end":{"line":6,"column":7}},"5":{"start":{"line":5,"column":6},"end":{"line":5,"column":28}}},"branchMap":{},"code":["module.exports = function _pipeP(f, g) {","  return function() {","    var ctx = this;","    return f.apply(ctx, arguments).then(function(x) {","      return g.call(ctx, x);","    });","  };","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"5":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/concat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"concat","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":33,"column":0},"end":{"line":41,"column":3}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":80}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":58}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":21}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":15}},{"start":{"line":34,"column":19},"end":{"line":34,"column":41}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":17}},{"start":{"line":37,"column":21},"end":{"line":37,"column":33}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isArray = require('./internal/_isArray');","var _isFunction = require('./internal/_isFunction');","var toString = require('./toString');","","","/**"," * Returns the result of concatenating the given lists or strings."," *"," * Note: `R.concat` expects both arguments to be of the same type,"," * unlike the native `Array.prototype.concat` method. It will throw"," * an error if you `concat` an Array with a non-Array value."," *"," * Dispatches to the `concat` method of the first argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [a] -> [a]"," * @sig String -> String -> String"," * @param {Array|String} firstList The first list"," * @param {Array|String} secondList The second list"," * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of"," * `secondList`."," *"," * @example"," *"," *      R.concat('ABC', 'DEF'); // 'ABCDEF'"," *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]"," *      R.concat([], []); //=> []"," */","module.exports = _curry2(function concat(a, b) {","  if (a == null || !_isFunction(a.concat)) {","    throw new TypeError(toString(a) + ' does not have a method named \"concat\"');","  }","  if (_isArray(a) && !_isArray(b)) {","    throw new TypeError(toString(b) + ' is not an array');","  }","  return a.concat(b);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"33":1,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toString.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toString.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"toString","line":41,"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":41,"column":0},"end":{"line":41,"column":80}},"4":{"start":{"line":41,"column":50},"end":{"line":41,"column":76}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var _toString = require('./internal/_toString');","","","/**"," * Returns the string representation of the given value. `eval`'ing the output"," * should result in a value equivalent to the input value. Many of the built-in"," * `toString` methods do not satisfy this requirement."," *"," * If the given value is an `[object Object]` with a `toString` method other"," * than `Object.prototype.toString`, this method is invoked with no arguments"," * to produce the return value. This means user-defined constructor functions"," * can provide a suitable `toString` method. For example:"," *"," *     function Point(x, y) {"," *       this.x = x;"," *       this.y = y;"," *     }"," *"," *     Point.prototype.toString = function() {"," *       return 'new Point(' + this.x + ', ' + this.y + ')';"," *     };"," *"," *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'"," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category String"," * @sig * -> String"," * @param {*} val"," * @return {String}"," * @example"," *"," *      R.toString(42); //=> '42'"," *      R.toString('abc'); //=> '\"abc\"'"," *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'"," *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'"," *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'"," */","module.exports = _curry1(function toString(val) { return _toString(val, []); });",""],"l":{"1":1,"2":1,"41":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_toString.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_toString.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_toString","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":45}}},"2":{"name":"recur","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":32}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":37}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":28}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":60},"end":{"line":24,"column":72}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"7":{"start":{"line":9,"column":0},"end":{"line":46,"column":2}},"8":{"start":{"line":10,"column":2},"end":{"line":13,"column":4}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":30}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"11":{"start":{"line":16,"column":2},"end":{"line":18,"column":4}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":95}},"13":{"start":{"line":17,"column":30},"end":{"line":17,"column":70}},"14":{"start":{"line":20,"column":2},"end":{"line":45,"column":3}},"15":{"start":{"line":22,"column":6},"end":{"line":22,"column":85}},"16":{"start":{"line":24,"column":6},"end":{"line":24,"column":129}},"17":{"start":{"line":24,"column":74},"end":{"line":24,"column":97}},"18":{"start":{"line":26,"column":6},"end":{"line":26,"column":94}},"19":{"start":{"line":28,"column":6},"end":{"line":28,"column":93}},"20":{"start":{"line":30,"column":6},"end":{"line":30,"column":20}},"21":{"start":{"line":32,"column":6},"end":{"line":32,"column":124}},"22":{"start":{"line":34,"column":6},"end":{"line":34,"column":90}},"23":{"start":{"line":36,"column":6},"end":{"line":36,"column":25}},"24":{"start":{"line":38,"column":6},"end":{"line":43,"column":7}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":32}},"26":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"27":{"start":{"line":41,"column":10},"end":{"line":41,"column":22}},"28":{"start":{"line":44,"column":6},"end":{"line":44,"column":57}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":30},"end":{"line":12,"column":42}},{"start":{"line":12,"column":45},"end":{"line":12,"column":61}}]},"2":{"line":20,"type":"switch","locations":[{"start":{"line":21,"column":4},"end":{"line":22,"column":85}},{"start":{"line":23,"column":4},"end":{"line":24,"column":129}},{"start":{"line":25,"column":4},"end":{"line":26,"column":94}},{"start":{"line":27,"column":4},"end":{"line":28,"column":93}},{"start":{"line":29,"column":4},"end":{"line":30,"column":20}},{"start":{"line":31,"column":4},"end":{"line":32,"column":124}},{"start":{"line":33,"column":4},"end":{"line":34,"column":90}},{"start":{"line":35,"column":4},"end":{"line":36,"column":25}},{"start":{"line":37,"column":4},"end":{"line":44,"column":57}}]},"3":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":78}},{"start":{"line":26,"column":81},"end":{"line":26,"column":93}}]},"4":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":49},"end":{"line":28,"column":59}},{"start":{"line":28,"column":62},"end":{"line":28,"column":85}}]},"5":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":37},"end":{"line":32,"column":77}},{"start":{"line":32,"column":80},"end":{"line":32,"column":123}}]},"6":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":102},"end":{"line":32,"column":106}},{"start":{"line":32,"column":109},"end":{"line":32,"column":123}}]},"7":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":37},"end":{"line":34,"column":77}},{"start":{"line":34,"column":80},"end":{"line":34,"column":89}}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]}},"code":["var _contains = require('./_contains');","var _map = require('./_map');","var _quote = require('./_quote');","var _toISOString = require('./_toISOString');","var keys = require('../keys');","var reject = require('../reject');","","","module.exports = function _toString(x, seen) {","  var recur = function recur(y) {","    var xs = seen.concat([x]);","    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);","  };","","  //  mapPairs :: (Object, [String]) -> [String]","  var mapPairs = function(obj, keys) {","    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());","  };","","  switch (Object.prototype.toString.call(x)) {","    case '[object Arguments]':","      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';","    case '[object Array]':","      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';","    case '[object Boolean]':","      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();","    case '[object Date]':","      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';","    case '[object Null]':","      return 'null';","    case '[object Number]':","      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);","    case '[object String]':","      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);","    case '[object Undefined]':","      return 'undefined';","    default:","      if (typeof x.toString === 'function') {","        var repr = x.toString();","        if (repr !== '[object Object]') {","          return repr;","        }","      }","      return '{' + mapPairs(x, keys(x)).join(', ') + '}';","  }","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"9":1,"10":0,"11":0,"12":0,"16":0,"17":0,"20":0,"22":0,"24":0,"26":0,"28":0,"30":0,"32":0,"34":0,"36":0,"38":0,"39":0,"40":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_contains.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_contains.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_contains","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":6,"column":2}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":35}}},"branchMap":{},"code":["var _indexOf = require('./_indexOf');","","","module.exports = function _contains(a, list) {","  return _indexOf(list, a, 0) >= 0;","};",""],"l":{"1":1,"4":1,"5":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_indexOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_indexOf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_indexOf","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":57,"column":2}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":16}},"4":{"start":{"line":7,"column":2},"end":{"line":48,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":47,"column":5}},"6":{"start":{"line":10,"column":8},"end":{"line":31,"column":9}},"7":{"start":{"line":12,"column":10},"end":{"line":12,"column":22}},"8":{"start":{"line":13,"column":10},"end":{"line":19,"column":11}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":29}},"10":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"11":{"start":{"line":16,"column":14},"end":{"line":16,"column":25}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":21}},"13":{"start":{"line":20,"column":10},"end":{"line":20,"column":20}},"14":{"start":{"line":21,"column":15},"end":{"line":31,"column":9}},"15":{"start":{"line":23,"column":10},"end":{"line":29,"column":11}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":29}},"17":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"18":{"start":{"line":26,"column":14},"end":{"line":26,"column":25}},"19":{"start":{"line":28,"column":12},"end":{"line":28,"column":21}},"20":{"start":{"line":30,"column":10},"end":{"line":30,"column":20}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"22":{"start":{"line":40,"column":8},"end":{"line":40,"column":36}},"23":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"24":{"start":{"line":45,"column":10},"end":{"line":45,"column":38}},"25":{"start":{"line":50,"column":2},"end":{"line":55,"column":3}},"26":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"27":{"start":{"line":52,"column":6},"end":{"line":52,"column":17}},"28":{"start":{"line":54,"column":4},"end":{"line":54,"column":13}},"29":{"start":{"line":56,"column":2},"end":{"line":56,"column":12}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":8,"type":"switch","locations":[{"start":{"line":9,"column":6},"end":{"line":33,"column":36}},{"start":{"line":36,"column":6},"end":{"line":36,"column":20}},{"start":{"line":37,"column":6},"end":{"line":37,"column":21}},{"start":{"line":38,"column":6},"end":{"line":38,"column":22}},{"start":{"line":39,"column":6},"end":{"line":40,"column":36}},{"start":{"line":42,"column":6},"end":{"line":46,"column":9}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":12}},{"start":{"line":15,"column":12},"end":{"line":15,"column":12}}]},"5":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":26}},{"start":{"line":15,"column":30},"end":{"line":15,"column":46}}]},"6":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":15},"end":{"line":21,"column":15}},{"start":{"line":21,"column":15},"end":{"line":21,"column":15}}]},"7":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"8":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":40}},{"start":{"line":25,"column":44},"end":{"line":25,"column":57}}]},"9":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"10":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["var equals = require('../equals');","","","module.exports = function _indexOf(list, a, idx) {","  var inf, item;","  // Array.prototype.indexOf doesn't exist below IE9","  if (typeof list.indexOf === 'function') {","    switch (typeof a) {","      case 'number':","        if (a === 0) {","          // manually crawl the list to distinguish between +0 and -0","          inf = 1 / a;","          while (idx < list.length) {","            item = list[idx];","            if (item === 0 && 1 / item === inf) {","              return idx;","            }","            idx += 1;","          }","          return -1;","        } else if (a !== a) {","          // NaN","          while (idx < list.length) {","            item = list[idx];","            if (typeof item === 'number' && item !== item) {","              return idx;","            }","            idx += 1;","          }","          return -1;","        }","        // non-zero numbers can utilise Set","        return list.indexOf(a, idx);","","      // all these types can utilise Set","      case 'string':","      case 'boolean':","      case 'function':","      case 'undefined':","        return list.indexOf(a, idx);","","      case 'object':","        if (a === null) {","          // null can utilise Set","          return list.indexOf(a, idx);","        }","    }","  }","  // anything else not covered above, defer to R.equals","  while (idx < list.length) {","    if (equals(list[idx], a)) {","      return idx;","    }","    idx += 1;","  }","  return -1;","};",""],"l":{"1":1,"4":1,"5":0,"7":0,"8":0,"10":0,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"28":0,"30":0,"33":0,"40":0,"43":0,"45":0,"50":0,"51":0,"52":0,"54":0,"56":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/equals.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/equals.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"equals","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":30,"column":0},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _equals = require('./internal/_equals');","","","/**"," * Returns `true` if its arguments are equivalent, `false` otherwise. Handles"," * cyclical data structures."," *"," * Dispatches symmetrically to the `equals` methods of both arguments, if"," * present."," *"," * @func"," * @memberOf R"," * @since v0.15.0"," * @category Relation"," * @sig a -> b -> Boolean"," * @param {*} a"," * @param {*} b"," * @return {Boolean}"," * @example"," *"," *      R.equals(1, 1); //=> true"," *      R.equals(1, '1'); //=> false"," *      R.equals([1, 2, 3], [1, 2, 3]); //=> true"," *"," *      var a = {}; a.v = a;"," *      var b = {}; b.v = b;"," *      R.equals(a, b); //=> true"," */","module.exports = _curry2(function equals(a, b) {","  return _equals(a, b, [], []);","});",""],"l":{"1":1,"2":1,"30":1,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_equals.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_equals.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_equals","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":57}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"7":{"start":{"line":9,"column":0},"end":{"line":109,"column":2}},"8":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":16}},"10":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"12":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"14":{"start":{"line":22,"column":2},"end":{"line":25,"column":3}},"15":{"start":{"line":23,"column":4},"end":{"line":24,"column":57}},"16":{"start":{"line":27,"column":2},"end":{"line":81,"column":3}},"17":{"start":{"line":31,"column":6},"end":{"line":34,"column":7}},"18":{"start":{"line":33,"column":8},"end":{"line":33,"column":23}},"19":{"start":{"line":35,"column":6},"end":{"line":35,"column":12}},"20":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":21}},"22":{"start":{"line":42,"column":6},"end":{"line":42,"column":12}},"23":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"24":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"25":{"start":{"line":47,"column":6},"end":{"line":47,"column":12}},"26":{"start":{"line":49,"column":6},"end":{"line":49,"column":58}},"27":{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},"28":{"start":{"line":57,"column":8},"end":{"line":57,"column":21}},"29":{"start":{"line":59,"column":6},"end":{"line":59,"column":12}},"30":{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},"31":{"start":{"line":63,"column":8},"end":{"line":63,"column":21}},"32":{"start":{"line":65,"column":6},"end":{"line":65,"column":12}},"33":{"start":{"line":75,"column":6},"end":{"line":75,"column":12}},"34":{"start":{"line":77,"column":6},"end":{"line":77,"column":12}},"35":{"start":{"line":80,"column":6},"end":{"line":80,"column":19}},"36":{"start":{"line":83,"column":2},"end":{"line":83,"column":22}},"37":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"38":{"start":{"line":85,"column":4},"end":{"line":85,"column":17}},"39":{"start":{"line":88,"column":2},"end":{"line":88,"column":30}},"40":{"start":{"line":89,"column":2},"end":{"line":94,"column":3}},"41":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"42":{"start":{"line":91,"column":6},"end":{"line":91,"column":31}},"43":{"start":{"line":93,"column":4},"end":{"line":93,"column":13}},"44":{"start":{"line":96,"column":2},"end":{"line":96,"column":17}},"45":{"start":{"line":97,"column":2},"end":{"line":97,"column":17}},"46":{"start":{"line":98,"column":2},"end":{"line":98,"column":25}},"47":{"start":{"line":99,"column":2},"end":{"line":105,"column":3}},"48":{"start":{"line":100,"column":4},"end":{"line":100,"column":25}},"49":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"50":{"start":{"line":102,"column":6},"end":{"line":102,"column":19}},"51":{"start":{"line":104,"column":4},"end":{"line":104,"column":13}},"52":{"start":{"line":106,"column":2},"end":{"line":106,"column":15}},"53":{"start":{"line":107,"column":2},"end":{"line":107,"column":15}},"54":{"start":{"line":108,"column":2},"end":{"line":108,"column":14}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"4":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":15}},{"start":{"line":18,"column":19},"end":{"line":18,"column":28}}]},"5":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"6":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":36}},{"start":{"line":22,"column":40},"end":{"line":22,"column":70}}]},"7":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":41}},{"start":{"line":23,"column":45},"end":{"line":23,"column":56}},{"start":{"line":24,"column":11},"end":{"line":24,"column":41}},{"start":{"line":24,"column":45},"end":{"line":24,"column":56}}]},"8":{"line":27,"type":"switch","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":21}},{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},{"start":{"line":30,"column":4},"end":{"line":35,"column":12}},{"start":{"line":36,"column":4},"end":{"line":36,"column":19}},{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},{"start":{"line":38,"column":4},"end":{"line":42,"column":12}},{"start":{"line":43,"column":4},"end":{"line":47,"column":12}},{"start":{"line":48,"column":4},"end":{"line":49,"column":58}},{"start":{"line":50,"column":4},"end":{"line":59,"column":12}},{"start":{"line":60,"column":4},"end":{"line":60,"column":15}},{"start":{"line":61,"column":4},"end":{"line":65,"column":12}},{"start":{"line":66,"column":4},"end":{"line":66,"column":21}},{"start":{"line":67,"column":4},"end":{"line":67,"column":22}},{"start":{"line":68,"column":4},"end":{"line":68,"column":29}},{"start":{"line":69,"column":4},"end":{"line":69,"column":22}},{"start":{"line":70,"column":4},"end":{"line":70,"column":23}},{"start":{"line":71,"column":4},"end":{"line":71,"column":22}},{"start":{"line":72,"column":4},"end":{"line":72,"column":23}},{"start":{"line":73,"column":4},"end":{"line":73,"column":24}},{"start":{"line":74,"column":4},"end":{"line":75,"column":12}},{"start":{"line":76,"column":4},"end":{"line":77,"column":12}},{"start":{"line":78,"column":4},"end":{"line":80,"column":19}}]},"9":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"10":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":45}},{"start":{"line":32,"column":10},"end":{"line":32,"column":52}}]},"11":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"12":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":33}},{"start":{"line":39,"column":37},"end":{"line":39,"column":72}}]},"13":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"14":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":30}},{"start":{"line":49,"column":34},"end":{"line":49,"column":57}}]},"15":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"16":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":33}},{"start":{"line":52,"column":12},"end":{"line":52,"column":33}},{"start":{"line":53,"column":12},"end":{"line":53,"column":41}},{"start":{"line":54,"column":12},"end":{"line":54,"column":39}},{"start":{"line":55,"column":12},"end":{"line":55,"column":33}},{"start":{"line":56,"column":12},"end":{"line":56,"column":35}}]},"17":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"18":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"19":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"20":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"21":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":22}},{"start":{"line":101,"column":26},"end":{"line":101,"column":65}}]}},"code":["var _arrayFromIterator = require('./_arrayFromIterator');","var _functionName = require('./_functionName');","var _has = require('./_has');","var identical = require('../identical');","var keys = require('../keys');","var type = require('../type');","","","module.exports = function _equals(a, b, stackA, stackB) {","  if (identical(a, b)) {","    return true;","  }","","  if (type(a) !== type(b)) {","    return false;","  }","","  if (a == null || b == null) {","    return false;","  }","","  if (typeof a.equals === 'function' || typeof b.equals === 'function') {","    return typeof a.equals === 'function' && a.equals(b) &&","           typeof b.equals === 'function' && b.equals(a);","  }","","  switch (type(a)) {","    case 'Arguments':","    case 'Array':","    case 'Object':","      if (typeof a.constructor === 'function' &&","          _functionName(a.constructor) === 'Promise') {","        return a === b;","      }","      break;","    case 'Boolean':","    case 'Number':","    case 'String':","      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {","        return false;","      }","      break;","    case 'Date':","      if (!identical(a.valueOf(), b.valueOf())) {","        return false;","      }","      break;","    case 'Error':","      return a.name === b.name && a.message === b.message;","    case 'RegExp':","      if (!(a.source === b.source &&","            a.global === b.global &&","            a.ignoreCase === b.ignoreCase &&","            a.multiline === b.multiline &&","            a.sticky === b.sticky &&","            a.unicode === b.unicode)) {","        return false;","      }","      break;","    case 'Map':","    case 'Set':","      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {","        return false;","      }","      break;","    case 'Int8Array':","    case 'Uint8Array':","    case 'Uint8ClampedArray':","    case 'Int16Array':","    case 'Uint16Array':","    case 'Int32Array':","    case 'Uint32Array':","    case 'Float32Array':","    case 'Float64Array':","      break;","    case 'ArrayBuffer':","      break;","    default:","      // Values of other types are only equal if identical.","      return false;","  }","","  var keysA = keys(a);","  if (keysA.length !== keys(b).length) {","    return false;","  }","","  var idx = stackA.length - 1;","  while (idx >= 0) {","    if (stackA[idx] === a) {","      return stackB[idx] === b;","    }","    idx -= 1;","  }","","  stackA.push(a);","  stackB.push(b);","  idx = keysA.length - 1;","  while (idx >= 0) {","    var key = keysA[idx];","    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {","      return false;","    }","    idx -= 1;","  }","  stackA.pop();","  stackB.pop();","  return true;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"9":1,"10":0,"11":0,"14":0,"15":0,"18":0,"19":0,"22":0,"23":0,"27":0,"31":0,"33":0,"35":0,"39":0,"40":0,"42":0,"44":0,"45":0,"47":0,"49":0,"51":0,"57":0,"59":0,"62":0,"63":0,"65":0,"75":0,"77":0,"80":0,"83":0,"84":0,"85":0,"88":0,"89":0,"90":0,"91":0,"93":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"104":0,"106":0,"107":0,"108":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_arrayFromIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_arrayFromIterator.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_arrayFromIterator","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":16}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":11}},"4":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":26}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":14}}},"branchMap":{},"code":["module.exports = function _arrayFromIterator(iter) {","  var list = [];","  var next;","  while (!(next = iter.next()).done) {","    list.push(next.value);","  }","  return list;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"5":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_functionName.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_functionName.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_functionName","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":49}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":39}}},"branchMap":{"1":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":25},"end":{"line":4,"column":27}},{"start":{"line":4,"column":30},"end":{"line":4,"column":38}}]}},"code":["module.exports = function _functionName(f) {","  // String(x => x) evaluates to \"x => x\", so the pattern may not match.","  var match = String(f).match(/^function (\\w*)/);","  return match == null ? '' : match[1];","};",""],"l":{"1":1,"3":0,"4":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/identical.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/identical.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"identical","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":27,"column":0},"end":{"line":36,"column":3}},"3":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":38}},"5":{"start":{"line":34,"column":4},"end":{"line":34,"column":30}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":18}},{"start":{"line":31,"column":22},"end":{"line":31,"column":37}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":18}},{"start":{"line":34,"column":22},"end":{"line":34,"column":29}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns true if its arguments are identical, false otherwise. Values are"," * identical if they reference the same memory. `NaN` is identical to `NaN`;"," * `0` and `-0` are not identical."," *"," * @func"," * @memberOf R"," * @since v0.15.0"," * @category Relation"," * @sig a -> a -> Boolean"," * @param {*} a"," * @param {*} b"," * @return {Boolean}"," * @example"," *"," *      var o = {};"," *      R.identical(o, o); //=> true"," *      R.identical(1, 1); //=> true"," *      R.identical(1, '1'); //=> false"," *      R.identical([], []); //=> false"," *      R.identical(0, -0); //=> false"," *      R.identical(NaN, NaN); //=> true"," */","module.exports = _curry2(function identical(a, b) {","  // SameValue algorithm","  if (a === b) { // Steps 1-5, 7-10","    // Steps 6.b-6.e: +0 != -0","    return a !== 0 || 1 / a === 1 / b;","  } else {","    // Step 6.a: NaN == NaN","    return a !== a && b !== b;","  }","});",""],"l":{"1":1,"27":1,"29":0,"31":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_quote.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_quote.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_quote","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":10,"column":27}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":50}}},"branchMap":{},"code":["module.exports = function _quote(s) {","  var escaped = s","    .replace(/\\\\/g, '\\\\\\\\')","    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace","    .replace(/\\f/g, '\\\\f')","    .replace(/\\n/g, '\\\\n')","    .replace(/\\r/g, '\\\\r')","    .replace(/\\t/g, '\\\\t')","    .replace(/\\v/g, '\\\\v')","    .replace(/\\0/g, '\\\\0');","","  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';","};",""],"l":{"1":1,"2":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_toISOString.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_toISOString.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0},"b":{"1":[0,0],"2":[1,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":29}}},"2":{"name":"pad","line":5,"loc":{"start":{"line":5,"column":12},"end":{"line":5,"column":28}}},"3":{"name":"_toISOString","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":8,"column":29}}},"4":{"name":"_toISOString","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":22,"column":5}},"2":{"start":{"line":5,"column":2},"end":{"line":5,"column":64}},"3":{"start":{"line":5,"column":30},"end":{"line":5,"column":61}},"4":{"start":{"line":7,"column":2},"end":{"line":21,"column":6}},"5":{"start":{"line":9,"column":6},"end":{"line":9,"column":29}},"6":{"start":{"line":12,"column":6},"end":{"line":20,"column":8}}},"branchMap":{"1":{"line":5,"type":"cond-expr","locations":[{"start":{"line":5,"column":47},"end":{"line":5,"column":50}},{"start":{"line":5,"column":53},"end":{"line":5,"column":55}}]},"2":{"line":7,"type":"cond-expr","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":11,"column":4},"end":{"line":21,"column":5}}]}},"code":["/**"," * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>."," */","module.exports = (function() {","  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };","","  return typeof Date.prototype.toISOString === 'function' ?","    function _toISOString(d) {","      return d.toISOString();","    } :","    function _toISOString(d) {","      return (","        d.getUTCFullYear() + '-' +","        pad(d.getUTCMonth() + 1) + '-' +","        pad(d.getUTCDate()) + 'T' +","        pad(d.getUTCHours()) + ':' +","        pad(d.getUTCMinutes()) + ':' +","        pad(d.getUTCSeconds()) + '.' +","        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'","      );","    };","}());",""],"l":{"4":1,"5":1,"7":1,"9":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reject.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"reject","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":47}}},"branchMap":{},"code":["var _complement = require('./internal/_complement');","var _curry2 = require('./internal/_curry2');","var filter = require('./filter');","","","/**"," * The complement of `filter`."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Filterable f => (a -> Boolean) -> f a -> f a"," * @param {Function} pred"," * @param {Array} filterable"," * @return {Array}"," * @see R.filter, R.transduce, R.addIndex"," * @example"," *"," *      var isOdd = (n) => n % 2 === 1;"," *"," *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]"," *"," *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}"," */","module.exports = _curry2(function reject(pred, filterable) {","  return filter(_complement(pred), filterable);","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_complement.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_complement.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_complement","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":41}}},"2":{"name":"(anonymous_2)","line":2,"loc":{"start":{"line":2,"column":9},"end":{"line":2,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":4}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":37}}},"branchMap":{},"code":["module.exports = function _complement(f) {","  return function() {","    return !f.apply(this, arguments);","  };","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/filter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":61},"end":{"line":36,"column":88}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":14},"end":{"line":39,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"8":{"start":{"line":36,"column":0},"end":{"line":48,"column":4}},"9":{"start":{"line":37,"column":2},"end":{"line":47,"column":4}},"10":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"11":{"start":{"line":41,"column":10},"end":{"line":41,"column":37}},"12":{"start":{"line":43,"column":8},"end":{"line":43,"column":19}}},"branchMap":{"1":{"line":38,"type":"cond-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":44,"column":30}},{"start":{"line":46,"column":6},"end":{"line":46,"column":31}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _filter = require('./internal/_filter');","var _isObject = require('./internal/_isObject');","var _reduce = require('./internal/_reduce');","var _xfilter = require('./internal/_xfilter');","var keys = require('./keys');","","","/**"," * Takes a predicate and a \"filterable\", and returns a new filterable of the"," * same type containing the members of the given filterable which satisfy the"," * given predicate."," *"," * Dispatches to the `filter` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Filterable f => (a -> Boolean) -> f a -> f a"," * @param {Function} pred"," * @param {Array} filterable"," * @return {Array}"," * @see R.reject, R.transduce, R.addIndex"," * @example"," *"," *      var isEven = n => n % 2 === 0;"," *"," *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]"," *"," *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}"," */","module.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {","  return (","    _isObject(filterable) ?","      _reduce(function(acc, key) {","        if (pred(filterable[key])) {","          acc[key] = filterable[key];","        }","        return acc;","      }, {}, keys(filterable)) :","    // else","      _filter(pred, filterable)","  );","}));",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"36":1,"37":0,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_filter.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_filter","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":14}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":24}},"4":{"start":{"line":4,"column":2},"end":{"line":4,"column":18}},"5":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"7":{"start":{"line":8,"column":6},"end":{"line":8,"column":40}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":13}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":16}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]}},"code":["module.exports = function _filter(fn, list) {","  var idx = 0;","  var len = list.length;","  var result = [];","","  while (idx < len) {","    if (fn(list[idx])) {","      result[result.length] = list[idx];","    }","    idx += 1;","  }","  return result;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"6":0,"7":0,"8":0,"10":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isObject.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_isObject","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":65}}},"branchMap":{},"code":["module.exports = function _isObject(x) {","  return Object.prototype.toString.call(x) === '[object Object]';","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfilter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XFilter","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":26}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":43},"end":{"line":12,"column":67}}},"4":{"name":"_xfilter","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":17,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":56}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":60}},"9":{"start":{"line":12,"column":2},"end":{"line":14,"column":4}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":80}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":74}},"12":{"start":{"line":16,"column":44},"end":{"line":16,"column":70}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":27},"end":{"line":13,"column":70}},{"start":{"line":13,"column":73},"end":{"line":13,"column":79}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XFilter(f, xf) {","    this.xf = xf;","    this.f = f;","  }","  XFilter.prototype['@@transducer/init'] = _xfBase.init;","  XFilter.prototype['@@transducer/result'] = _xfBase.result;","  XFilter.prototype['@@transducer/step'] = function(result, input) {","    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;","  };","","  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"10":1,"11":1,"12":1,"13":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/cond.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/cond.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"cond","line":34,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":46}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":25},"end":{"line":37,"column":40}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":23},"end":{"line":38,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"6":{"start":{"line":34,"column":0},"end":{"line":47,"column":3}},"7":{"start":{"line":35,"column":2},"end":{"line":37,"column":76}},"8":{"start":{"line":37,"column":42},"end":{"line":37,"column":64}},"9":{"start":{"line":38,"column":2},"end":{"line":46,"column":5}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":16}},"11":{"start":{"line":40,"column":4},"end":{"line":45,"column":5}},"12":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"13":{"start":{"line":42,"column":8},"end":{"line":42,"column":52}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":15}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]}},"code":["var _arity = require('./internal/_arity');","var _curry1 = require('./internal/_curry1');","var map = require('./map');","var max = require('./max');","var reduce = require('./reduce');","","","/**"," * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic."," * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments"," * to `fn` are applied to each of the predicates in turn until one returns a"," * \"truthy\" value, at which point `fn` returns the result of applying its"," * arguments to the corresponding transformer. If none of the predicates"," * matches, `fn` returns undefined."," *"," * @func"," * @memberOf R"," * @since v0.6.0"," * @category Logic"," * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)"," * @param {Array} pairs A list of [predicate, transformer]"," * @return {Function}"," * @example"," *"," *      var fn = R.cond(["," *        [R.equals(0),   R.always('water freezes at 0°C')],"," *        [R.equals(100), R.always('water boils at 100°C')],"," *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']"," *      ]);"," *      fn(0); //=> 'water freezes at 0°C'"," *      fn(50); //=> 'nothing special happens at 50°C'"," *      fn(100); //=> 'water boils at 100°C'"," */","module.exports = _curry1(function cond(pairs) {","  var arity = reduce(max,","                     0,","                     map(function(pair) { return pair[0].length; }, pairs));","  return _arity(arity, function() {","    var idx = 0;","    while (idx < pairs.length) {","      if (pairs[idx][0].apply(this, arguments)) {","        return pairs[idx][1].apply(this, arguments);","      }","      idx += 1;","    }","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"34":1,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/construct.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/construct.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"construct","line":36,"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":36,"column":0},"end":{"line":38,"column":3}},"4":{"start":{"line":37,"column":2},"end":{"line":37,"column":35}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var constructN = require('./constructN');","","","/**"," * Wraps a constructor function inside a curried function that can be called"," * with the same arguments and returns the same type."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (* -> {*}) -> (* -> {*})"," * @param {Function} fn The constructor function to wrap."," * @return {Function} A wrapped, curried constructor function."," * @example"," *"," *      // Constructor function"," *      function Animal(kind) {"," *        this.kind = kind;"," *      };"," *      Animal.prototype.sighting = function() {"," *        return \"It's a \" + this.kind + \"!\";"," *      }"," *"," *      var AnimalConstructor = R.construct(Animal)"," *"," *      // Notice we no longer need the 'new' keyword:"," *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};"," *"," *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];"," *      var animalSighting = R.invoker(0, 'sighting');"," *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);"," *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]"," */","module.exports = _curry1(function construct(Fn) {","  return constructN(Fn.length, Fn);","});",""],"l":{"1":1,"2":1,"36":1,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/constructN.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/constructN.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"constructN","line":41,"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":52}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":11},"end":{"line":46,"column":22}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":23},"end":{"line":48,"column":72}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":41,"column":0},"end":{"line":62,"column":3}},"5":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"6":{"start":{"line":43,"column":4},"end":{"line":43,"column":67}},"7":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":46,"column":4},"end":{"line":46,"column":43}},"9":{"start":{"line":46,"column":24},"end":{"line":46,"column":40}},"10":{"start":{"line":48,"column":2},"end":{"line":61,"column":6}},"11":{"start":{"line":49,"column":4},"end":{"line":60,"column":5}},"12":{"start":{"line":50,"column":15},"end":{"line":50,"column":33}},"13":{"start":{"line":51,"column":15},"end":{"line":51,"column":37}},"14":{"start":{"line":52,"column":15},"end":{"line":52,"column":41}},"15":{"start":{"line":53,"column":15},"end":{"line":53,"column":45}},"16":{"start":{"line":54,"column":15},"end":{"line":54,"column":49}},"17":{"start":{"line":55,"column":15},"end":{"line":55,"column":53}},"18":{"start":{"line":56,"column":15},"end":{"line":56,"column":57}},"19":{"start":{"line":57,"column":15},"end":{"line":57,"column":61}},"20":{"start":{"line":58,"column":15},"end":{"line":58,"column":65}},"21":{"start":{"line":59,"column":15},"end":{"line":59,"column":69}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":49,"type":"switch","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":33}},{"start":{"line":51,"column":6},"end":{"line":51,"column":37}},{"start":{"line":52,"column":6},"end":{"line":52,"column":41}},{"start":{"line":53,"column":6},"end":{"line":53,"column":45}},{"start":{"line":54,"column":6},"end":{"line":54,"column":49}},{"start":{"line":55,"column":6},"end":{"line":55,"column":53}},{"start":{"line":56,"column":6},"end":{"line":56,"column":57}},{"start":{"line":57,"column":6},"end":{"line":57,"column":61}},{"start":{"line":58,"column":6},"end":{"line":58,"column":65}},{"start":{"line":59,"column":6},"end":{"line":59,"column":69}}]}},"code":["var _curry2 = require('./internal/_curry2');","var curry = require('./curry');","var nAry = require('./nAry');","","","/**"," * Wraps a constructor function inside a curried function that can be called"," * with the same arguments and returns the same type. The arity of the function"," * returned is specified to allow using variadic constructor functions."," *"," * @func"," * @memberOf R"," * @since v0.4.0"," * @category Function"," * @sig Number -> (* -> {*}) -> (* -> {*})"," * @param {Number} n The arity of the constructor function."," * @param {Function} Fn The constructor function to wrap."," * @return {Function} A wrapped, curried constructor function."," * @example"," *"," *      // Variadic Constructor function"," *      function Salad() {"," *        this.ingredients = arguments;"," *      };"," *      Salad.prototype.recipe = function() {"," *        var instructions = R.map((ingredient) => ("," *          'Add a whollop of ' + ingredient, this.ingredients)"," *        )"," *        return R.join('\\n', instructions)"," *      }"," *"," *      var ThreeLayerSalad = R.constructN(3, Salad)"," *"," *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments."," *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')"," *      console.log(salad.recipe());"," *      // Add a whollop of Mayonnaise"," *      // Add a whollop of Potato Chips"," *      // Add a whollop of Potato Ketchup"," */","module.exports = _curry2(function constructN(n, Fn) {","  if (n > 10) {","    throw new Error('Constructor with greater than ten arguments');","  }","  if (n === 0) {","    return function() { return new Fn(); };","  }","  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {","    switch (arguments.length) {","      case  1: return new Fn($0);","      case  2: return new Fn($0, $1);","      case  3: return new Fn($0, $1, $2);","      case  4: return new Fn($0, $1, $2, $3);","      case  5: return new Fn($0, $1, $2, $3, $4);","      case  6: return new Fn($0, $1, $2, $3, $4, $5);","      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);","      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);","      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);","      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);","    }","  }));","});",""],"l":{"1":1,"2":1,"3":1,"41":1,"42":0,"43":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/contains.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/contains.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"branchMap":{},"code":["var _contains = require('./internal/_contains');","var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if the specified value is equal, in `R.equals` terms, to at"," * least one element of the given list; `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig a -> [a] -> Boolean"," * @param {Object} a The item to compare against."," * @param {Array} list The array to consider."," * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise."," * @see R.any"," * @example"," *"," *      R.contains(3, [1, 2, 3]); //=> true"," *      R.contains(4, [1, 2, 3]); //=> false"," *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true"," *      R.contains([42], [[42]]); //=> true"," */","module.exports = _curry2(_contains);",""],"l":{"1":1,"2":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/converge.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/converge.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"converge","line":36,"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":55}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":54},"end":{"line":37,"column":65}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"7":{"start":{"line":36,"column":0},"end":{"line":44,"column":3}},"8":{"start":{"line":37,"column":2},"end":{"line":43,"column":5}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":25}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":23}},"11":{"start":{"line":40,"column":4},"end":{"line":42,"column":13}},"12":{"start":{"line":41,"column":6},"end":{"line":41,"column":37}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _map = require('./internal/_map');","var curryN = require('./curryN');","var max = require('./max');","var pluck = require('./pluck');","var reduce = require('./reduce');","","","/**"," * Accepts a converging function and a list of branching functions and returns"," * a new function. When invoked, this new function is applied to some"," * arguments, each branching function is applied to those same arguments. The"," * results of each branching function are passed as arguments to the converging"," * function to produce the return value."," *"," * @func"," * @memberOf R"," * @since v0.4.2"," * @category Function"," * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)"," * @param {Function} after A function. `after` will be invoked with the return values of"," *        `fn1` and `fn2` as its arguments."," * @param {Array} functions A list of functions."," * @return {Function} A new function."," * @see R.useWith"," * @example"," *"," *      var average = R.converge(R.divide, [R.sum, R.length])"," *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4"," *"," *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])"," *      strangeConcat(\"Yodel\") //=> \"YODELyodel\""," *"," * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))"," */","module.exports = _curry2(function converge(after, fns) {","  return curryN(reduce(max, 0, pluck('length', fns)), function() {","    var args = arguments;","    var context = this;","    return after.apply(context, _map(function(fn) {","      return fn.apply(context, args);","    }, fns));","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/countBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/countBy.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":26},"end":{"line":28,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":28,"column":0},"end":{"line":28,"column":70}},"3":{"start":{"line":28,"column":48},"end":{"line":28,"column":63}}},"branchMap":{},"code":["var reduceBy = require('./reduceBy');","","","/**"," * Counts the elements of a list according to how many match each value of a"," * key generated by the supplied function. Returns an object mapping the keys"," * produced by `fn` to the number of occurrences in the list. Note that all"," * keys are coerced to strings because of how JavaScript objects work."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig (a -> String) -> [a] -> {*}"," * @param {Function} fn The function used to map values to keys."," * @param {Array} list The list to count elements from."," * @return {Object} An object mapping keys to number of occurrences in the list."," * @example"," *"," *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];"," *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}"," *"," *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];"," *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}"," */","module.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);",""],"l":{"1":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduceBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduceBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"reduceBy","line":53,"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":52}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":19},"end":{"line":54,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"6":{"start":{"line":52,"column":0},"end":{"line":59,"column":6}},"7":{"start":{"line":54,"column":4},"end":{"line":58,"column":17}},"8":{"start":{"line":55,"column":6},"end":{"line":55,"column":27}},"9":{"start":{"line":56,"column":6},"end":{"line":56,"column":68}},"10":{"start":{"line":57,"column":6},"end":{"line":57,"column":17}}},"branchMap":{"1":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":42},"end":{"line":56,"column":50}},{"start":{"line":56,"column":53},"end":{"line":56,"column":61}}]}},"code":["var _curryN = require('./internal/_curryN');","var _dispatchable = require('./internal/_dispatchable');","var _has = require('./internal/_has');","var _reduce = require('./internal/_reduce');","var _xreduceBy = require('./internal/_xreduceBy');","","","/**"," * Groups the elements of the list according to the result of calling"," * the String-returning function `keyFn` on each element and reduces the elements"," * of each group to a single value via the reducer function `valueFn`."," *"," * This function is basically a more general `groupBy` function."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.20.0"," * @category List"," * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}"," * @param {Function} valueFn The function that reduces the elements of each group to a single"," *        value. Receives two values, accumulator for a particular group and the current element."," * @param {*} acc The (initial) accumulator value for each group."," * @param {Function} keyFn The function that maps the list's element into a key."," * @param {Array} list The array to group."," * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of"," *         `valueFn` for elements which produced that key when passed to `keyFn`."," * @see R.groupBy, R.reduce"," * @example"," *"," *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);"," *      var namesByGrade = reduceToNamesBy(function(student) {"," *        var score = student.score;"," *        return score < 65 ? 'F' :"," *               score < 70 ? 'D' :"," *               score < 80 ? 'C' :"," *               score < 90 ? 'B' : 'A';"," *      });"," *      var students = [{name: 'Lucy', score: 92},"," *                      {name: 'Drew', score: 85},"," *                      // ..."," *                      {name: 'Bart', score: 62}];"," *      namesByGrade(students);"," *      // {"," *      //   'A': ['Lucy'],"," *      //   'B': ['Drew']"," *      //   // ...,"," *      //   'F': ['Bart']"," *      // }"," */","module.exports = _curryN(4, [], _dispatchable([], _xreduceBy,","  function reduceBy(valueFn, valueAcc, keyFn, list) {","    return _reduce(function(acc, elt) {","      var key = keyFn(elt);","      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);","      return acc;","    }, {}, list);","  }));",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"52":1,"54":0,"55":0,"56":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xreduceBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xreduceBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XReduceBy","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":51}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":47},"end":{"line":15,"column":64}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":45},"end":{"line":29,"column":69}}},"5":{"name":"_xreduceBy","line":37,"loc":{"start":{"line":37,"column":17},"end":{"line":37,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":40,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":13,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":27}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":29}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":23}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":2},"end":{"line":14,"column":58}},"12":{"start":{"line":15,"column":2},"end":{"line":28,"column":4}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":12}},"14":{"start":{"line":17,"column":4},"end":{"line":25,"column":5}},"15":{"start":{"line":18,"column":6},"end":{"line":24,"column":7}},"16":{"start":{"line":19,"column":8},"end":{"line":19,"column":72}},"17":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"18":{"start":{"line":21,"column":10},"end":{"line":21,"column":48}},"19":{"start":{"line":22,"column":10},"end":{"line":22,"column":16}},"20":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"21":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"22":{"start":{"line":29,"column":2},"end":{"line":34,"column":4}},"23":{"start":{"line":30,"column":4},"end":{"line":30,"column":32}},"24":{"start":{"line":31,"column":4},"end":{"line":31,"column":64}},"25":{"start":{"line":32,"column":4},"end":{"line":32,"column":67}},"26":{"start":{"line":33,"column":4},"end":{"line":33,"column":18}},"27":{"start":{"line":36,"column":2},"end":{"line":39,"column":20}},"28":{"start":{"line":38,"column":19},"end":{"line":38,"column":70}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":39}},{"start":{"line":31,"column":43},"end":{"line":31,"column":63}}]}},"code":["var _curryN = require('./_curryN');","var _has = require('./_has');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XReduceBy(valueFn, valueAcc, keyFn, xf) {","    this.valueFn = valueFn;","    this.valueAcc = valueAcc;","    this.keyFn = keyFn;","    this.xf = xf;","    this.inputs = {};","  }","  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;","  XReduceBy.prototype['@@transducer/result'] = function(result) {","    var key;","    for (key in this.inputs) {","      if (_has(key, this.inputs)) {","        result = this.xf['@@transducer/step'](result, this.inputs[key]);","        if (result['@@transducer/reduced']) {","          result = result['@@transducer/value'];","          break;","        }","      }","    }","    this.inputs = null;","    return this.xf['@@transducer/result'](result);","  };","  XReduceBy.prototype['@@transducer/step'] = function(result, input) {","    var key = this.keyFn(input);","    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];","    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);","    return result;","  };","","  return _curryN(4, [],","                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {","                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);","                 });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"26":0,"27":0,"29":1,"30":0,"31":0,"32":0,"33":0,"36":1,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dec.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dec.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}}},"branchMap":{},"code":["var add = require('./add');","","","/**"," * Decrements its argument."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Math"," * @sig Number -> Number"," * @param {Number} n"," * @return {Number} n - 1"," * @see R.inc"," * @example"," *"," *      R.dec(42); //=> 41"," */","module.exports = add(-1);",""],"l":{"1":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/descend.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/descend.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"descend","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":29,"column":3}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":17}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":40}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":21}},{"start":{"line":28,"column":24},"end":{"line":28,"column":39}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":34},"end":{"line":28,"column":35}},{"start":{"line":28,"column":38},"end":{"line":28,"column":39}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Makes a descending comparator function out of a function that returns a value"," * that can be compared with `<` and `>`."," *"," * @func"," * @memberOf R"," * @since v0.23.0"," * @category Function"," * @sig Ord b => (a -> b) -> a -> a -> Number"," * @param {Function} fn A function of arity one that returns a value that can be compared"," * @param {*} a The first item to be compared."," * @param {*} b The second item to be compared."," * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`"," * @example"," *"," *      var byAge = R.descend(R.prop('age'));"," *      var people = ["," *        // ..."," *      ];"," *      var peopleByOldestFirst = R.sort(byAge, people);"," */","module.exports = _curry3(function descend(fn, a, b) {","  var aa = fn(a);","  var bb = fn(b);","  return aa > bb ? -1 : aa < bb ? 1 : 0;","});",""],"l":{"1":1,"25":1,"26":0,"27":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/defaultTo.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/defaultTo.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"defaultTo","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":26,"column":0},"end":{"line":28,"column":3}},"3":{"start":{"line":27,"column":2},"end":{"line":27,"column":38}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":32},"end":{"line":27,"column":33}},{"start":{"line":27,"column":36},"end":{"line":27,"column":37}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":18}},{"start":{"line":27,"column":22},"end":{"line":27,"column":29}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns the second argument if it is not `null`, `undefined` or `NaN`"," * otherwise the first argument is returned."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category Logic"," * @sig a -> b -> a | b"," * @param {a} default The default value."," * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`."," * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value"," * @example"," *"," *      var defaultTo42 = R.defaultTo(42);"," *"," *      defaultTo42(null);  //=> 42"," *      defaultTo42(undefined);  //=> 42"," *      defaultTo42('Ramda');  //=> 'Ramda'"," *      // parseInt('string') results in NaN"," *      defaultTo42(parseInt('string')); //=> 42"," */","module.exports = _curry2(function defaultTo(d, v) {","  return v == null || v !== v ? d : v;","});",""],"l":{"1":1,"26":1,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/difference.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/difference.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"difference","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":25,"column":0},"end":{"line":36,"column":3}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":15}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"7":{"start":{"line":29,"column":2},"end":{"line":34,"column":3}},"8":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"9":{"start":{"line":31,"column":6},"end":{"line":31,"column":35}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":13}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":13}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":38}},{"start":{"line":30,"column":42},"end":{"line":30,"column":69}}]}},"code":["var _contains = require('./internal/_contains');","var _curry2 = require('./internal/_curry2');","","","/**"," * Finds the set (i.e. no duplicates) of all elements in the first list not"," * contained in the second list. Objects and Arrays are compared are compared"," * in terms of value equality, not reference equality."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig [*] -> [*] -> [*]"," * @param {Array} list1 The first list."," * @param {Array} list2 The second list."," * @return {Array} The elements in `list1` that are not in `list2`."," * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith"," * @example"," *"," *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]"," *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]"," *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]"," */","module.exports = _curry2(function difference(first, second) {","  var out = [];","  var idx = 0;","  var firstLen = first.length;","  while (idx < firstLen) {","    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {","      out[out.length] = first[idx];","    }","    idx += 1;","  }","  return out;","});",""],"l":{"1":1,"2":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/differenceWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/differenceWith.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"differenceWith","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":70}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":27,"column":0},"end":{"line":39,"column":3}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":15}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"7":{"start":{"line":31,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":27}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":13}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":48}},{"start":{"line":33,"column":8},"end":{"line":33,"column":45}}]}},"code":["var _containsWith = require('./internal/_containsWith');","var _curry3 = require('./internal/_curry3');","","","/**"," * Finds the set (i.e. no duplicates) of all elements in the first list not"," * contained in the second list. Duplication is determined according to the"," * value returned by applying the supplied predicate to two list elements."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]"," * @param {Function} pred A predicate used to test whether two items are equal."," * @param {Array} list1 The first list."," * @param {Array} list2 The second list."," * @return {Array} The elements in `list1` that are not in `list2`."," * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith"," * @example"," *"," *      var cmp = (x, y) => x.a === y.a;"," *      var l1 = [{a: 1}, {a: 2}, {a: 3}];"," *      var l2 = [{a: 3}, {a: 4}];"," *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]"," */","module.exports = _curry3(function differenceWith(pred, first, second) {","  var out = [];","  var idx = 0;","  var firstLen = first.length;","  while (idx < firstLen) {","    if (!_containsWith(pred, first[idx], second) &&","        !_containsWith(pred, first[idx], out)) {","      out.push(first[idx]);","    }","    idx += 1;","  }","  return out;","});",""],"l":{"1":1,"2":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_containsWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_containsWith.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_containsWith","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":12,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":14}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":24}},"4":{"start":{"line":5,"column":2},"end":{"line":10,"column":3}},"5":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"6":{"start":{"line":7,"column":6},"end":{"line":7,"column":18}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":13}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":15}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]}},"code":["module.exports = function _containsWith(pred, x, list) {","  var idx = 0;","  var len = list.length;","","  while (idx < len) {","    if (pred(x, list[idx])) {","      return true;","    }","    idx += 1;","  }","  return false;","};",""],"l":{"1":1,"2":0,"3":0,"5":0,"6":0,"7":0,"9":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dissoc.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dissoc.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"dissoc","line":20,"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":20,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"4":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":22}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":16}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a new object that does not contain a `prop` property."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category Object"," * @sig String -> {k: v} -> {k: v}"," * @param {String} prop The name of the property to dissociate"," * @param {Object} obj The object to clone"," * @return {Object} A new object equivalent to the original but without the specified property"," * @see R.assoc"," * @example"," *"," *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}"," */","module.exports = _curry2(function dissoc(prop, obj) {","  var result = {};","  for (var p in obj) {","    result[p] = obj[p];","  }","  delete result[prop];","  return result;","});",""],"l":{"1":1,"20":1,"21":0,"22":0,"23":0,"25":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dissocPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dissocPath.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dissocPath","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":24,"column":0},"end":{"line":35,"column":3}},"5":{"start":{"line":25,"column":2},"end":{"line":34,"column":3}},"6":{"start":{"line":27,"column":6},"end":{"line":27,"column":17}},"7":{"start":{"line":29,"column":6},"end":{"line":29,"column":34}},"8":{"start":{"line":31,"column":6},"end":{"line":31,"column":25}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":53}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":85}}},"branchMap":{"1":{"line":25,"type":"switch","locations":[{"start":{"line":26,"column":4},"end":{"line":27,"column":17}},{"start":{"line":28,"column":4},"end":{"line":29,"column":34}},{"start":{"line":30,"column":4},"end":{"line":33,"column":85}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":33},"end":{"line":33,"column":36}},{"start":{"line":33,"column":39},"end":{"line":33,"column":84}}]}},"code":["var _curry2 = require('./internal/_curry2');","var assoc = require('./assoc');","var dissoc = require('./dissoc');","","","/**"," * Makes a shallow clone of an object, omitting the property at the given path."," * Note that this copies and flattens prototype properties onto the new object"," * as well. All non-primitive properties are copied by reference."," *"," * @func"," * @memberOf R"," * @since v0.11.0"," * @category Object"," * @sig [String] -> {k: v} -> {k: v}"," * @param {Array} path The path to the value to omit"," * @param {Object} obj The object to clone"," * @return {Object} A new object without the property at path"," * @see R.assocPath"," * @example"," *"," *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}"," */","module.exports = _curry2(function dissocPath(path, obj) {","  switch (path.length) {","    case 0:","      return obj;","    case 1:","      return dissoc(path[0], obj);","    default:","      var head = path[0];","      var tail = Array.prototype.slice.call(path, 1);","      return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);","  }","});",""],"l":{"1":1,"2":1,"3":1,"24":1,"25":0,"27":0,"29":0,"31":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/divide.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/divide.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"divide","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":66}},"3":{"start":{"line":26,"column":49},"end":{"line":26,"column":62}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Divides two numbers. Equivalent to `a / b`."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Math"," * @sig Number -> Number -> Number"," * @param {Number} a The first value."," * @param {Number} b The second value."," * @return {Number} The result of `a / b`."," * @see R.multiply"," * @example"," *"," *      R.divide(71, 100); //=> 0.71"," *"," *      var half = R.divide(R.__, 2);"," *      half(42); //=> 21"," *"," *      var reciprocal = R.divide(1);"," *      reciprocal(4);   //=> 0.25"," */","module.exports = _curry2(function divide(a, b) { return a / b; });",""],"l":{"1":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/drop.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/drop.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"drop","line":31,"loc":{"start":{"line":31,"column":57},"end":{"line":31,"column":78}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":31,"column":0},"end":{"line":33,"column":4}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":45}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xdrop = require('./internal/_xdrop');","var slice = require('./slice');","","","/**"," * Returns all but the first `n` elements of the given list, string, or"," * transducer/transformer (or object with a `drop` method)."," *"," * Dispatches to the `drop` method of the second argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Number -> [a] -> [a]"," * @sig Number -> String -> String"," * @param {Number} n"," * @param {[a]} list"," * @return {[a]} A copy of list without the first `n` elements"," * @see R.take, R.transduce, R.dropLast, R.dropWhile"," * @example"," *"," *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']"," *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']"," *      R.drop(3, ['foo', 'bar', 'baz']); //=> []"," *      R.drop(4, ['foo', 'bar', 'baz']); //=> []"," *      R.drop(3, 'ramda');               //=> 'da'"," */","module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {","  return slice(Math.max(0, n), Infinity, xs);","}));",""],"l":{"1":1,"2":1,"3":1,"4":1,"31":1,"32":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdrop.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdrop.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XDrop","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":24}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":41},"end":{"line":12,"column":65}}},"4":{"name":"_xdrop","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":58}},"9":{"start":{"line":12,"column":2},"end":{"line":18,"column":4}},"10":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"11":{"start":{"line":14,"column":6},"end":{"line":14,"column":18}},"12":{"start":{"line":15,"column":6},"end":{"line":15,"column":20}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":55}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":70}},"15":{"start":{"line":20,"column":42},"end":{"line":20,"column":66}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XDrop(n, xf) {","    this.xf = xf;","    this.n = n;","  }","  XDrop.prototype['@@transducer/init'] = _xfBase.init;","  XDrop.prototype['@@transducer/result'] = _xfBase.result;","  XDrop.prototype['@@transducer/step'] = function(result, input) {","    if (this.n > 0) {","      this.n -= 1;","      return result;","    }","    return this.xf['@@transducer/step'](result, input);","  };","","  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropLast.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropLast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":67}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _dropLast = require('./internal/_dropLast');","var _xdropLast = require('./internal/_xdropLast');","","","/**"," * Returns a list containing all but the last `n` elements of the given `list`."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category List"," * @sig Number -> [a] -> [a]"," * @sig Number -> String -> String"," * @param {Number} n The number of elements of `list` to skip."," * @param {Array} list The list of elements to consider."," * @return {Array} A copy of the list with only the first `list.length - n` elements"," * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile"," * @example"," *"," *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']"," *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']"," *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []"," *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []"," *      R.dropLast(3, 'ramda');               //=> 'ra'"," */","module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));",""],"l":{"1":1,"2":1,"3":1,"4":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_dropLast.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_dropLast.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dropLast","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":53}}},"branchMap":{"1":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":30},"end":{"line":4,"column":43}},{"start":{"line":4,"column":46},"end":{"line":4,"column":47}}]}},"code":["var take = require('../take');","","module.exports = function dropLast(n, xs) {","  return take(n < xs.length ? xs.length - n : 0, xs);","};",""],"l":{"1":1,"3":1,"4":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/take.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/take.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"take","line":50,"loc":{"start":{"line":50,"column":57},"end":{"line":50,"column":78}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":50,"column":0},"end":{"line":52,"column":4}},"6":{"start":{"line":51,"column":2},"end":{"line":51,"column":44}}},"branchMap":{"1":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":26},"end":{"line":51,"column":34}},{"start":{"line":51,"column":37},"end":{"line":51,"column":38}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xtake = require('./internal/_xtake');","var slice = require('./slice');","","","/**"," * Returns the first `n` elements of the given list, string, or"," * transducer/transformer (or object with a `take` method)."," *"," * Dispatches to the `take` method of the second argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Number -> [a] -> [a]"," * @sig Number -> String -> String"," * @param {Number} n"," * @param {*} list"," * @return {*}"," * @see R.drop"," * @example"," *"," *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']"," *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']"," *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']"," *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']"," *      R.take(3, 'ramda');               //=> 'ram'"," *"," *      var personnel = ["," *        'Dave Brubeck',"," *        'Paul Desmond',"," *        'Eugene Wright',"," *        'Joe Morello',"," *        'Gerry Mulligan',"," *        'Bob Bates',"," *        'Joe Dodge',"," *        'Ron Crotty'"," *      ];"," *"," *      var takeFive = R.take(5);"," *      takeFive(personnel);"," *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']"," * @symb R.take(-1, [a, b]) = [a, b]"," * @symb R.take(0, [a, b]) = []"," * @symb R.take(1, [a, b]) = [a]"," * @symb R.take(2, [a, b]) = [a, b]"," */","module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {","  return slice(0, n < 0 ? Infinity : n, xs);","}));",""],"l":{"1":1,"2":1,"3":1,"4":1,"50":1,"51":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xtake.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xtake.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XTake","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":24}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":41},"end":{"line":13,"column":65}}},"4":{"name":"_xtake","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":5,"column":0},"end":{"line":20,"column":5}},"5":{"start":{"line":6,"column":2},"end":{"line":10,"column":3}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":54}},"10":{"start":{"line":12,"column":2},"end":{"line":12,"column":58}},"11":{"start":{"line":13,"column":2},"end":{"line":17,"column":4}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}},"13":{"start":{"line":15,"column":4},"end":{"line":15,"column":82}},"14":{"start":{"line":16,"column":4},"end":{"line":16,"column":50}},"15":{"start":{"line":19,"column":2},"end":{"line":19,"column":70}},"16":{"start":{"line":19,"column":42},"end":{"line":19,"column":66}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":29},"end":{"line":15,"column":35}},{"start":{"line":15,"column":38},"end":{"line":15,"column":81}}]},"2":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":30},"end":{"line":16,"column":43}},{"start":{"line":16,"column":46},"end":{"line":16,"column":49}}]}},"code":["var _curry2 = require('./_curry2');","var _reduced = require('./_reduced');","var _xfBase = require('./_xfBase');","","module.exports = (function() {","  function XTake(n, xf) {","    this.xf = xf;","    this.n = n;","    this.i = 0;","  }","  XTake.prototype['@@transducer/init'] = _xfBase.init;","  XTake.prototype['@@transducer/result'] = _xfBase.result;","  XTake.prototype['@@transducer/step'] = function(result, input) {","    this.i += 1;","    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);","    return this.i >= this.n ? _reduced(ret) : ret;","  };","","  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":1,"7":0,"8":0,"9":0,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropLast.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropLast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XDropLast","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":28}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":48},"end":{"line":13,"column":65}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":45},"end":{"line":17,"column":69}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":30},"end":{"line":24,"column":46}}},"6":{"name":"_xdropLast","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":34,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":22}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":28}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":58}},"10":{"start":{"line":13,"column":2},"end":{"line":16,"column":4}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":20}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":50}},"13":{"start":{"line":17,"column":2},"end":{"line":23,"column":4}},"14":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"15":{"start":{"line":19,"column":6},"end":{"line":19,"column":72}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"17":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"18":{"start":{"line":24,"column":2},"end":{"line":31,"column":4}},"19":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}},"20":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"21":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"22":{"start":{"line":28,"column":6},"end":{"line":28,"column":19}},"23":{"start":{"line":29,"column":6},"end":{"line":29,"column":23}},"24":{"start":{"line":33,"column":2},"end":{"line":33,"column":78}},"25":{"start":{"line":33,"column":46},"end":{"line":33,"column":74}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XDropLast(n, xf) {","    this.xf = xf;","    this.pos = 0;","    this.full = false;","    this.acc = new Array(n);","  }","  XDropLast.prototype['@@transducer/init'] = _xfBase.init;","  XDropLast.prototype['@@transducer/result'] =  function(result) {","    this.acc = null;","    return this.xf['@@transducer/result'](result);","  };","  XDropLast.prototype['@@transducer/step'] = function(result, input) {","    if (this.full) {","      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);","    }","    this.store(input);","    return result;","  };","  XDropLast.prototype.store = function(input) {","    this.acc[this.pos] = input;","    this.pos += 1;","    if (this.pos === this.acc.length) {","      this.pos = 0;","      this.full = true;","    }","  };","","  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"12":1,"13":1,"14":0,"15":0,"17":1,"18":0,"19":0,"21":0,"22":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropLastWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropLastWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":77}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _dropLastWhile = require('./internal/_dropLastWhile');","var _xdropLastWhile = require('./internal/_xdropLastWhile');","","","/**"," * Returns a new list excluding all the tailing elements of a given list which"," * satisfy the supplied predicate function. It passes each value from the right"," * to the supplied predicate function, skipping elements until the predicate"," * function returns a `falsy` value. The predicate function is applied to one argument:"," * *(value)*."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> [a]"," * @param {Function} predicate The function to be called on each element"," * @param {Array} list The collection to iterate over."," * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`."," * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile"," * @example"," *"," *      var lteThree = x => x <= 3;"," *"," *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]"," */","module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));",""],"l":{"1":1,"2":1,"3":1,"4":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_dropLastWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_dropLastWhile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dropLastWhile","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":28}},"3":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":13}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":54}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":9},"end":{"line":3,"column":17}},{"start":{"line":3,"column":21},"end":{"line":3,"column":36}}]}},"code":["module.exports = function dropLastWhile(pred, list) {","  var idx = list.length - 1;","  while (idx >= 0 && pred(list[idx])) {","    idx -= 1;","  }","  return Array.prototype.slice.call(list, 0, idx + 1);","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"6":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropLastWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropLastWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XDropLastWhile","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":34}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":52},"end":{"line":12,"column":69}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":50},"end":{"line":16,"column":74}}},"5":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":59}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":36},"end":{"line":29,"column":60}}},"7":{"name":"_xdropLastWhile","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":5,"column":0},"end":{"line":35,"column":5}},"5":{"start":{"line":6,"column":2},"end":{"line":10,"column":3}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":16}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":23}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":63}},"10":{"start":{"line":12,"column":2},"end":{"line":15,"column":4}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":50}},"13":{"start":{"line":16,"column":2},"end":{"line":19,"column":4}},"14":{"start":{"line":17,"column":4},"end":{"line":18,"column":53}},"15":{"start":{"line":20,"column":2},"end":{"line":28,"column":4}},"16":{"start":{"line":21,"column":4},"end":{"line":25,"column":6}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":55}},"19":{"start":{"line":29,"column":2},"end":{"line":32,"column":4}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":30}},"21":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":90}},"23":{"start":{"line":34,"column":52},"end":{"line":34,"column":86}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":27},"end":{"line":17,"column":53}},{"start":{"line":18,"column":27},"end":{"line":18,"column":52}}]}},"code":["var _curry2 = require('./_curry2');","var _reduce = require('./_reduce');","var _xfBase = require('./_xfBase');","","module.exports = (function() {","  function XDropLastWhile(fn, xf) {","    this.f = fn;","    this.retained = [];","    this.xf = xf;","  }","  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;","  XDropLastWhile.prototype['@@transducer/result'] = function(result) {","    this.retained = null;","    return this.xf['@@transducer/result'](result);","  };","  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {","    return this.f(input) ? this.retain(result, input)","                         : this.flush(result, input);","  };","  XDropLastWhile.prototype.flush = function(result, input) {","    result = _reduce(","      this.xf['@@transducer/step'],","      result,","      this.retained","    );","    this.retained = [];","    return this.xf['@@transducer/step'](result, input);","  };","  XDropLastWhile.prototype.retain = function(result, input) {","    this.retained.push(input);","    return result;","  };","","  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":1,"7":0,"8":0,"9":0,"11":1,"12":1,"13":0,"14":0,"16":1,"17":0,"20":1,"21":0,"26":0,"27":0,"29":1,"30":0,"31":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropRepeats.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropRepeats.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":64}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":51}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":96}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var _dispatchable = require('./internal/_dispatchable');","var _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');","var dropRepeatsWith = require('./dropRepeatsWith');","var equals = require('./equals');","","","/**"," * Returns a new list without any consecutively repeating elements. `R.equals`"," * is used to determine equality."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category List"," * @sig [a] -> [a]"," * @param {Array} list The array to consider."," * @return {Array} `list` without repeating elements."," * @see R.transduce"," * @example"," *"," *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]"," */","module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropRepeatsWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropRepeatsWith.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XDropRepeatsWith","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":38}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":52},"end":{"line":15,"column":76}}},"4":{"name":"_xdropRepeatsWith","line":26,"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":27,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":21}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":32}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":65}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":69}},"11":{"start":{"line":15,"column":2},"end":{"line":24,"column":4}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":27}},"13":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"14":{"start":{"line":18,"column":6},"end":{"line":18,"column":33}},"15":{"start":{"line":19,"column":11},"end":{"line":21,"column":5}},"16":{"start":{"line":20,"column":6},"end":{"line":20,"column":24}},"17":{"start":{"line":22,"column":4},"end":{"line":22,"column":27}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":77}},"19":{"start":{"line":26,"column":2},"end":{"line":26,"column":98}},"20":{"start":{"line":26,"column":56},"end":{"line":26,"column":94}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":11},"end":{"line":19,"column":11}},{"start":{"line":19,"column":11},"end":{"line":19,"column":11}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":24},"end":{"line":23,"column":30}},{"start":{"line":23,"column":33},"end":{"line":23,"column":76}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XDropRepeatsWith(pred, xf) {","    this.xf = xf;","    this.pred = pred;","    this.lastValue = undefined;","    this.seenFirstValue = false;","  }","","  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;","  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;","  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {","    var sameAsLast = false;","    if (!this.seenFirstValue) {","      this.seenFirstValue = true;","    } else if (this.pred(this.lastValue, input)) {","      sameAsLast = true;","    }","    this.lastValue = input;","    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);","  };","","  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropRepeatsWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropRepeatsWith.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dropRepeatsWith","line":28,"loc":{"start":{"line":28,"column":62},"end":{"line":28,"column":99}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":64}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":28,"column":0},"end":{"line":42,"column":4}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":14}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"9":{"start":{"line":32,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"11":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"12":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":42}},"14":{"start":{"line":38,"column":6},"end":{"line":38,"column":15}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":16}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');","var last = require('./last');","","","/**"," * Returns a new list without any consecutively repeating elements. Equality is"," * determined by applying the supplied predicate to each pair of consecutive elements. The"," * first element in a series of equal elements will be preserved."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category List"," * @sig (a, a -> Boolean) -> [a] -> [a]"," * @param {Function} pred A predicate used to test whether two items are equal."," * @param {Array} list The array to consider."," * @return {Array} `list` without repeating elements."," * @see R.transduce"," * @example"," *"," *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];"," *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]"," */","module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {","  var result = [];","  var idx = 1;","  var len = list.length;","  if (len !== 0) {","    result[0] = list[0];","    while (idx < len) {","      if (!pred(last(result), list[idx])) {","        result[result.length] = list[idx];","      }","      idx += 1;","    }","  }","  return result;","}));","",""],"l":{"1":1,"2":1,"3":1,"4":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/last.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/last.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}}},"branchMap":{},"code":["var nth = require('./nth');","","","/**"," * Returns the last element of the given list or string."," *"," * @func"," * @memberOf R"," * @since v0.1.4"," * @category List"," * @sig [a] -> a | Undefined"," * @sig String -> String"," * @param {*} list"," * @return {*}"," * @see R.init, R.head, R.tail"," * @example"," *"," *      R.last(['fi', 'fo', 'fum']); //=> 'fum'"," *      R.last([]); //=> undefined"," *"," *      R.last('abc'); //=> 'c'"," *      R.last(''); //=> ''"," */","module.exports = nth(-1);",""],"l":{"1":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/nth.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/nth.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"nth","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":31,"column":0},"end":{"line":34,"column":3}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":55}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":56}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":25},"end":{"line":32,"column":45}},{"start":{"line":32,"column":48},"end":{"line":32,"column":54}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":27},"end":{"line":33,"column":43}},{"start":{"line":33,"column":46},"end":{"line":33,"column":55}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isString = require('./internal/_isString');","","","/**"," * Returns the nth element of the given list or string. If n is negative the"," * element at index length + n is returned."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Number -> [a] -> a | Undefined"," * @sig Number -> String -> String"," * @param {Number} offset"," * @param {*} list"," * @return {*}"," * @example"," *"," *      var list = ['foo', 'bar', 'baz', 'quux'];"," *      R.nth(1, list); //=> 'bar'"," *      R.nth(-1, list); //=> 'quux'"," *      R.nth(-99, list); //=> undefined"," *"," *      R.nth(2, 'abc'); //=> 'c'"," *      R.nth(3, 'abc'); //=> ''"," * @symb R.nth(-1, [a, b, c]) = c"," * @symb R.nth(0, [a, b, c]) = a"," * @symb R.nth(1, [a, b, c]) = b"," */","module.exports = _curry2(function nth(offset, list) {","  var idx = offset < 0 ? list.length + offset : offset;","  return _isString(list) ? list.charAt(idx) : list[idx];","});",""],"l":{"1":1,"2":1,"31":1,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/dropWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dropWhile","line":31,"loc":{"start":{"line":31,"column":67},"end":{"line":31,"column":98}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":31,"column":0},"end":{"line":38,"column":4}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":24}},"7":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":47}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":9},"end":{"line":34,"column":18}},{"start":{"line":34,"column":22},"end":{"line":34,"column":37}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xdropWhile = require('./internal/_xdropWhile');","","","/**"," * Returns a new list excluding the leading elements of a given list which"," * satisfy the supplied predicate function. It passes each value to the supplied"," * predicate function, skipping elements while the predicate function returns"," * `true`. The predicate function is applied to one argument: *(value)*."," *"," * Dispatches to the `dropWhile` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> [a]"," * @param {Function} fn The function called per iteration."," * @param {Array} list The collection to iterate over."," * @return {Array} A new array."," * @see R.takeWhile, R.transduce, R.addIndex"," * @example"," *"," *      var lteTwo = x => x <= 2;"," *"," *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]"," */","module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {","  var idx = 0;","  var len = list.length;","  while (idx < len && pred(list[idx])) {","    idx += 1;","  }","  return Array.prototype.slice.call(list, idx);","}));",""],"l":{"1":1,"2":1,"3":1,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xdropWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XDropWhile","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":29}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":70}}},"4":{"name":"_xdropWhile","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":23,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":59}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":63}},"9":{"start":{"line":12,"column":2},"end":{"line":20,"column":4}},"10":{"start":{"line":13,"column":4},"end":{"line":18,"column":5}},"11":{"start":{"line":14,"column":6},"end":{"line":16,"column":7}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":22}},"13":{"start":{"line":17,"column":6},"end":{"line":17,"column":20}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":55}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":80}},"16":{"start":{"line":22,"column":47},"end":{"line":22,"column":76}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XDropWhile(f, xf) {","    this.xf = xf;","    this.f = f;","  }","  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;","  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;","  XDropWhile.prototype['@@transducer/step'] = function(result, input) {","    if (this.f) {","      if (this.f(input)) {","        return result;","      }","      this.f = null;","    }","    return this.xf['@@transducer/step'](result, input);","  };","","  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"17":0,"19":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/either.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/either.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"either","line":34,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":47}}},"2":{"name":"_either","line":36,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"5":{"start":{"line":34,"column":0},"end":{"line":40,"column":3}},"6":{"start":{"line":35,"column":2},"end":{"line":39,"column":19}},"7":{"start":{"line":37,"column":6},"end":{"line":37,"column":66}}},"branchMap":{"1":{"line":35,"type":"cond-expr","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":39,"column":4},"end":{"line":39,"column":18}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":13},"end":{"line":37,"column":37}},{"start":{"line":37,"column":41},"end":{"line":37,"column":65}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isFunction = require('./internal/_isFunction');","var lift = require('./lift');","var or = require('./or');","","","/**"," * A function wrapping calls to the two functions in an `||` operation,"," * returning the result of the first function if it is truth-y and the result"," * of the second function otherwise. Note that this is short-circuited,"," * meaning that the second function will not be invoked if the first returns a"," * truth-y value."," *"," * In addition to functions, `R.either` also accepts any fantasy-land compatible"," * applicative functor."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category Logic"," * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)"," * @param {Function} f a predicate"," * @param {Function} g another predicate"," * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together."," * @see R.or"," * @example"," *"," *      var gt10 = x => x > 10;"," *      var even = x => x % 2 === 0;"," *      var f = R.either(gt10, even);"," *      f(101); //=> true"," *      f(8); //=> true"," */","module.exports = _curry2(function either(f, g) {","  return _isFunction(f) ?","    function _either() {","      return f.apply(this, arguments) || g.apply(this, arguments);","    } :","    lift(or)(f, g);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"34":1,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/or.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/or.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"or","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":16}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":9},"end":{"line":25,"column":10}},{"start":{"line":25,"column":14},"end":{"line":25,"column":15}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if one or both of its arguments are `true`. Returns `false`"," * if both arguments are `false`."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Logic"," * @sig a -> b -> a | b"," * @param {Any} a"," * @param {Any} b"," * @return {Any} the first argument if truthy, otherwise the second argument."," * @see R.either"," * @example"," *"," *      R.or(true, true); //=> true"," *      R.or(true, false); //=> true"," *      R.or(false, true); //=> true"," *      R.or(false, false); //=> false"," */","module.exports = _curry2(function or(a, b) {","  return a || b;","});",""],"l":{"1":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/empty.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/empty.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"empty","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":43}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":7},"end":{"line":43,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":54}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"6":{"start":{"line":30,"column":0},"end":{"line":47,"column":3}},"7":{"start":{"line":31,"column":2},"end":{"line":46,"column":4}},"8":{"start":{"line":43,"column":20},"end":{"line":43,"column":37}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":15}},{"start":{"line":34,"column":4},"end":{"line":45,"column":12}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":5},"end":{"line":32,"column":14}},{"start":{"line":32,"column":18},"end":{"line":32,"column":47}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":27}},{"start":{"line":36,"column":4},"end":{"line":45,"column":12}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":5},"end":{"line":34,"column":14}},{"start":{"line":34,"column":18},"end":{"line":34,"column":39}},{"start":{"line":34,"column":43},"end":{"line":34,"column":84}}]},"5":{"line":36,"type":"cond-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":8}},{"start":{"line":38,"column":4},"end":{"line":45,"column":12}}]},"6":{"line":38,"type":"cond-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":8}},{"start":{"line":40,"column":4},"end":{"line":45,"column":12}}]},"7":{"line":40,"type":"cond-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":8}},{"start":{"line":42,"column":4},"end":{"line":45,"column":12}}]},"8":{"line":42,"type":"cond-expr","locations":[{"start":{"line":43,"column":7},"end":{"line":43,"column":41}},{"start":{"line":45,"column":6},"end":{"line":45,"column":12}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _isArguments = require('./internal/_isArguments');","var _isArray = require('./internal/_isArray');","var _isObject = require('./internal/_isObject');","var _isString = require('./internal/_isString');","","","/**"," * Returns the empty value of its argument's type. Ramda defines the empty"," * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other"," * types are supported if they define `<Type>.empty` and/or"," * `<Type>.prototype.empty`."," *"," * Dispatches to the `empty` method of the first argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category Function"," * @sig a -> a"," * @param {*} x"," * @return {*}"," * @example"," *"," *      R.empty(Just(42));      //=> Nothing()"," *      R.empty([1, 2, 3]);     //=> []"," *      R.empty('unicorns');    //=> ''"," *      R.empty({x: 1, y: 2});  //=> {}"," */","module.exports = _curry1(function empty(x) {","  return (","    (x != null && typeof x.empty === 'function') ?","      x.empty() :","    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?","      x.constructor.empty() :","    _isArray(x) ?","      [] :","    _isString(x) ?","      '' :","    _isObject(x) ?","      {} :","    _isArguments(x) ?","      (function() { return arguments; }()) :","    // else","      void 0","  );","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"30":1,"31":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/eqBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/eqBy.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"eqBy","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":28}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var equals = require('./equals');","","","/**"," * Takes a function and two values in its domain and returns `true` if the"," * values map to the same value in the codomain; `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.18.0"," * @category Relation"," * @sig (a -> b) -> a -> a -> Boolean"," * @param {Function} f"," * @param {*} x"," * @param {*} y"," * @return {Boolean}"," * @example"," *"," *      R.eqBy(Math.abs, 5, -5); //=> true"," */","module.exports = _curry3(function eqBy(f, x, y) {","  return equals(f(x), f(y));","});",""],"l":{"1":1,"2":1,"22":1,"23":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/eqProps.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/eqProps.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"eqProps","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":26,"column":0},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":40}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var equals = require('./equals');","","","/**"," * Reports whether two objects have the same value, in `R.equals` terms, for"," * the specified property. Useful as a curried predicate."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig k -> {k: v} -> {k: v} -> Boolean"," * @param {String} prop The name of the property to compare"," * @param {Object} obj1"," * @param {Object} obj2"," * @return {Boolean}"," *"," * @example"," *"," *      var o1 = { a: 1, b: 2, c: 3, d: 4 };"," *      var o2 = { a: 10, b: 20, c: 3, d: 40 };"," *      R.eqProps('a', o1, o2); //=> false"," *      R.eqProps('c', o1, o2); //=> true"," */","module.exports = _curry3(function eqProps(prop, obj1, obj2) {","  return equals(obj1[prop], obj2[prop]);","});",""],"l":{"1":1,"2":1,"26":1,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/evolve.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/evolve.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"evolve","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":66}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":31,"column":0},"end":{"line":42,"column":3}},"3":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":32}},"5":{"start":{"line":34,"column":2},"end":{"line":40,"column":3}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":42}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":33}},"8":{"start":{"line":37,"column":4},"end":{"line":39,"column":68}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":16}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":56},"end":{"line":37,"column":83}},{"start":{"line":38,"column":18},"end":{"line":39,"column":67}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":56},"end":{"line":38,"column":91}},{"start":{"line":39,"column":56},"end":{"line":39,"column":67}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":18},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":53}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Creates a new object by recursively evolving a shallow copy of `object`,"," * according to the `transformation` functions. All non-primitive properties"," * are copied by reference."," *"," * A `transformation` function will not be invoked if its corresponding key"," * does not exist in the evolved object."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Object"," * @sig {k: (v -> v)} -> {k: v} -> {k: v}"," * @param {Object} transformations The object specifying transformation functions to apply"," *        to the object."," * @param {Object} object The object to be transformed."," * @return {Object} The transformed object."," * @example"," *"," *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};"," *      var transformations = {"," *        firstName: R.trim,"," *        lastName: R.trim, // Will not get invoked."," *        data: {elapsed: R.add(1), remaining: R.add(-1)}"," *      };"," *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}"," */","module.exports = _curry2(function evolve(transformations, object) {","  var result = {};","  var transformation, key, type;","  for (key in object) {","    transformation = transformations[key];","    type = typeof transformation;","    result[key] = type === 'function'                 ? transformation(object[key])","                : transformation && type === 'object' ? evolve(transformation, object[key])","                                                      : object[key];","  }","  return result;","});",""],"l":{"1":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/find.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"find","line":30,"loc":{"start":{"line":30,"column":57},"end":{"line":30,"column":81}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"4":{"start":{"line":30,"column":0},"end":{"line":39,"column":4}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"7":{"start":{"line":33,"column":2},"end":{"line":38,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"9":{"start":{"line":35,"column":6},"end":{"line":35,"column":23}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xfind = require('./internal/_xfind');","","","/**"," * Returns the first element of the list which matches the predicate, or"," * `undefined` if no element matches."," *"," * Dispatches to the `find` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> a | undefined"," * @param {Function} fn The predicate function used to determine if the element is the"," *        desired one."," * @param {Array} list The array to consider."," * @return {Object} The element found, or `undefined`."," * @see R.transduce"," * @example"," *"," *      var xs = [{a: 1}, {a: 2}, {a: 3}];"," *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}"," *      R.find(R.propEq('a', 4))(xs); //=> undefined"," */","module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {","  var idx = 0;","  var len = list.length;","  while (idx < len) {","    if (fn(list[idx])) {","      return list[idx];","    }","    idx += 1;","  }","}));",""],"l":{"1":1,"2":1,"3":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfind.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfind.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XFind","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":24}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":43},"end":{"line":13,"column":60}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":41},"end":{"line":19,"column":65}}},"5":{"name":"_xfind","line":27,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":28,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":23}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":54}},"10":{"start":{"line":13,"column":2},"end":{"line":18,"column":4}},"11":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":15,"column":6},"end":{"line":15,"column":60}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":50}},"14":{"start":{"line":19,"column":2},"end":{"line":25,"column":4}},"15":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"16":{"start":{"line":21,"column":6},"end":{"line":21,"column":24}},"17":{"start":{"line":22,"column":6},"end":{"line":22,"column":69}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"19":{"start":{"line":27,"column":2},"end":{"line":27,"column":70}},"20":{"start":{"line":27,"column":42},"end":{"line":27,"column":66}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _reduced = require('./_reduced');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XFind(f, xf) {","    this.xf = xf;","    this.f = f;","    this.found = false;","  }","  XFind.prototype['@@transducer/init'] = _xfBase.init;","  XFind.prototype['@@transducer/result'] = function(result) {","    if (!this.found) {","      result = this.xf['@@transducer/step'](result, void 0);","    }","    return this.xf['@@transducer/result'](result);","  };","  XFind.prototype['@@transducer/step'] = function(result, input) {","    if (this.f(input)) {","      this.found = true;","      result = _reduced(this.xf['@@transducer/step'](result, input));","    }","    return result;","  };","","  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"12":1,"13":1,"14":0,"15":0,"17":0,"19":1,"20":0,"21":0,"22":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/findIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/findIndex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"findIndex","line":28,"loc":{"start":{"line":28,"column":56},"end":{"line":28,"column":85}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":28,"column":0},"end":{"line":38,"column":4}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"7":{"start":{"line":31,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"9":{"start":{"line":33,"column":6},"end":{"line":33,"column":17}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":12}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xfindIndex = require('./internal/_xfindIndex');","","","/**"," * Returns the index of the first element of the list which matches the"," * predicate, or `-1` if no element matches."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category List"," * @sig (a -> Boolean) -> [a] -> Number"," * @param {Function} fn The predicate function used to determine if the element is the"," * desired one."," * @param {Array} list The array to consider."," * @return {Number} The index of the element found, or `-1`."," * @see R.transduce"," * @example"," *"," *      var xs = [{a: 1}, {a: 2}, {a: 3}];"," *      R.findIndex(R.propEq('a', 2))(xs); //=> 1"," *      R.findIndex(R.propEq('a', 4))(xs); //=> -1"," */","module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {","  var idx = 0;","  var len = list.length;","  while (idx < len) {","    if (fn(list[idx])) {","      return idx;","    }","    idx += 1;","  }","  return -1;","}));",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfindIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfindIndex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XFindIndex","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":48},"end":{"line":14,"column":65}}},"4":{"name":"(anonymous_4)","line":20,"loc":{"start":{"line":20,"column":46},"end":{"line":20,"column":70}}},"5":{"name":"_xfindIndex","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":30,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":12,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":18}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":23}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":59}},"11":{"start":{"line":14,"column":2},"end":{"line":19,"column":4}},"12":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"13":{"start":{"line":16,"column":6},"end":{"line":16,"column":56}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":50}},"15":{"start":{"line":20,"column":2},"end":{"line":27,"column":4}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"17":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"18":{"start":{"line":23,"column":6},"end":{"line":23,"column":24}},"19":{"start":{"line":24,"column":6},"end":{"line":24,"column":72}},"20":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"21":{"start":{"line":29,"column":2},"end":{"line":29,"column":80}},"22":{"start":{"line":29,"column":47},"end":{"line":29,"column":76}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _reduced = require('./_reduced');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XFindIndex(f, xf) {","    this.xf = xf;","    this.f = f;","    this.idx = -1;","    this.found = false;","  }","  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;","  XFindIndex.prototype['@@transducer/result'] = function(result) {","    if (!this.found) {","      result = this.xf['@@transducer/step'](result, -1);","    }","    return this.xf['@@transducer/result'](result);","  };","  XFindIndex.prototype['@@transducer/step'] = function(result, input) {","    this.idx += 1;","    if (this.f(input)) {","      this.found = true;","      result = _reduced(this.xf['@@transducer/step'](result, this.idx));","    }","    return result;","  };","","  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"13":1,"14":1,"15":0,"16":0,"18":0,"20":1,"21":0,"22":0,"23":0,"24":0,"26":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/findLast.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/findLast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"findLast","line":28,"loc":{"start":{"line":28,"column":55},"end":{"line":28,"column":83}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"4":{"start":{"line":28,"column":0},"end":{"line":36,"column":4}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"6":{"start":{"line":30,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"8":{"start":{"line":32,"column":6},"end":{"line":32,"column":23}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xfindLast = require('./internal/_xfindLast');","","","/**"," * Returns the last element of the list which matches the predicate, or"," * `undefined` if no element matches."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category List"," * @sig (a -> Boolean) -> [a] -> a | undefined"," * @param {Function} fn The predicate function used to determine if the element is the"," * desired one."," * @param {Array} list The array to consider."," * @return {Object} The element found, or `undefined`."," * @see R.transduce"," * @example"," *"," *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];"," *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}"," *      R.findLast(R.propEq('a', 4))(xs); //=> undefined"," */","module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {","  var idx = list.length - 1;","  while (idx >= 0) {","    if (fn(list[idx])) {","      return list[idx];","    }","    idx -= 1;","  }","}));",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0,"30":0,"31":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfindLast.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfindLast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XFindLast","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":28}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":47},"end":{"line":11,"column":64}}},"4":{"name":"(anonymous_4)","line":14,"loc":{"start":{"line":14,"column":45},"end":{"line":14,"column":69}}},"5":{"name":"_xfindLast","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":22,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":2},"end":{"line":13,"column":4}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":91}},"10":{"start":{"line":14,"column":2},"end":{"line":19,"column":4}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"12":{"start":{"line":16,"column":6},"end":{"line":16,"column":24}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":78}},"15":{"start":{"line":21,"column":46},"end":{"line":21,"column":74}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XFindLast(f, xf) {","    this.xf = xf;","    this.f = f;","  }","  XFindLast.prototype['@@transducer/init'] = _xfBase.init;","  XFindLast.prototype['@@transducer/result'] = function(result) {","    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));","  };","  XFindLast.prototype['@@transducer/step'] = function(result, input) {","    if (this.f(input)) {","      this.last = input;","    }","    return result;","  };","","  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"10":1,"11":1,"12":0,"14":1,"15":0,"16":0,"18":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/findLastIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/findLastIndex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"findLastIndex","line":28,"loc":{"start":{"line":28,"column":60},"end":{"line":28,"column":93}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"4":{"start":{"line":28,"column":0},"end":{"line":37,"column":4}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"6":{"start":{"line":30,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"8":{"start":{"line":32,"column":6},"end":{"line":32,"column":17}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":12}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xfindLastIndex = require('./internal/_xfindLastIndex');","","","/**"," * Returns the index of the last element of the list which matches the"," * predicate, or `-1` if no element matches."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category List"," * @sig (a -> Boolean) -> [a] -> Number"," * @param {Function} fn The predicate function used to determine if the element is the"," * desired one."," * @param {Array} list The array to consider."," * @return {Number} The index of the element found, or `-1`."," * @see R.transduce"," * @example"," *"," *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];"," *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1"," *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1"," */","module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {","  var idx = list.length - 1;","  while (idx >= 0) {","    if (fn(list[idx])) {","      return idx;","    }","    idx -= 1;","  }","  return -1;","}));",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfindLastIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xfindLastIndex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"XFindLastIndex","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":33}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":52},"end":{"line":13,"column":69}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":50},"end":{"line":16,"column":74}}},"5":{"name":"_xfindLastIndex","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":25,"column":5}},"4":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":15}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":18}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":22}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":63}},"10":{"start":{"line":13,"column":2},"end":{"line":15,"column":4}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":94}},"12":{"start":{"line":16,"column":2},"end":{"line":22,"column":4}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":18}},"14":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"15":{"start":{"line":19,"column":6},"end":{"line":19,"column":30}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":88}},"18":{"start":{"line":24,"column":51},"end":{"line":24,"column":84}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]}},"code":["var _curry2 = require('./_curry2');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XFindLastIndex(f, xf) {","    this.xf = xf;","    this.f = f;","    this.idx = -1;","    this.lastIdx = -1;","  }","  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;","  XFindLastIndex.prototype['@@transducer/result'] = function(result) {","    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));","  };","  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {","    this.idx += 1;","    if (this.f(input)) {","      this.lastIdx = this.idx;","    }","    return result;","  };","","  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });","}());",""],"l":{"1":1,"2":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"12":1,"13":1,"14":0,"16":1,"17":0,"18":0,"19":0,"21":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/flatten.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/flatten.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var _makeFlat = require('./internal/_makeFlat');","","","/**"," * Returns a new list by pulling every item out of it (and all its sub-arrays)"," * and putting them in a new array, depth-first."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [b]"," * @param {Array} list The array to consider."," * @return {Array} The flattened list."," * @see R.unnest"," * @example"," *"," *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);"," *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]"," */","module.exports = _curry1(_makeFlat(true));",""],"l":{"1":1,"2":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/flip.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/flip.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"flip","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":43}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":25,"column":0},"end":{"line":32,"column":3}},"4":{"start":{"line":26,"column":2},"end":{"line":31,"column":5}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":56}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":16}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":32}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var curry = require('./curry');","","","/**"," * Returns a new function much like the supplied one, except that the first two"," * arguments' order is reversed."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)"," * @param {Function} fn The function to invoke with its first two parameters reversed."," * @return {*} The result of invoking `fn` with its first two parameters' order reversed."," * @example"," *"," *      var mergeThree = (a, b, c) => [].concat(a, b, c);"," *"," *      mergeThree(1, 2, 3); //=> [1, 2, 3]"," *"," *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]"," * @symb R.flip(f)(a, b, c) = f(b, a, c)"," */","module.exports = _curry1(function flip(fn) {","  return curry(function(a, b) {","    var args = Array.prototype.slice.call(arguments, 0);","    args[0] = b;","    args[1] = a;","    return fn.apply(this, args);","  });","});",""],"l":{"1":1,"2":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/forEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/forEach.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"forEach","line":39,"loc":{"start":{"line":39,"column":52},"end":{"line":39,"column":79}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":39,"column":0},"end":{"line":47,"column":4}},"4":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"5":{"start":{"line":41,"column":2},"end":{"line":41,"column":14}},"6":{"start":{"line":42,"column":2},"end":{"line":45,"column":3}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":18}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":13}},"9":{"start":{"line":46,"column":2},"end":{"line":46,"column":14}}},"branchMap":{},"code":["var _checkForMethod = require('./internal/_checkForMethod');","var _curry2 = require('./internal/_curry2');","","","/**"," * Iterate over an input `list`, calling a provided function `fn` for each"," * element in the list."," *"," * `fn` receives one argument: *(value)*."," *"," * Note: `R.forEach` does not skip deleted or unassigned indices (sparse"," * arrays), unlike the native `Array.prototype.forEach` method. For more"," * details on this behavior, see:"," * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description"," *"," * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns"," * the original array. In some libraries this function is named `each`."," *"," * Dispatches to the `forEach` method of the second argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category List"," * @sig (a -> *) -> [a] -> [a]"," * @param {Function} fn The function to invoke. Receives one argument, `value`."," * @param {Array} list The list to iterate over."," * @return {Array} The original list."," * @see R.addIndex"," * @example"," *"," *      var printXPlusFive = x => console.log(x + 5);"," *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]"," *      // logs 6"," *      // logs 7"," *      // logs 8"," * @symb R.forEach(f, [a, b, c]) = [a, b, c]"," */","module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {","  var len = list.length;","  var idx = 0;","  while (idx < len) {","    fn(list[idx]);","    idx += 1;","  }","  return list;","}));",""],"l":{"1":1,"2":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/forEachObjIndexed.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/forEachObjIndexed.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"forEachObjIndexed","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":27,"column":0},"end":{"line":36,"column":3}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"6":{"start":{"line":30,"column":2},"end":{"line":34,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":27}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":13}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":13}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var keys = require('./keys');","","","/**"," * Iterate over an input `object`, calling a provided function `fn` for each"," * key and value in the object."," *"," * `fn` receives three argument: *(value, key, obj)*."," *"," * @func"," * @memberOf R"," * @since v0.23.0"," * @category Object"," * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a"," * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`."," * @param {Object} obj The object to iterate over."," * @return {Object} The original object."," * @example"," *"," *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);"," *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}"," *      // logs x:1"," *      // logs y:2"," * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}"," */","module.exports = _curry2(function forEachObjIndexed(fn, obj) {","  var keyList = keys(obj);","  var idx = 0;","  while (idx < keyList.length) {","    var key = keyList[idx];","    fn(obj[key], key, obj);","    idx += 1;","  }","  return obj;","});",""],"l":{"1":1,"2":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/fromPairs.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/fromPairs.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"fromPairs","line":20,"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":20,"column":0},"end":{"line":28,"column":3}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":14}},"5":{"start":{"line":23,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":42}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":13}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":16}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Creates a new object from a list key-value pairs. If a key appears in"," * multiple pairs, the rightmost pair is included in the object."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category List"," * @sig [[k,v]] -> {k: v}"," * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object."," * @return {Object} The object made by pairing up `keys` and `values`."," * @see R.toPairs, R.pair"," * @example"," *"," *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}"," */","module.exports = _curry1(function fromPairs(pairs) {","  var result = {};","  var idx = 0;","  while (idx < pairs.length) {","    result[pairs[idx][0]] = pairs[idx][1];","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/groupBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/groupBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":45,"loc":{"start":{"line":45,"column":61},"end":{"line":45,"column":81}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":45,"column":0},"end":{"line":51,"column":11}},"5":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"6":{"start":{"line":47,"column":4},"end":{"line":47,"column":13}},"7":{"start":{"line":49,"column":2},"end":{"line":49,"column":17}},"8":{"start":{"line":50,"column":2},"end":{"line":50,"column":13}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]}},"code":["var _checkForMethod = require('./internal/_checkForMethod');","var _curry2 = require('./internal/_curry2');","var reduceBy = require('./reduceBy');","","/**"," * Splits a list into sub-lists stored in an object, based on the result of"," * calling a String-returning function on each element, and grouping the"," * results according to values returned."," *"," * Dispatches to the `groupBy` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a -> String) -> [a] -> {String: [a]}"," * @param {Function} fn Function :: a -> String"," * @param {Array} list The array to group"," * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements"," *         that produced that key when passed to `fn`."," * @see R.transduce"," * @example"," *"," *      var byGrade = R.groupBy(function(student) {"," *        var score = student.score;"," *        return score < 65 ? 'F' :"," *               score < 70 ? 'D' :"," *               score < 80 ? 'C' :"," *               score < 90 ? 'B' : 'A';"," *      });"," *      var students = [{name: 'Abby', score: 84},"," *                      {name: 'Eddy', score: 58},"," *                      // ..."," *                      {name: 'Jack', score: 69}];"," *      byGrade(students);"," *      // {"," *      //   'A': [{name: 'Dianne', score: 99}],"," *      //   'B': [{name: 'Abby', score: 84}]"," *      //   // ...,"," *      //   'F': [{name: 'Eddy', score: 58}]"," *      // }"," */","module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {","  if (acc == null) {","    acc = [];","  }","  acc.push(item);","  return acc;","}, null)));",""],"l":{"1":1,"2":1,"3":1,"45":1,"46":0,"47":0,"49":0,"50":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/groupWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/groupWith.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":29,"column":0},"end":{"line":42,"column":3}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"6":{"start":{"line":33,"column":2},"end":{"line":40,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"8":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"9":{"start":{"line":36,"column":6},"end":{"line":36,"column":19}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":18}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":13}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":24}},{"start":{"line":35,"column":28},"end":{"line":35,"column":56}}]}},"code":["var _curry2 = require('./internal/_curry2');","","/**"," * Takes a list and returns a list of lists where each sublist's elements are"," * all \"equal\" according to the provided equality function."," *"," * @func"," * @memberOf R"," * @since v0.21.0"," * @category List"," * @sig ((a, a) → Boolean) → [a] → [[a]]"," * @param {Function} fn Function for determining whether two given (adjacent)"," *        elements should be in the same group"," * @param {Array} list The array to group. Also accepts a string, which will be"," *        treated as a list of characters."," * @return {List} A list that contains sublists of equal elements,"," *         whose concatenations are equal to the original list."," * @example"," *"," * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])"," * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]"," *"," * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])"," * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]"," *"," * R.groupWith(R.eqBy(isVowel), 'aestiou')"," * //=> ['ae', 'st', 'iou']"," */","module.exports = _curry2(function(fn, list) {","  var res = [];","  var idx = 0;","  var len = list.length;","  while (idx < len) {","    var nextidx = idx + 1;","    while (nextidx < len && fn(list[idx], list[nextidx])) {","      nextidx += 1;","    }","    res.push(list.slice(idx, nextidx));","    idx = nextidx;","  }","  return res;","});",""],"l":{"1":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/gt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/gt.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"gt","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"3":{"start":{"line":25,"column":45},"end":{"line":25,"column":58}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if the first argument is greater than the second; `false`"," * otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord a => a -> a -> Boolean"," * @param {*} a"," * @param {*} b"," * @return {Boolean}"," * @see R.lt"," * @example"," *"," *      R.gt(2, 1); //=> true"," *      R.gt(2, 2); //=> false"," *      R.gt(2, 3); //=> false"," *      R.gt('a', 'z'); //=> false"," *      R.gt('z', 'a'); //=> true"," */","module.exports = _curry2(function gt(a, b) { return a > b; });",""],"l":{"1":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/gte.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/gte.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"gte","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":64}},"3":{"start":{"line":25,"column":46},"end":{"line":25,"column":60}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if the first argument is greater than or equal to the second;"," * `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord a => a -> a -> Boolean"," * @param {Number} a"," * @param {Number} b"," * @return {Boolean}"," * @see R.lte"," * @example"," *"," *      R.gte(2, 1); //=> true"," *      R.gte(2, 2); //=> true"," *      R.gte(2, 3); //=> false"," *      R.gte('a', 'z'); //=> false"," *      R.gte('z', 'a'); //=> true"," */","module.exports = _curry2(function gte(a, b) { return a >= b; });",""],"l":{"1":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/has.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/has.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":29,"column":0},"end":{"line":29,"column":31}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _has = require('./internal/_has');","","","/**"," * Returns whether or not an object has an own property with the specified name"," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category Object"," * @sig s -> {s: x} -> Boolean"," * @param {String} prop The name of the property to check for."," * @param {Object} obj The object to query."," * @return {Boolean} Whether the property exists."," * @example"," *"," *      var hasName = R.has('name');"," *      hasName({name: 'alice'});   //=> true"," *      hasName({name: 'bob'});     //=> true"," *      hasName({});                //=> false"," *"," *      var point = {x: 0, y: 0};"," *      var pointHas = R.has(R.__, point);"," *      pointHas('x');  //=> true"," *      pointHas('y');  //=> true"," *      pointHas('z');  //=> false"," */","module.exports = _curry2(_has);",""],"l":{"1":1,"2":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/hasIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/hasIn.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"hasIn","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":30,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":31,"column":2},"end":{"line":31,"column":21}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns whether or not an object or its prototype chain has a property with"," * the specified name"," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category Object"," * @sig s -> {s: x} -> Boolean"," * @param {String} prop The name of the property to check for."," * @param {Object} obj The object to query."," * @return {Boolean} Whether the property exists."," * @example"," *"," *      function Rectangle(width, height) {"," *        this.width = width;"," *        this.height = height;"," *      }"," *      Rectangle.prototype.area = function() {"," *        return this.width * this.height;"," *      };"," *"," *      var square = new Rectangle(2, 2);"," *      R.hasIn('width', square);  //=> true"," *      R.hasIn('area', square);  //=> true"," */","module.exports = _curry2(function hasIn(prop, obj) {","  return prop in obj;","});",""],"l":{"1":1,"30":1,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/head.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/head.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":24}}},"branchMap":{},"code":["var nth = require('./nth');","","","/**"," * Returns the first element of the given list or string. In some libraries"," * this function is named `first`."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> a | Undefined"," * @sig String -> String"," * @param {Array|String} list"," * @return {*}"," * @see R.tail, R.init, R.last"," * @example"," *"," *      R.head(['fi', 'fo', 'fum']); //=> 'fi'"," *      R.head([]); //=> undefined"," *"," *      R.head('abc'); //=> 'a'"," *      R.head(''); //=> ''"," */","module.exports = nth(0);",""],"l":{"1":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/identity.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/identity.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var _identity = require('./internal/_identity');","","","/**"," * A function that does nothing but return the parameter supplied to it. Good"," * as a default or placeholder function."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig a -> a"," * @param {*} x The value to return."," * @return {*} The input value, `x`."," * @example"," *"," *      R.identity(1); //=> 1"," *"," *      var obj = {};"," *      R.identity(obj) === obj; //=> true"," * @symb R.identity(a) = a"," */","module.exports = _curry1(_identity);",""],"l":{"1":1,"2":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_identity.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_identity.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_identity","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":53}},"2":{"start":{"line":1,"column":41},"end":{"line":1,"column":50}}},"branchMap":{},"code":["module.exports = function _identity(x) { return x; };",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/ifElse.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/ifElse.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ifElse","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":69}}},"2":{"name":"_ifElse","line":32,"loc":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":30,"column":0},"end":{"line":36,"column":3}},"4":{"start":{"line":31,"column":2},"end":{"line":35,"column":4}},"5":{"start":{"line":33,"column":6},"end":{"line":33,"column":111}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":48},"end":{"line":33,"column":77}},{"start":{"line":33,"column":80},"end":{"line":33,"column":110}}]}},"code":["var _curry3 = require('./internal/_curry3');","var curryN = require('./curryN');","","","/**"," * Creates a function that will process either the `onTrue` or the `onFalse`"," * function depending upon the result of the `condition` predicate."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Logic"," * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)"," * @param {Function} condition A predicate function"," * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value."," * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value."," * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`"," *                    function depending upon the result of the `condition` predicate."," * @see R.unless, R.when"," * @example"," *"," *      var incCount = R.ifElse("," *        R.has('count'),"," *        R.over(R.lensProp('count'), R.inc),"," *        R.assoc('count', 1)"," *      );"," *      incCount({});           //=> { count: 1 }"," *      incCount({ count: 1 }); //=> { count: 2 }"," */","module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {","  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),","    function _ifElse() {","      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);","    }","  );","});",""],"l":{"1":1,"2":1,"30":1,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/inc.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/inc.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}}},"branchMap":{},"code":["var add = require('./add');","","","/**"," * Increments its argument."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Math"," * @sig Number -> Number"," * @param {Number} n"," * @return {Number} n + 1"," * @see R.dec"," * @example"," *"," *      R.inc(42); //=> 43"," */","module.exports = add(1);",""],"l":{"1":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/indexBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/indexBy.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":70}},"3":{"start":{"line":26,"column":48},"end":{"line":26,"column":60}}},"branchMap":{},"code":["var reduceBy = require('./reduceBy');","","","/**"," * Given a function that generates a key, turns a list of objects into an"," * object indexing the objects by the given key. Note that if multiple"," * objects generate the same value for the indexing key only the last value"," * will be included in the generated object."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}"," * @param {Function} fn Function :: a -> String"," * @param {Array} array The array of objects to index"," * @return {Object} An object indexing each array element by the given property."," * @example"," *"," *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];"," *      R.indexBy(R.prop('id'), list);"," *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}"," */","module.exports = reduceBy(function(acc, elem) { return elem; }, null);",""],"l":{"1":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/indexOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/indexOf.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"indexOf","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":25,"column":0},"end":{"line":29,"column":3}},"5":{"start":{"line":26,"column":2},"end":{"line":28,"column":28}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":22}},{"start":{"line":28,"column":4},"end":{"line":28,"column":27}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":41}},{"start":{"line":26,"column":45},"end":{"line":26,"column":58}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _indexOf = require('./internal/_indexOf');","var _isArray = require('./internal/_isArray');","","","/**"," * Returns the position of the first occurrence of an item in an array, or -1"," * if the item is not included in the array. `R.equals` is used to determine"," * equality."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig a -> [a] -> Number"," * @param {*} target The item to find."," * @param {Array} xs The array to search in."," * @return {Number} the index of the target, or -1 if the target is not found."," * @see R.lastIndexOf"," * @example"," *"," *      R.indexOf(3, [1,2,3,4]); //=> 2"," *      R.indexOf(10, [1,2,3,4]); //=> -1"," */","module.exports = _curry2(function indexOf(target, xs) {","  return typeof xs.indexOf === 'function' && !_isArray(xs) ?","    xs.indexOf(target) :","    _indexOf(xs, target, 0);","});",""],"l":{"1":1,"2":1,"3":1,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/init.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/init.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":28,"column":0},"end":{"line":28,"column":30}}},"branchMap":{},"code":["var slice = require('./slice');","","","/**"," * Returns all but the last element of the given list or string."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category List"," * @sig [a] -> [a]"," * @sig String -> String"," * @param {*} list"," * @return {*}"," * @see R.last, R.head, R.tail"," * @example"," *"," *      R.init([1, 2, 3]);  //=> [1, 2]"," *      R.init([1, 2]);     //=> [1]"," *      R.init([1]);        //=> []"," *      R.init([]);         //=> []"," *"," *      R.init('abc');  //=> 'ab'"," *      R.init('ab');   //=> 'a'"," *      R.init('a');    //=> ''"," *      R.init('');     //=> ''"," */","module.exports = slice(0, -1);",""],"l":{"1":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/insert.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/insert.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"insert","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":58}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":51}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":29}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":16}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":40},"end":{"line":23,"column":43}},{"start":{"line":23,"column":46},"end":{"line":23,"column":57}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},{"start":{"line":23,"column":29},"end":{"line":23,"column":37}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Inserts the supplied element into the list, at index `index`. _Note that"," * this is not destructive_: it returns a copy of the list with the changes."," * <small>No lists have been harmed in the application of this function.</small>"," *"," * @func"," * @memberOf R"," * @since v0.2.2"," * @category List"," * @sig Number -> a -> [a] -> [a]"," * @param {Number} index The position to insert the element"," * @param {*} elt The element to insert into the Array"," * @param {Array} list The list to insert into"," * @return {Array} A new Array with `elt` inserted at `index`."," * @example"," *"," *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]"," */","module.exports = _curry3(function insert(idx, elt, list) {","  idx = idx < list.length && idx >= 0 ? idx : list.length;","  var result = Array.prototype.slice.call(list, 0);","  result.splice(idx, 0, elt);","  return result;","});",""],"l":{"1":1,"22":1,"23":0,"24":0,"25":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/insertAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/insertAll.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"insertAll","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":58}},"4":{"start":{"line":24,"column":2},"end":{"line":26,"column":58}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":40},"end":{"line":23,"column":43}},{"start":{"line":23,"column":46},"end":{"line":23,"column":57}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},{"start":{"line":23,"column":29},"end":{"line":23,"column":37}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Inserts the sub-list into the list, at index `index`. _Note that this is not"," * destructive_: it returns a copy of the list with the changes."," * <small>No lists have been harmed in the application of this function.</small>"," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category List"," * @sig Number -> [a] -> [a] -> [a]"," * @param {Number} index The position to insert the sub-list"," * @param {Array} elts The sub-list to insert into the Array"," * @param {Array} list The list to insert the sub-list into"," * @return {Array} A new Array with `elts` inserted starting at `index`."," * @example"," *"," *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]"," */","module.exports = _curry3(function insertAll(idx, elts, list) {","  idx = idx < list.length && idx >= 0 ? idx : list.length;","  return [].concat(Array.prototype.slice.call(list, 0, idx),","                   elts,","                   Array.prototype.slice.call(list, idx));","});",""],"l":{"1":1,"22":1,"23":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/intersection.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/intersection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"intersection","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"6":{"start":{"line":25,"column":0},"end":{"line":35,"column":3}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":31}},"8":{"start":{"line":27,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":23}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":23}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":25}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":66}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]}},"code":["var _contains = require('./internal/_contains');","var _curry2 = require('./internal/_curry2');","var _filter = require('./internal/_filter');","var flip = require('./flip');","var uniq = require('./uniq');","","","/**"," * Combines two lists into a set (i.e. no duplicates) composed of those"," * elements common to both lists."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig [*] -> [*] -> [*]"," * @param {Array} list1 The first list."," * @param {Array} list2 The second list."," * @return {Array} The list of elements found in both `list1` and `list2`."," * @see R.intersectionWith"," * @example"," *"," *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]"," */","module.exports = _curry2(function intersection(list1, list2) {","  var lookupList, filteredList;","  if (list1.length > list2.length) {","    lookupList = list1;","    filteredList = list2;","  } else {","    lookupList = list2;","    filteredList = list1;","  }","  return uniq(_filter(flip(_contains)(lookupList), filteredList));","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"25":1,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uniq.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uniq.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"branchMap":{},"code":["var identity = require('./identity');","var uniqBy = require('./uniqBy');","","","/**"," * Returns a new list containing only one copy of each element in the original"," * list. `R.equals` is used to determine equality."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [a]"," * @param {Array} list The array to consider."," * @return {Array} The list of unique items."," * @example"," *"," *      R.uniq([1, 1, 2, 1]); //=> [1, 2]"," *      R.uniq([1, '1']);     //=> [1, '1']"," *      R.uniq([[42], [42]]); //=> [[42]]"," */","module.exports = uniqBy(identity);",""],"l":{"1":1,"2":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uniqBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uniqBy.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"uniqBy","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":23,"column":0},"end":{"line":38,"column":3}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"8":{"start":{"line":29,"column":2},"end":{"line":36,"column":3}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"11":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"12":{"start":{"line":33,"column":6},"end":{"line":33,"column":24}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]}},"code":["var _Set = require('./internal/_Set');","var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a new list containing only one copy of each element in the original"," * list, based upon the value returned by applying the supplied function to"," * each list element. Prefers the first item if the supplied function produces"," * the same value on two items. `R.equals` is used for comparison."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category List"," * @sig (a -> b) -> [a] -> [a]"," * @param {Function} fn A function used to produce a value to use during comparisons."," * @param {Array} list The array to consider."," * @return {Array} The list of unique items."," * @example"," *"," *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]"," */","module.exports = _curry2(function uniqBy(fn, list) {","  var set = new _Set();","  var result = [];","  var idx = 0;","  var appliedItem, item;","","  while (idx < list.length) {","    item = list[idx];","    appliedItem = fn(item);","    if (set.add(appliedItem)) {","      result.push(item);","    }","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"2":1,"23":1,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_Set.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_Set.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":29}}},"2":{"name":"_Set","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":18}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":23},"end":{"line":16,"column":38}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":38}}},"5":{"name":"hasOrAdd","line":38,"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":5,"column":0},"end":{"line":171,"column":5}},"3":{"start":{"line":6,"column":2},"end":{"line":10,"column":3}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":67}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":21}},"6":{"start":{"line":16,"column":2},"end":{"line":18,"column":4}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":39}},"8":{"start":{"line":24,"column":2},"end":{"line":26,"column":4}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":39}},"10":{"start":{"line":38,"column":2},"end":{"line":169,"column":3}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":27}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":26}},"13":{"start":{"line":41,"column":4},"end":{"line":168,"column":5}},"14":{"start":{"line":45,"column":8},"end":{"line":54,"column":9}},"15":{"start":{"line":46,"column":10},"end":{"line":53,"column":11}},"16":{"start":{"line":47,"column":12},"end":{"line":47,"column":24}},"17":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"18":{"start":{"line":50,"column":14},"end":{"line":50,"column":38}},"19":{"start":{"line":52,"column":12},"end":{"line":52,"column":25}},"20":{"start":{"line":56,"column":8},"end":{"line":80,"column":9}},"21":{"start":{"line":57,"column":10},"end":{"line":64,"column":11}},"22":{"start":{"line":58,"column":12},"end":{"line":58,"column":43}},"23":{"start":{"line":59,"column":12},"end":{"line":59,"column":37}},"24":{"start":{"line":60,"column":12},"end":{"line":60,"column":42}},"25":{"start":{"line":61,"column":12},"end":{"line":61,"column":40}},"26":{"start":{"line":63,"column":12},"end":{"line":63,"column":44}},"27":{"start":{"line":66,"column":10},"end":{"line":79,"column":11}},"28":{"start":{"line":67,"column":12},"end":{"line":70,"column":13}},"29":{"start":{"line":68,"column":14},"end":{"line":68,"column":36}},"30":{"start":{"line":69,"column":14},"end":{"line":69,"column":44}},"31":{"start":{"line":71,"column":12},"end":{"line":71,"column":25}},"32":{"start":{"line":72,"column":17},"end":{"line":79,"column":11}},"33":{"start":{"line":73,"column":12},"end":{"line":73,"column":24}},"34":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"35":{"start":{"line":76,"column":14},"end":{"line":76,"column":44}},"36":{"start":{"line":78,"column":12},"end":{"line":78,"column":25}},"37":{"start":{"line":85,"column":8},"end":{"line":100,"column":9}},"38":{"start":{"line":86,"column":10},"end":{"line":86,"column":34}},"39":{"start":{"line":87,"column":10},"end":{"line":94,"column":11}},"40":{"start":{"line":88,"column":12},"end":{"line":88,"column":24}},"41":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"42":{"start":{"line":91,"column":14},"end":{"line":91,"column":44}},"43":{"start":{"line":93,"column":12},"end":{"line":93,"column":25}},"44":{"start":{"line":96,"column":10},"end":{"line":98,"column":11}},"45":{"start":{"line":97,"column":12},"end":{"line":97,"column":68}},"46":{"start":{"line":99,"column":10},"end":{"line":99,"column":23}},"47":{"start":{"line":104,"column":8},"end":{"line":127,"column":9}},"48":{"start":{"line":105,"column":10},"end":{"line":112,"column":11}},"49":{"start":{"line":106,"column":12},"end":{"line":106,"column":43}},"50":{"start":{"line":107,"column":12},"end":{"line":107,"column":37}},"51":{"start":{"line":108,"column":12},"end":{"line":108,"column":42}},"52":{"start":{"line":109,"column":12},"end":{"line":109,"column":40}},"53":{"start":{"line":111,"column":12},"end":{"line":111,"column":44}},"54":{"start":{"line":114,"column":10},"end":{"line":119,"column":11}},"55":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"56":{"start":{"line":116,"column":14},"end":{"line":116,"column":40}},"57":{"start":{"line":118,"column":12},"end":{"line":118,"column":25}},"58":{"start":{"line":120,"column":10},"end":{"line":125,"column":11}},"59":{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},"60":{"start":{"line":122,"column":14},"end":{"line":122,"column":42}},"61":{"start":{"line":124,"column":12},"end":{"line":124,"column":25}},"62":{"start":{"line":126,"column":10},"end":{"line":126,"column":22}},"63":{"start":{"line":130,"column":8},"end":{"line":137,"column":9}},"64":{"start":{"line":131,"column":10},"end":{"line":131,"column":22}},"65":{"start":{"line":133,"column":10},"end":{"line":135,"column":11}},"66":{"start":{"line":134,"column":12},"end":{"line":134,"column":36}},"67":{"start":{"line":136,"column":10},"end":{"line":136,"column":23}},"68":{"start":{"line":140,"column":8},"end":{"line":148,"column":9}},"69":{"start":{"line":141,"column":10},"end":{"line":146,"column":11}},"70":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"71":{"start":{"line":143,"column":14},"end":{"line":143,"column":40}},"72":{"start":{"line":145,"column":12},"end":{"line":145,"column":25}},"73":{"start":{"line":147,"column":10},"end":{"line":147,"column":22}},"74":{"start":{"line":153,"column":8},"end":{"line":153,"column":52}},"75":{"start":{"line":154,"column":8},"end":{"line":159,"column":9}},"76":{"start":{"line":155,"column":10},"end":{"line":157,"column":11}},"77":{"start":{"line":156,"column":12},"end":{"line":156,"column":38}},"78":{"start":{"line":158,"column":10},"end":{"line":158,"column":23}},"79":{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},"80":{"start":{"line":162,"column":10},"end":{"line":164,"column":11}},"81":{"start":{"line":163,"column":12},"end":{"line":163,"column":40}},"82":{"start":{"line":165,"column":10},"end":{"line":165,"column":23}},"83":{"start":{"line":167,"column":8},"end":{"line":167,"column":20}},"84":{"start":{"line":170,"column":2},"end":{"line":170,"column":14}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":50},"end":{"line":8,"column":59}},{"start":{"line":8,"column":62},"end":{"line":8,"column":66}}]},"2":{"line":41,"type":"switch","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":20}},{"start":{"line":43,"column":6},"end":{"line":80,"column":9}},{"start":{"line":82,"column":6},"end":{"line":100,"column":9}},{"start":{"line":102,"column":6},"end":{"line":127,"column":9}},{"start":{"line":129,"column":6},"end":{"line":137,"column":9}},{"start":{"line":139,"column":6},"end":{"line":148,"column":9}},{"start":{"line":150,"column":6},"end":{"line":167,"column":20}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":22}},{"start":{"line":45,"column":26},"end":{"line":45,"column":48}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":10},"end":{"line":57,"column":10}},{"start":{"line":57,"column":10},"end":{"line":57,"column":10}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":10}},{"start":{"line":66,"column":10},"end":{"line":66,"column":10}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"11":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":17},"end":{"line":72,"column":17}},{"start":{"line":72,"column":17},"end":{"line":72,"column":17}}]},"12":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]},"13":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"14":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":28},"end":{"line":86,"column":29}},{"start":{"line":86,"column":32},"end":{"line":86,"column":33}}]},"15":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":10},"end":{"line":87,"column":10}},{"start":{"line":87,"column":10},"end":{"line":87,"column":10}}]},"16":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":12}},{"start":{"line":90,"column":12},"end":{"line":90,"column":12}}]},"17":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":10},"end":{"line":96,"column":10}},{"start":{"line":96,"column":10},"end":{"line":96,"column":10}}]},"18":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":38},"end":{"line":97,"column":51}},{"start":{"line":97,"column":54},"end":{"line":97,"column":67}}]},"19":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"20":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":10},"end":{"line":105,"column":10}},{"start":{"line":105,"column":10},"end":{"line":105,"column":10}}]},"21":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":10}},{"start":{"line":114,"column":10},"end":{"line":114,"column":10}}]},"22":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"23":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":10},"end":{"line":120,"column":10}},{"start":{"line":120,"column":10},"end":{"line":120,"column":10}}]},"24":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":12}},{"start":{"line":121,"column":12},"end":{"line":121,"column":12}}]},"25":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"26":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":10},"end":{"line":133,"column":10}},{"start":{"line":133,"column":10},"end":{"line":133,"column":10}}]},"27":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":8}},{"start":{"line":140,"column":8},"end":{"line":140,"column":8}}]},"28":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":10},"end":{"line":141,"column":10}},{"start":{"line":141,"column":10},"end":{"line":141,"column":10}}]},"29":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":142,"column":12}},{"start":{"line":142,"column":12},"end":{"line":142,"column":12}}]},"30":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"31":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":10},"end":{"line":155,"column":10}},{"start":{"line":155,"column":10},"end":{"line":155,"column":10}}]},"32":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"33":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":10},"end":{"line":162,"column":10}},{"start":{"line":162,"column":10},"end":{"line":162,"column":10}}]}},"code":["var _contains = require('./_contains');","","","// A simple Set type that honours R.equals semantics","module.exports = (function() {","  function _Set() {","    /* globals Set */","    this._nativeSet = typeof Set === 'function' ? new Set() : null;","    this._items = {};","  }","","  // until we figure out why jsdoc chokes on this","  // @param item The item to add to the Set","  // @returns {boolean} true if the item did not exist prior, otherwise false","  //","  _Set.prototype.add = function(item) {","    return !hasOrAdd(item, true, this);","  };","","  //","  // @param item The item to check for existence in the Set","  // @returns {boolean} true if the item exists in the Set, otherwise false","  //","  _Set.prototype.has = function(item) {","    return hasOrAdd(item, false, this);","  };","","  //","  // Combines the logic for checking whether an item is a member of the set and","  // for adding a new item to the set.","  //","  // @param item       The item to check or add to the Set instance.","  // @param shouldAdd  If true, the item will be added to the set if it doesn't","  //                   already exist.","  // @param set        The set instance to check or add to.","  // @return {boolean} true if the item already existed, otherwise false.","  //","  function hasOrAdd(item, shouldAdd, set) {","    var type = typeof item;","    var prevSize, newSize;","    switch (type) {","      case 'string':","      case 'number':","        // distinguish between +0 and -0","        if (item === 0 && 1 / item === -Infinity) {","          if (set._items['-0']) {","            return true;","          } else {","            if (shouldAdd) {","              set._items['-0'] = true;","            }","            return false;","          }","        }","        // these types can all utilise the native Set","        if (set._nativeSet !== null) {","          if (shouldAdd) {","            prevSize = set._nativeSet.size;","            set._nativeSet.add(item);","            newSize = set._nativeSet.size;","            return newSize === prevSize;","          } else {","            return set._nativeSet.has(item);","          }","        } else {","          if (!(type in set._items)) {","            if (shouldAdd) {","              set._items[type] = {};","              set._items[type][item] = true;","            }","            return false;","          } else if (item in set._items[type]) {","            return true;","          } else {","            if (shouldAdd) {","              set._items[type][item] = true;","            }","            return false;","          }","        }","","      case 'boolean':","        // set._items['boolean'] holds a two element array","        // representing [ falseExists, trueExists ]","        if (type in set._items) {","          var bIdx = item ? 1 : 0;","          if (set._items[type][bIdx]) {","            return true;","          } else {","            if (shouldAdd) {","              set._items[type][bIdx] = true;","            }","            return false;","          }","        } else {","          if (shouldAdd) {","            set._items[type] = item ? [false, true] : [true, false];","          }","          return false;","        }","","      case 'function':","        // compare functions for reference equality","        if (set._nativeSet !== null) {","          if (shouldAdd) {","            prevSize = set._nativeSet.size;","            set._nativeSet.add(item);","            newSize = set._nativeSet.size;","            return newSize === prevSize;","          } else {","            return set._nativeSet.has(item);","          }","        } else {","          if (!(type in set._items)) {","            if (shouldAdd) {","              set._items[type] = [item];","            }","            return false;","          }","          if (!_contains(item, set._items[type])) {","            if (shouldAdd) {","              set._items[type].push(item);","            }","            return false;","          }","          return true;","        }","","      case 'undefined':","        if (set._items[type]) {","          return true;","        } else {","          if (shouldAdd) {","            set._items[type] = true;","          }","          return false;","        }","","      case 'object':","        if (item === null) {","          if (!set._items['null']) {","            if (shouldAdd) {","              set._items['null'] = true;","            }","            return false;","          }","          return true;","        }","      /* falls through */","      default:","        // reduce the search size of heterogeneous sets by creating buckets","        // for each type.","        type = Object.prototype.toString.call(item);","        if (!(type in set._items)) {","          if (shouldAdd) {","            set._items[type] = [item];","          }","          return false;","        }","        // scan through all previously applied items","        if (!_contains(item, set._items[type])) {","          if (shouldAdd) {","            set._items[type].push(item);","          }","          return false;","        }","        return true;","    }","  }","  return _Set;","}());",""],"l":{"1":1,"5":1,"6":1,"8":0,"9":0,"16":1,"17":0,"24":1,"25":0,"38":1,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"75":0,"76":0,"78":0,"85":0,"86":0,"87":0,"88":0,"90":0,"91":0,"93":0,"96":0,"97":0,"99":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"111":0,"114":0,"115":0,"116":0,"118":0,"120":0,"121":0,"122":0,"124":0,"126":0,"130":0,"131":0,"133":0,"134":0,"136":0,"140":0,"141":0,"142":0,"143":0,"145":0,"147":0,"153":0,"154":0,"155":0,"156":0,"158":0,"161":0,"162":0,"163":0,"165":0,"167":0,"170":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/intersectionWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/intersectionWith.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"intersectionWith","line":41,"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":71}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":41,"column":0},"end":{"line":59,"column":3}},"5":{"start":{"line":42,"column":2},"end":{"line":42,"column":31}},"6":{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},"7":{"start":{"line":44,"column":4},"end":{"line":44,"column":23}},"8":{"start":{"line":45,"column":4},"end":{"line":45,"column":25}},"9":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":25}},"11":{"start":{"line":50,"column":2},"end":{"line":50,"column":19}},"12":{"start":{"line":51,"column":2},"end":{"line":51,"column":14}},"13":{"start":{"line":52,"column":2},"end":{"line":57,"column":3}},"14":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"15":{"start":{"line":54,"column":6},"end":{"line":54,"column":50}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":13}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":33}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["var _containsWith = require('./internal/_containsWith');","var _curry3 = require('./internal/_curry3');","var uniqWith = require('./uniqWith');","","","/**"," * Combines two lists into a set (i.e. no duplicates) composed of those"," * elements common to both lists. Duplication is determined according to the"," * value returned by applying the supplied predicate to two list elements."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]"," * @param {Function} pred A predicate function that determines whether"," *        the two supplied elements are equal."," * @param {Array} list1 One list of items to compare"," * @param {Array} list2 A second list of items to compare"," * @return {Array} A new list containing those elements common to both lists."," * @see R.intersection"," * @example"," *"," *      var buffaloSpringfield = ["," *        {id: 824, name: 'Richie Furay'},"," *        {id: 956, name: 'Dewey Martin'},"," *        {id: 313, name: 'Bruce Palmer'},"," *        {id: 456, name: 'Stephen Stills'},"," *        {id: 177, name: 'Neil Young'}"," *      ];"," *      var csny = ["," *        {id: 204, name: 'David Crosby'},"," *        {id: 456, name: 'Stephen Stills'},"," *        {id: 539, name: 'Graham Nash'},"," *        {id: 177, name: 'Neil Young'}"," *      ];"," *"," *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);"," *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]"," */","module.exports = _curry3(function intersectionWith(pred, list1, list2) {","  var lookupList, filteredList;","  if (list1.length > list2.length) {","    lookupList = list1;","    filteredList = list2;","  } else {","    lookupList = list2;","    filteredList = list1;","  }","  var results = [];","  var idx = 0;","  while (idx < filteredList.length) {","    if (_containsWith(pred, filteredList[idx], lookupList)) {","      results[results.length] = filteredList[idx];","    }","    idx += 1;","  }","  return uniqWith(pred, results);","});",""],"l":{"1":1,"2":1,"3":1,"41":1,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uniqWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uniqWith.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"uniqWith","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":27,"column":0},"end":{"line":40,"column":3}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":14}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"8":{"start":{"line":32,"column":2},"end":{"line":38,"column":3}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"10":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":35}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":16}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]}},"code":["var _containsWith = require('./internal/_containsWith');","var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a new list containing only one copy of each element in the original"," * list, based upon the value returned by applying the supplied predicate to"," * two list elements. Prefers the first item if two items compare equal based"," * on the predicate."," *"," * @func"," * @memberOf R"," * @since v0.2.0"," * @category List"," * @sig (a, a -> Boolean) -> [a] -> [a]"," * @param {Function} pred A predicate used to test whether two items are equal."," * @param {Array} list The array to consider."," * @return {Array} The list of unique items."," * @example"," *"," *      var strEq = R.eqBy(String);"," *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]"," *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]"," *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]"," *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']"," */","module.exports = _curry2(function uniqWith(pred, list) {","  var idx = 0;","  var len = list.length;","  var result = [];","  var item;","  while (idx < len) {","    item = list[idx];","    if (!_containsWith(pred, item, result)) {","      result[result.length] = item;","    }","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"2":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/intersperse.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/intersperse.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"intersperse","line":22,"loc":{"start":{"line":22,"column":56},"end":{"line":22,"column":94}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":22,"column":0},"end":{"line":35,"column":4}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":27}},"7":{"start":{"line":26,"column":2},"end":{"line":33,"column":3}},"8":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":26}},"10":{"start":{"line":30,"column":6},"end":{"line":30,"column":37}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":13}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["var _checkForMethod = require('./internal/_checkForMethod');","var _curry2 = require('./internal/_curry2');","","","/**"," * Creates a new list with the separator interposed between elements."," *"," * Dispatches to the `intersperse` method of the second argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category List"," * @sig a -> [a] -> [a]"," * @param {*} separator The element to add to the list."," * @param {Array} list The list to be interposed."," * @return {Array} The new list."," * @example"," *"," *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']"," */","module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {","  var out = [];","  var idx = 0;","  var length = list.length;","  while (idx < length) {","    if (idx === length - 1) {","      out.push(list[idx]);","    } else {","      out.push(list[idx], separator);","    }","    idx += 1;","  }","  return out;","}));",""],"l":{"1":1,"2":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/into.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/into.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"into","line":45,"loc":{"start":{"line":45,"column":25},"end":{"line":45,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"6":{"start":{"line":45,"column":0},"end":{"line":49,"column":3}},"7":{"start":{"line":46,"column":2},"end":{"line":48,"column":65}}},"branchMap":{"1":{"line":46,"type":"cond-expr","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":54}},{"start":{"line":48,"column":4},"end":{"line":48,"column":64}}]}},"code":["var _clone = require('./internal/_clone');","var _curry3 = require('./internal/_curry3');","var _isTransformer = require('./internal/_isTransformer');","var _reduce = require('./internal/_reduce');","var _stepCat = require('./internal/_stepCat');","","","/**"," * Transforms the items of the list with the transducer and appends the"," * transformed items to the accumulator using an appropriate iterator function"," * based on the accumulator type."," *"," * The accumulator can be an array, string, object or a transformer. Iterated"," * items will be appended to arrays and concatenated to strings. Objects will"," * be merged directly or 2-item arrays will be merged as key, value pairs."," *"," * The accumulator can also be a transformer object that provides a 2-arity"," * reducing iterator function, step, 0-arity initial value function, init, and"," * 1-arity result extraction function result. The step function is used as the"," * iterator function in reduce. The result function is used to convert the"," * final accumulator into the return type and in most cases is R.identity. The"," * init function is used to provide the initial accumulator."," *"," * The iteration is performed with R.reduce after initializing the transducer."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category List"," * @sig a -> (b -> b) -> [c] -> a"," * @param {*} acc The initial accumulator value."," * @param {Function} xf The transducer function. Receives a transformer and returns a transformer."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @example"," *"," *      var numbers = [1, 2, 3, 4];"," *      var transducer = R.compose(R.map(R.add(1)), R.take(2));"," *"," *      R.into([], transducer, numbers); //=> [2, 3]"," *"," *      var intoArray = R.into([]);"," *      intoArray(transducer, numbers); //=> [2, 3]"," */","module.exports = _curry3(function into(acc, xf, list) {","  return _isTransformer(acc) ?","    _reduce(xf(acc), acc['@@transducer/init'](), list) :","    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"45":1,"46":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_stepCat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_stepCat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":29}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":25},"end":{"line":11,"column":41}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":25},"end":{"line":19,"column":40}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":49}}},"5":{"name":"_stepCat","line":33,"loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"6":{"start":{"line":8,"column":0},"end":{"line":48,"column":5}},"7":{"start":{"line":9,"column":2},"end":{"line":16,"column":4}},"8":{"start":{"line":12,"column":6},"end":{"line":12,"column":17}},"9":{"start":{"line":13,"column":6},"end":{"line":13,"column":16}},"10":{"start":{"line":17,"column":2},"end":{"line":21,"column":4}},"11":{"start":{"line":19,"column":42},"end":{"line":19,"column":55}},"12":{"start":{"line":22,"column":2},"end":{"line":31,"column":4}},"13":{"start":{"line":25,"column":6},"end":{"line":28,"column":8}},"14":{"start":{"line":33,"column":2},"end":{"line":47,"column":4}},"15":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"16":{"start":{"line":35,"column":6},"end":{"line":35,"column":17}},"17":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":27}},"19":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"20":{"start":{"line":41,"column":6},"end":{"line":41,"column":28}},"21":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"22":{"start":{"line":44,"column":6},"end":{"line":44,"column":28}},"23":{"start":{"line":46,"column":4},"end":{"line":46,"column":60}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":29},"end":{"line":27,"column":54}},{"start":{"line":27,"column":57},"end":{"line":27,"column":62}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]}},"code":["var _assign = require('./_assign');","var _identity = require('./_identity');","var _isTransformer = require('./_isTransformer');","var isArrayLike = require('../isArrayLike');","var objOf = require('../objOf');","","","module.exports = (function() {","  var _stepCatArray = {","    '@@transducer/init': Array,","    '@@transducer/step': function(xs, x) {","      xs.push(x);","      return xs;","    },","    '@@transducer/result': _identity","  };","  var _stepCatString = {","    '@@transducer/init': String,","    '@@transducer/step': function(a, b) { return a + b; },","    '@@transducer/result': _identity","  };","  var _stepCatObject = {","    '@@transducer/init': Object,","    '@@transducer/step': function(result, input) {","      return _assign(","        result,","        isArrayLike(input) ? objOf(input[0], input[1]) : input","      );","    },","    '@@transducer/result': _identity","  };","","  return function _stepCat(obj) {","    if (_isTransformer(obj)) {","      return obj;","    }","    if (isArrayLike(obj)) {","      return _stepCatArray;","    }","    if (typeof obj === 'string') {","      return _stepCatString;","    }","    if (typeof obj === 'object') {","      return _stepCatObject;","    }","    throw new Error('Cannot create transformer for ' + obj);","  };","}());",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"8":1,"9":1,"12":0,"13":0,"17":1,"19":0,"22":1,"25":0,"33":1,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_assign.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_assign.js","s":{"1":1,"2":1},"b":{"1":[1,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":3,"column":0},"end":{"line":4,"column":70}}},"branchMap":{"1":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":40},"end":{"line":4,"column":53}},{"start":{"line":4,"column":56},"end":{"line":4,"column":69}}]}},"code":["var _objectAssign = require('./_objectAssign');","","module.exports =","  typeof Object.assign === 'function' ? Object.assign : _objectAssign;",""],"l":{"1":1,"3":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_objectAssign.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_objectAssign.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_objectAssign","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":5,"column":2},"end":{"line":7,"column":3}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":70}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":30}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":14}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}},"8":{"start":{"line":12,"column":2},"end":{"line":22,"column":3}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":32}},"10":{"start":{"line":14,"column":4},"end":{"line":20,"column":5}},"11":{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},"12":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"13":{"start":{"line":17,"column":10},"end":{"line":17,"column":44}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":13}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":16}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":5,"column":2}},{"start":{"line":5,"column":2},"end":{"line":5,"column":2}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":8}},{"start":{"line":16,"column":8},"end":{"line":16,"column":8}}]}},"code":["var _has = require('./_has');","","// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign","module.exports = function _objectAssign(target) {","  if (target == null) {","    throw new TypeError('Cannot convert undefined or null to object');","  }","","  var output = Object(target);","  var idx = 1;","  var length = arguments.length;","  while (idx < length) {","    var source = arguments[idx];","    if (source != null) {","      for (var nextKey in source) {","        if (_has(nextKey, source)) {","          output[nextKey] = source[nextKey];","        }","      }","    }","    idx += 1;","  }","  return output;","};",""],"l":{"1":1,"4":1,"5":0,"6":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"21":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/objOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/objOf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"objOf","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":28,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":15}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":13}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Creates an object containing a single key:value pair."," *"," * @func"," * @memberOf R"," * @since v0.18.0"," * @category Object"," * @sig String -> a -> {String:a}"," * @param {String} key"," * @param {*} val"," * @return {Object}"," * @see R.pair"," * @example"," *"," *      var matchPhrases = R.compose("," *        R.objOf('must'),"," *        R.map(R.objOf('match_phrase'))"," *      );"," *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}"," */","module.exports = _curry2(function objOf(key, val) {","  var obj = {};","  obj[key] = val;","  return obj;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/invert.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/invert.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"invert","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":28,"column":0},"end":{"line":42,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":25}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":15}},"9":{"start":{"line":34,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":25}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":59}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":13}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":13}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":32},"end":{"line":37,"column":40}},{"start":{"line":37,"column":44},"end":{"line":37,"column":57}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _has = require('./internal/_has');","var keys = require('./keys');","","","/**"," * Same as R.invertObj, however this accounts for objects with duplicate values"," * by putting the values into an array."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Object"," * @sig {s: x} -> {x: [ s, ... ]}"," * @param {Object} obj The object or array to invert"," * @return {Object} out A new object with keys"," * in an array."," * @example"," *"," *      var raceResultsByFirstName = {"," *        first: 'alice',"," *        second: 'jake',"," *        third: 'alice',"," *      };"," *      R.invert(raceResultsByFirstName);"," *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }"," */","module.exports = _curry1(function invert(obj) {","  var props = keys(obj);","  var len = props.length;","  var idx = 0;","  var out = {};","","  while (idx < len) {","    var key = props[idx];","    var val = obj[key];","    var list = _has(val, out) ? out[val] : (out[val] = []);","    list[list.length] = key;","    idx += 1;","  }","  return out;","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/invertObj.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/invertObj.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"invertObj","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":31,"column":0},"end":{"line":43,"column":3}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":25}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":14}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":15}},"8":{"start":{"line":37,"column":2},"end":{"line":41,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":25}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":13}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":13}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var keys = require('./keys');","","","/**"," * Returns a new object with the keys of the given object as values, and the"," * values of the given object, which are coerced to strings, as keys. Note"," * that the last key found is preferred when handling the same value."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Object"," * @sig {s: x} -> {x: s}"," * @param {Object} obj The object or array to invert"," * @return {Object} out A new object"," * @example"," *"," *      var raceResults = {"," *        first: 'alice',"," *        second: 'jake'"," *      };"," *      R.invertObj(raceResults);"," *      //=> { 'alice': 'first', 'jake':'second' }"," *"," *      // Alternatively:"," *      var raceResults = ['alice', 'jake'];"," *      R.invertObj(raceResults);"," *      //=> { 'alice': '0', 'jake':'1' }"," */","module.exports = _curry1(function invertObj(obj) {","  var props = keys(obj);","  var len = props.length;","  var idx = 0;","  var out = {};","","  while (idx < len) {","    var key = props[idx];","    out[obj[key]] = key;","    idx += 1;","  }","  return out;","});",""],"l":{"1":1,"2":1,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/invoker.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/invoker.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"invoker","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":57}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":27},"end":{"line":34,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":33,"column":0},"end":{"line":41,"column":3}},"6":{"start":{"line":34,"column":2},"end":{"line":40,"column":5}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},"8":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"9":{"start":{"line":37,"column":6},"end":{"line":37,"column":91}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":93}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":22}},{"start":{"line":36,"column":26},"end":{"line":36,"column":53}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isFunction = require('./internal/_isFunction');","var curryN = require('./curryN');","var toString = require('./toString');","","","/**"," * Turns a named method with a specified arity into a function that can be"," * called directly supplied with arguments and a target object."," *"," * The returned function is curried and accepts `arity + 1` parameters where"," * the final parameter is the target object."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)"," * @param {Number} arity Number of arguments the returned function should take"," *        before the target object."," * @param {String} method Name of the method to call."," * @return {Function} A new curried function."," * @example"," *"," *      var sliceFrom = R.invoker(1, 'slice');"," *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'"," *      var sliceFrom6 = R.invoker(2, 'slice')(6);"," *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'"," * @symb R.invoker(0, 'method')(o) = o['method']()"," * @symb R.invoker(1, 'method')(a, o) = o['method'](a)"," * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)"," */","module.exports = _curry2(function invoker(arity, method) {","  return curryN(arity + 1, function() {","    var target = arguments[arity];","    if (target != null && _isFunction(target[method])) {","      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));","    }","    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"33":1,"34":4,"35":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/is.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/is.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"is","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"3":{"start":{"line":28,"column":2},"end":{"line":28,"column":72}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":48}},{"start":{"line":28,"column":52},"end":{"line":28,"column":71}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * See if an object (`val`) is an instance of the supplied constructor. This"," * function will check up the inheritance chain, if any."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category Type"," * @sig (* -> {*}) -> a -> Boolean"," * @param {Object} ctor A constructor"," * @param {*} val The value to test"," * @return {Boolean}"," * @example"," *"," *      R.is(Object, {}); //=> true"," *      R.is(Number, 1); //=> true"," *      R.is(Object, 1); //=> false"," *      R.is(String, 's'); //=> true"," *      R.is(String, new String('')); //=> true"," *      R.is(Object, new String('')); //=> true"," *      R.is(Object, 's'); //=> false"," *      R.is(Number, {}); //=> false"," */","module.exports = _curry2(function is(Ctor, val) {","  return val != null && val.constructor === Ctor || val instanceof Ctor;","});",""],"l":{"1":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/isEmpty.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/isEmpty.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isEmpty","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":42}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":18}},{"start":{"line":28,"column":22},"end":{"line":28,"column":41}}]}},"code":["var _curry1 = require('./internal/_curry1');","var empty = require('./empty');","var equals = require('./equals');","","","/**"," * Returns `true` if the given value is its type's empty value; `false`"," * otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Logic"," * @sig a -> Boolean"," * @param {*} x"," * @return {Boolean}"," * @see R.empty"," * @example"," *"," *      R.isEmpty([1, 2, 3]);   //=> false"," *      R.isEmpty([]);          //=> true"," *      R.isEmpty('');          //=> true"," *      R.isEmpty(null);        //=> false"," *      R.isEmpty({});          //=> true"," *      R.isEmpty({length: 0}); //=> false"," */","module.exports = _curry1(function isEmpty(x) {","  return x != null && equals(x, empty(x));","});",""],"l":{"1":1,"2":1,"3":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/isNil.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/isNil.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"isNil","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":66}},"3":{"start":{"line":21,"column":45},"end":{"line":21,"column":62}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Checks if the input value is `null` or `undefined`."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Type"," * @sig * -> Boolean"," * @param {*} x The value to test."," * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`."," * @example"," *"," *      R.isNil(null); //=> true"," *      R.isNil(undefined); //=> true"," *      R.isNil(0); //=> false"," *      R.isNil([]); //=> false"," */","module.exports = _curry1(function isNil(x) { return x == null; });",""],"l":{"1":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/join.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/join.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{},"code":["var invoker = require('./invoker');","","","/**"," * Returns a string made by inserting the `separator` between each element and"," * concatenating all the elements into a single string."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig String -> [a] -> String"," * @param {Number|String} separator The string used to separate the elements."," * @param {Array} xs The elements to join into a string."," * @return {String} str The string made by concatenating `xs` with `separator`."," * @see R.split"," * @example"," *"," *      var spacer = R.join(' ');"," *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'"," *      R.join('|', [1, 2, 3]);    //=> '1|2|3'"," */","module.exports = invoker(1, 'join');",""],"l":{"1":1,"23":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/juxt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/juxt.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"juxt","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":44}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":88}},"5":{"start":{"line":23,"column":31},"end":{"line":23,"column":79}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var converge = require('./converge');","","","/**"," * juxt applies a list of functions to a list of values."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Function"," * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])"," * @param {Array} fns An array of functions"," * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters."," * @see R.applySpec"," * @example"," *"," *      var getRange = R.juxt([Math.min, Math.max]);"," *      getRange(3, 4, 9, -3); //=> [-3, 9]"," * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]"," */","module.exports = _curry1(function juxt(fns) {","  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);","});",""],"l":{"1":1,"2":1,"22":1,"23":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/keysIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/keysIn.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"keysIn","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":11}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":25}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":12}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Returns a list containing the names of all the properties of the supplied"," * object, including prototype properties."," * Note that the order of the output array is not guaranteed to be consistent"," * across different JS platforms."," *"," * @func"," * @memberOf R"," * @since v0.2.0"," * @category Object"," * @sig {k: v} -> [k]"," * @param {Object} obj The object to extract properties from"," * @return {Array} An array of the object's own and prototype properties."," * @example"," *"," *      var F = function() { this.x = 'X'; };"," *      F.prototype.y = 'Y';"," *      var f = new F();"," *      R.keysIn(f); //=> ['x', 'y']"," */","module.exports = _curry1(function keysIn(obj) {","  var prop;","  var ks = [];","  for (prop in obj) {","    ks[ks.length] = prop;","  }","  return ks;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lastIndexOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lastIndexOf.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"lastIndexOf","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":25,"column":0},"end":{"line":38,"column":3}},"5":{"start":{"line":26,"column":2},"end":{"line":37,"column":3}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":34}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":28}},"8":{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},"9":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":19}},"11":{"start":{"line":34,"column":6},"end":{"line":34,"column":15}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":14}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":42}},{"start":{"line":26,"column":46},"end":{"line":26,"column":59}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isArray = require('./internal/_isArray');","var equals = require('./equals');","","","/**"," * Returns the position of the last occurrence of an item in an array, or -1 if"," * the item is not included in the array. `R.equals` is used to determine"," * equality."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig a -> [a] -> Number"," * @param {*} target The item to find."," * @param {Array} xs The array to search in."," * @return {Number} the index of the target, or -1 if the target is not found."," * @see R.indexOf"," * @example"," *"," *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6"," *      R.lastIndexOf(10, [1,2,3,4]); //=> -1"," */","module.exports = _curry2(function lastIndexOf(target, xs) {","  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {","    return xs.lastIndexOf(target);","  } else {","    var idx = xs.length - 1;","    while (idx >= 0) {","      if (equals(xs[idx], target)) {","        return idx;","      }","      idx -= 1;","    }","    return -1;","  }","});",""],"l":{"1":1,"2":1,"3":1,"25":1,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/length.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/length.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"length","line":20,"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":20,"column":0},"end":{"line":22,"column":3}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":68}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":50},"end":{"line":21,"column":61}},{"start":{"line":21,"column":64},"end":{"line":21,"column":67}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":47}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _isNumber = require('./internal/_isNumber');","","","/**"," * Returns the number of elements in the array by returning `list.length`."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category List"," * @sig [a] -> Number"," * @param {Array} list The array to inspect."," * @return {Number} The length of the array."," * @example"," *"," *      R.length([]); //=> 0"," *      R.length([1, 2, 3]); //=> 3"," */","module.exports = _curry1(function length(list) {","  return list != null && _isNumber(list.length) ? list.length : NaN;","});",""],"l":{"1":1,"2":1,"20":1,"21":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isNumber.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isNumber.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_isNumber","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":65}}},"branchMap":{},"code":["module.exports = function _isNumber(x) {","  return Object.prototype.toString.call(x) === '[object Number]';","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lens.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lens.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"lens","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":55}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":9},"end":{"line":29,"column":31}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":28}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":28,"column":0},"end":{"line":39,"column":3}},"4":{"start":{"line":29,"column":2},"end":{"line":38,"column":4}},"5":{"start":{"line":30,"column":4},"end":{"line":37,"column":6}},"6":{"start":{"line":31,"column":6},"end":{"line":36,"column":8}},"7":{"start":{"line":33,"column":10},"end":{"line":33,"column":39}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var map = require('./map');","","","/**"," * Returns a lens for the given getter and setter functions. The getter \"gets\""," * the value of the focus; the setter \"sets\" the value of the focus. The setter"," * should not mutate the data structure."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Object"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig (s -> a) -> ((a, s) -> s) -> Lens s a"," * @param {Function} getter"," * @param {Function} setter"," * @return {Lens}"," * @see R.view, R.set, R.over, R.lensIndex, R.lensProp"," * @example"," *"," *      var xLens = R.lens(R.prop('x'), R.assoc('x'));"," *"," *      R.view(xLens, {x: 1, y: 2});            //=> 1"," *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}"," *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}"," */","module.exports = _curry2(function lens(getter, setter) {","  return function(toFunctorFn) {","    return function(target) {","      return map(","        function(focus) {","          return setter(focus, target);","        },","        toFunctorFn(getter(target))","      );","    };","  };","});",""],"l":{"1":1,"2":1,"28":1,"29":0,"30":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lensIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lensIndex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"lensIndex","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"5":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var lens = require('./lens');","var nth = require('./nth');","var update = require('./update');","","","/**"," * Returns a lens whose focus is the specified index."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category Object"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig Number -> Lens s a"," * @param {Number} n"," * @return {Lens}"," * @see R.view, R.set, R.over"," * @example"," *"," *      var headLens = R.lensIndex(0);"," *"," *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'"," *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']"," *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']"," */","module.exports = _curry1(function lensIndex(n) {","  return lens(nth(n), update(n));","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"update","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":38}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var adjust = require('./adjust');","var always = require('./always');","","","/**"," * Returns a new copy of the array with the element at the provided index"," * replaced with the given value."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category List"," * @sig Number -> a -> [a] -> [a]"," * @param {Number} idx The index to update."," * @param {*} x The value to exist at the given index of the returned array."," * @param {Array|Arguments} list The source array-like object to be updated."," * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`."," * @see R.adjust"," * @example"," *"," *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]"," *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]"," * @symb R.update(-1, a, [b, c]) = [b, a]"," * @symb R.update(0, a, [b, c]) = [a, c]"," * @symb R.update(1, a, [b, c]) = [b, a]"," */","module.exports = _curry3(function update(idx, x, list) {","  return adjust(always(x), idx, list);","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lensPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lensPath.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"lensPath","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":31,"column":0},"end":{"line":33,"column":3}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":37}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var assocPath = require('./assocPath');","var lens = require('./lens');","var path = require('./path');","","","/**"," * Returns a lens whose focus is the specified path."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Object"," * @typedefn Idx = String | Int"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig [Idx] -> Lens s a"," * @param {Array} path The path to use."," * @return {Lens}"," * @see R.view, R.set, R.over"," * @example"," *"," *      var xHeadYLens = R.lensPath(['x', 0, 'y']);"," *"," *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});"," *      //=> 2"," *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});"," *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}"," *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});"," *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}"," */","module.exports = _curry1(function lensPath(p) {","  return lens(path(p), assocPath(p));","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"31":1,"32":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/path.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/path.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"path","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":33,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":16}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"5":{"start":{"line":25,"column":2},"end":{"line":31,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"7":{"start":{"line":27,"column":6},"end":{"line":27,"column":13}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":13}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":13}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Retrieve the value at a given path."," *"," * @func"," * @memberOf R"," * @since v0.2.0"," * @category Object"," * @typedefn Idx = String | Int"," * @sig [Idx] -> {a} -> a | Undefined"," * @param {Array} path The path to use."," * @param {Object} obj The object to retrieve the nested property from."," * @return {*} The data at `path`."," * @see R.prop"," * @example"," *"," *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2"," *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined"," */","module.exports = _curry2(function path(paths, obj) {","  var val = obj;","  var idx = 0;","  while (idx < paths.length) {","    if (val == null) {","      return;","    }","    val = val[paths[idx]];","    idx += 1;","  }","  return val;","});",""],"l":{"1":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lensProp.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lensProp.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"lensProp","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var assoc = require('./assoc');","var lens = require('./lens');","var prop = require('./prop');","","","/**"," * Returns a lens whose focus is the specified property."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category Object"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig String -> Lens s a"," * @param {String} k"," * @return {Lens}"," * @see R.view, R.set, R.over"," * @example"," *"," *      var xLens = R.lensProp('x');"," *"," *      R.view(xLens, {x: 1, y: 2});            //=> 1"," *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}"," *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}"," */","module.exports = _curry1(function lensProp(k) {","  return lens(prop(k), assoc(k));","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lt.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"lt","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"3":{"start":{"line":25,"column":45},"end":{"line":25,"column":58}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if the first argument is less than the second; `false`"," * otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord a => a -> a -> Boolean"," * @param {*} a"," * @param {*} b"," * @return {Boolean}"," * @see R.gt"," * @example"," *"," *      R.lt(2, 1); //=> false"," *      R.lt(2, 2); //=> false"," *      R.lt(2, 3); //=> true"," *      R.lt('a', 'z'); //=> true"," *      R.lt('z', 'a'); //=> false"," */","module.exports = _curry2(function lt(a, b) { return a < b; });",""],"l":{"1":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lte.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/lte.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"lte","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":64}},"3":{"start":{"line":25,"column":46},"end":{"line":25,"column":60}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns `true` if the first argument is less than or equal to the second;"," * `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord a => a -> a -> Boolean"," * @param {Number} a"," * @param {Number} b"," * @return {Boolean}"," * @see R.gte"," * @example"," *"," *      R.lte(2, 1); //=> false"," *      R.lte(2, 2); //=> true"," *      R.lte(2, 3); //=> true"," *      R.lte('a', 'z'); //=> true"," *      R.lte('z', 'a'); //=> false"," */","module.exports = _curry2(function lte(a, b) { return a <= b; });",""],"l":{"1":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mapAccum.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mapAccum.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"mapAccum","line":38,"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":38,"column":0},"end":{"line":49,"column":3}},"3":{"start":{"line":39,"column":2},"end":{"line":39,"column":14}},"4":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"5":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"6":{"start":{"line":42,"column":2},"end":{"line":42,"column":20}},"7":{"start":{"line":43,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":36}},"9":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"10":{"start":{"line":46,"column":4},"end":{"line":46,"column":13}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":28}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * The mapAccum function behaves like a combination of map and reduce; it"," * applies a function to each element of a list, passing an accumulating"," * parameter from left to right, and returning a final value of this"," * accumulator together with the new list."," *"," * The iterator function receives two arguments, *acc* and *value*, and should"," * return a tuple *[acc, value]*."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category List"," * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])"," * @param {Function} fn The function to be called on every element of the input `list`."," * @param {*} acc The accumulator value."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @see R.addIndex, R.mapAccumRight"," * @example"," *"," *      var digits = ['1', '2', '3', '4'];"," *      var appender = (a, b) => [a + b, a + b];"," *"," *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]"," * @symb R.mapAccum(f, a, [b, c, d]) = ["," *   f(f(f(a, b)[0], c)[0], d)[0],"," *   ["," *     f(a, b)[1],"," *     f(f(a, b)[0], c)[1],"," *     f(f(f(a, b)[0], c)[0], d)[1]"," *   ]"," * ]"," */","module.exports = _curry3(function mapAccum(fn, acc, list) {","  var idx = 0;","  var len = list.length;","  var result = [];","  var tuple = [acc];","  while (idx < len) {","    tuple = fn(tuple[0], list[idx]);","    result[idx] = tuple[1];","    idx += 1;","  }","  return [tuple[0], result];","});",""],"l":{"1":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mapAccumRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mapAccumRight.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"mapAccumRight","line":41,"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":41,"column":0},"end":{"line":51,"column":3}},"3":{"start":{"line":42,"column":2},"end":{"line":42,"column":28}},"4":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"5":{"start":{"line":44,"column":2},"end":{"line":44,"column":20}},"6":{"start":{"line":45,"column":2},"end":{"line":49,"column":3}},"7":{"start":{"line":46,"column":4},"end":{"line":46,"column":36}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"9":{"start":{"line":48,"column":4},"end":{"line":48,"column":13}},"10":{"start":{"line":50,"column":2},"end":{"line":50,"column":28}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * The mapAccumRight function behaves like a combination of map and reduce; it"," * applies a function to each element of a list, passing an accumulating"," * parameter from right to left, and returning a final value of this"," * accumulator together with the new list."," *"," * Similar to `mapAccum`, except moves through the input list from the right to"," * the left."," *"," * The iterator function receives two arguments, *value* and *acc*, and should"," * return a tuple *[value, acc]*."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category List"," * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)"," * @param {Function} fn The function to be called on every element of the input `list`."," * @param {*} acc The accumulator value."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @see R.addIndex, R.mapAccum"," * @example"," *"," *      var digits = ['1', '2', '3', '4'];"," *      var append = (a, b) => [a + b, a + b];"," *"," *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']"," * @symb R.mapAccumRight(f, a, [b, c, d]) = ["," *   ["," *     f(b, f(c, f(d, a)[0])[0])[1],"," *     f(c, f(d, a)[0])[1],"," *     f(d, a)[1],"," *   ]"," *   f(b, f(c, f(d, a)[0])[0])[0],"," * ]"," */","module.exports = _curry3(function mapAccumRight(fn, acc, list) {","  var idx = list.length - 1;","  var result = [];","  var tuple = [acc];","  while (idx >= 0) {","    tuple = fn(list[idx], tuple[0]);","    result[idx] = tuple[1];","    idx -= 1;","  }","  return [result, tuple[0]];","});",""],"l":{"1":1,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mapObjIndexed.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mapObjIndexed.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"mapObjIndexed","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":57}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":27,"column":0},"end":{"line":32,"column":3}},"5":{"start":{"line":28,"column":2},"end":{"line":31,"column":20}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var _reduce = require('./internal/_reduce');","var keys = require('./keys');","","","/**"," * An Object-specific version of `map`. The function is applied to three"," * arguments: *(value, key, obj)*. If only the value is significant, use"," * `map` instead."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Object"," * @sig ((*, String, Object) -> *) -> Object -> Object"," * @param {Function} fn"," * @param {Object} obj"," * @return {Object}"," * @see R.map"," * @example"," *"," *      var values = { x: 1, y: 2, z: 3 };"," *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);"," *"," *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }"," */","module.exports = _curry2(function mapObjIndexed(fn, obj) {","  return _reduce(function(acc, key) {","    acc[key] = fn(obj[key], key, obj);","    return acc;","  }, {}, keys(obj));","});",""],"l":{"1":1,"2":1,"3":1,"27":1,"28":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/match.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/match.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"match","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":22}},{"start":{"line":26,"column":26},"end":{"line":26,"column":28}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Tests a regular expression against a String. Note that this function will"," * return an empty array when there are no matches. This differs from"," * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)"," * which returns `null` when there are no matches."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category String"," * @sig RegExp -> String -> [String | Undefined]"," * @param {RegExp} rx A regular expression."," * @param {String} str The string to match against"," * @return {Array} The list of matches or empty array."," * @see R.test"," * @example"," *"," *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']"," *      R.match(/a/, 'b'); //=> []"," *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\""," */","module.exports = _curry2(function match(rx, str) {","  return str.match(rx) || [];","});",""],"l":{"1":1,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mathMod.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mathMod.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"mathMod","line":37,"loc":{"start":{"line":37,"column":25},"end":{"line":37,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":50}},"3":{"start":{"line":37,"column":0},"end":{"line":41,"column":3}},"4":{"start":{"line":38,"column":2},"end":{"line":38,"column":37}},"5":{"start":{"line":38,"column":24},"end":{"line":38,"column":35}},"6":{"start":{"line":39,"column":2},"end":{"line":39,"column":46}},"7":{"start":{"line":39,"column":33},"end":{"line":39,"column":44}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"3":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":20}},{"start":{"line":39,"column":24},"end":{"line":39,"column":29}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isInteger = require('./internal/_isInteger');","","","/**"," * mathMod behaves like the modulo operator should mathematically, unlike the"," * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,"," * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN"," * when the modulus is zero or negative."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category Math"," * @sig Number -> Number -> Number"," * @param {Number} m The dividend."," * @param {Number} p the modulus."," * @return {Number} The result of `b mod a`."," * @example"," *"," *      R.mathMod(-17, 5);  //=> 3"," *      R.mathMod(17, 5);   //=> 2"," *      R.mathMod(17, -5);  //=> NaN"," *      R.mathMod(17, 0);   //=> NaN"," *      R.mathMod(17.2, 5); //=> NaN"," *      R.mathMod(17, 5.3); //=> NaN"," *"," *      var clock = R.mathMod(R.__, 12);"," *      clock(15); //=> 3"," *      clock(24); //=> 0"," *"," *      var seventeenMod = R.mathMod(17);"," *      seventeenMod(3);  //=> 2"," *      seventeenMod(4);  //=> 1"," *      seventeenMod(10); //=> 7"," */","module.exports = _curry2(function mathMod(m, p) {","  if (!_isInteger(m)) { return NaN; }","  if (!_isInteger(p) || p < 1) { return NaN; }","  return ((m % p) + p) % p;","});",""],"l":{"1":1,"2":1,"37":1,"38":0,"39":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/maxBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/maxBy.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"maxBy","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":29}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},{"start":{"line":29,"column":27},"end":{"line":29,"column":28}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Takes a function and two values, and returns whichever value produces the"," * larger result when passed to the provided function."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Relation"," * @sig Ord b => (a -> b) -> a -> a -> a"," * @param {Function} f"," * @param {*} a"," * @param {*} b"," * @return {*}"," * @see R.max, R.minBy"," * @example"," *"," *      //  square :: Number -> Number"," *      var square = n => n * n;"," *"," *      R.maxBy(square, -3, 2); //=> -3"," *"," *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5"," *      R.reduce(R.maxBy(square), 0, []); //=> 0"," */","module.exports = _curry3(function maxBy(f, a, b) {","  return f(b) > f(a) ? b : a;","});",""],"l":{"1":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mean.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mean.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"mean","line":20,"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":20,"column":0},"end":{"line":22,"column":3}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":33}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var sum = require('./sum');","","","/**"," * Returns the mean of the given list of numbers."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category Math"," * @sig [Number] -> Number"," * @param {Array} list"," * @return {Number}"," * @example"," *"," *      R.mean([2, 7, 9]); //=> 6"," *      R.mean([]); //=> NaN"," */","module.exports = _curry1(function mean(list) {","  return sum(list) / list.length;","});",""],"l":{"1":1,"2":1,"20":1,"21":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sum.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sum.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}}},"branchMap":{},"code":["var add = require('./add');","var reduce = require('./reduce');","","","/**"," * Adds together all the elements of a list."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Math"," * @sig [Number] -> Number"," * @param {Array} list An array of numbers"," * @return {Number} The sum of all the numbers in the list."," * @see R.reduce"," * @example"," *"," *      R.sum([2,4,6,8,100,1]); //=> 121"," */","module.exports = reduce(add, 0);",""],"l":{"1":1,"2":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/median.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/median.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"median","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":47}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":55},"end":{"line":28,"column":70}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":21,"column":0},"end":{"line":31,"column":3}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":24}},"5":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":15}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"9":{"start":{"line":28,"column":2},"end":{"line":30,"column":30}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":19},"end":{"line":29,"column":21}},{"start":{"line":29,"column":24},"end":{"line":29,"column":37}}]},"3":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":32},"end":{"line":29,"column":33}},{"start":{"line":29,"column":36},"end":{"line":29,"column":37}}]}},"code":["var _curry1 = require('./internal/_curry1');","var mean = require('./mean');","","","/**"," * Returns the median of the given list of numbers."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category Math"," * @sig [Number] -> Number"," * @param {Array} list"," * @return {Number}"," * @example"," *"," *      R.median([2, 9, 7]); //=> 7"," *      R.median([7, 2, 10, 9]); //=> 8"," *      R.median([]); //=> NaN"," */","module.exports = _curry1(function median(list) {","  var len = list.length;","  if (len === 0) {","    return NaN;","  }","  var width = 2 - len % 2;","  var idx = (len - width) / 2;","  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {","    return a < b ? -1 : a > b ? 1 : 0;","  }).slice(idx, idx + width));","});",""],"l":{"1":1,"2":1,"21":1,"22":0,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/memoize.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/memoize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"memoize","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":46}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":33,"column":0},"end":{"line":42,"column":3}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"7":{"start":{"line":35,"column":2},"end":{"line":41,"column":5}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":34}},"9":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":45}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":22}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]}},"code":["var _arity = require('./internal/_arity');","var _curry1 = require('./internal/_curry1');","var _has = require('./internal/_has');","var toString = require('./toString');","","","/**"," * Creates a new function that, when invoked, caches the result of calling `fn`"," * for a given argument set and returns the result. Subsequent calls to the"," * memoized `fn` with the same argument set will not result in an additional"," * call to `fn`; instead, the cached result for that set of arguments will be"," * returned."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (*... -> a) -> (*... -> a)"," * @param {Function} fn The function to memoize."," * @return {Function} Memoized version of `fn`."," * @example"," *"," *      var count = 0;"," *      var factorial = R.memoize(n => {"," *        count += 1;"," *        return R.product(R.range(1, n + 1));"," *      });"," *      factorial(5); //=> 120"," *      factorial(5); //=> 120"," *      factorial(5); //=> 120"," *      count; //=> 1"," */","module.exports = _curry1(function memoize(fn) {","  var cache = {};","  return _arity(fn.length, function() {","    var key = toString(arguments);","    if (!_has(key, cache)) {","      cache[key] = fn.apply(this, arguments);","    }","    return cache[key];","  });","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/merge.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/merge.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"merge","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}}},"branchMap":{},"code":["var _assign = require('./internal/_assign');","var _curry2 = require('./internal/_curry2');","","","/**"," * Create a new object with the own properties of the first object merged with"," * the own properties of the second object. If a key exists in both objects,"," * the value from the second object will be used."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig {k: v} -> {k: v} -> {k: v}"," * @param {Object} l"," * @param {Object} r"," * @return {Object}"," * @see R.mergeWith, R.mergeWithKey"," * @example"," *"," *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });"," *      //=> { 'name': 'fred', 'age': 40 }"," *"," *      var resetToDefault = R.merge(R.__, {x: 0});"," *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}"," * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }"," */","module.exports = _curry2(function merge(l, r) {","  return _assign({}, l, r);","});",""],"l":{"1":1,"2":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mergeAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mergeAll.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"mergeAll","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":48}}},"branchMap":{},"code":["var _assign = require('./internal/_assign');","var _curry1 = require('./internal/_curry1');","","","/**"," * Merges a list of objects together into one object."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category List"," * @sig [{k: v}] -> {k: v}"," * @param {Array} list An array of objects"," * @return {Object} A merged object."," * @see R.reduce"," * @example"," *"," *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}"," *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}"," * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }"," */","module.exports = _curry1(function mergeAll(list) {","  return _assign.apply(null, [{}].concat(list));","});",""],"l":{"1":1,"2":1,"22":1,"23":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mergeWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mergeWith.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"mergeWith","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":54}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":22},"end":{"line":30,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":29,"column":0},"end":{"line":33,"column":3}},"4":{"start":{"line":30,"column":2},"end":{"line":32,"column":11}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var mergeWithKey = require('./mergeWithKey');","","","/**"," * Creates a new object with the own properties of the two provided objects. If"," * a key exists in both objects, the provided function is applied to the values"," * associated with the key in each object, with the result being used as the"," * value associated with the key in the returned object. The key will be"," * excluded from the returned object if the resulting value is `undefined`."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Object"," * @sig (a -> a -> a) -> {a} -> {a} -> {a}"," * @param {Function} fn"," * @param {Object} l"," * @param {Object} r"," * @return {Object}"," * @see R.merge, R.mergeWithKey"," * @example"," *"," *      R.mergeWith(R.concat,"," *                  { a: true, values: [10, 20] },"," *                  { b: true, values: [15, 35] });"," *      //=> { a: true, b: true, values: [10, 20, 15, 35] }"," */","module.exports = _curry3(function mergeWith(fn, l, r) {","  return mergeWithKey(function(_, _l, _r) {","    return fn(_l, _r);","  }, l, r);","});",""],"l":{"1":1,"2":1,"29":1,"30":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mergeWithKey.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/mergeWithKey.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"mergeWithKey","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":32,"column":0},"end":{"line":49,"column":3}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":18}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":8}},"6":{"start":{"line":36,"column":2},"end":{"line":40,"column":3}},"7":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"8":{"start":{"line":38,"column":6},"end":{"line":38,"column":56}},"9":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"10":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"11":{"start":{"line":44,"column":6},"end":{"line":44,"column":23}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":16}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":31},"end":{"line":38,"column":48}},{"start":{"line":38,"column":51},"end":{"line":38,"column":55}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":18}},{"start":{"line":43,"column":22},"end":{"line":43,"column":40}}]}},"code":["var _curry3 = require('./internal/_curry3');","var _has = require('./internal/_has');","","","/**"," * Creates a new object with the own properties of the two provided objects. If"," * a key exists in both objects, the provided function is applied to the key"," * and the values associated with the key in each object, with the result being"," * used as the value associated with the key in the returned object. The key"," * will be excluded from the returned object if the resulting value is"," * `undefined`."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Object"," * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}"," * @param {Function} fn"," * @param {Object} l"," * @param {Object} r"," * @return {Object}"," * @see R.merge, R.mergeWith"," * @example"," *"," *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r"," *      R.mergeWithKey(concatValues,"," *                     { a: true, thing: 'foo', values: [10, 20] },"," *                     { b: true, thing: 'bar', values: [15, 35] });"," *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }"," * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }"," */","module.exports = _curry3(function mergeWithKey(fn, l, r) {","  var result = {};","  var k;","","  for (k in l) {","    if (_has(k, l)) {","      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];","    }","  }","","  for (k in r) {","    if (_has(k, r) && !(_has(k, result))) {","      result[k] = r[k];","    }","  }","","  return result;","});",""],"l":{"1":1,"2":1,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"42":0,"43":0,"44":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/min.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/min.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"min","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":71}},"3":{"start":{"line":21,"column":46},"end":{"line":21,"column":67}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":61},"end":{"line":21,"column":62}},{"start":{"line":21,"column":65},"end":{"line":21,"column":66}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns the smaller of its two arguments."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord a => a -> a -> a"," * @param {*} a"," * @param {*} b"," * @return {*}"," * @see R.minBy, R.max"," * @example"," *"," *      R.min(789, 123); //=> 123"," *      R.min('a', 'b'); //=> 'a'"," */","module.exports = _curry2(function min(a, b) { return b < a ? b : a; });",""],"l":{"1":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/minBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/minBy.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"minBy","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":29}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},{"start":{"line":29,"column":27},"end":{"line":29,"column":28}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Takes a function and two values, and returns whichever value produces the"," * smaller result when passed to the provided function."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Relation"," * @sig Ord b => (a -> b) -> a -> a -> a"," * @param {Function} f"," * @param {*} a"," * @param {*} b"," * @return {*}"," * @see R.min, R.maxBy"," * @example"," *"," *      //  square :: Number -> Number"," *      var square = n => n * n;"," *"," *      R.minBy(square, -3, 2); //=> 2"," *"," *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1"," *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity"," */","module.exports = _curry3(function minBy(f, a, b) {","  return f(b) < f(a) ? b : a;","});",""],"l":{"1":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/modulo.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/modulo.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"modulo","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":29,"column":0},"end":{"line":29,"column":66}},"3":{"start":{"line":29,"column":49},"end":{"line":29,"column":62}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Divides the first parameter by the second and returns the remainder. Note"," * that this function preserves the JavaScript-style behavior for modulo. For"," * mathematical modulo see `mathMod`."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category Math"," * @sig Number -> Number -> Number"," * @param {Number} a The value to the divide."," * @param {Number} b The pseudo-modulus"," * @return {Number} The result of `b % a`."," * @see R.mathMod"," * @example"," *"," *      R.modulo(17, 3); //=> 2"," *      // JS behavior:"," *      R.modulo(-17, 3); //=> -2"," *      R.modulo(17, -3); //=> 2"," *"," *      var isOdd = R.modulo(R.__, 2);"," *      isOdd(42); //=> 0"," *      isOdd(21); //=> 1"," */","module.exports = _curry2(function modulo(a, b) { return a % b; });",""],"l":{"1":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/multiply.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/multiply.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"multiply","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":68}},"3":{"start":{"line":24,"column":51},"end":{"line":24,"column":64}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Multiplies two numbers. Equivalent to `a * b` but curried."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Math"," * @sig Number -> Number -> Number"," * @param {Number} a The first value."," * @param {Number} b The second value."," * @return {Number} The result of `a * b`."," * @see R.divide"," * @example"," *"," *      var double = R.multiply(2);"," *      var triple = R.multiply(3);"," *      double(3);       //=>  6"," *      triple(4);       //=> 12"," *      R.multiply(2, 5);  //=> 10"," */","module.exports = _curry2(function multiply(a, b) { return a * b; });",""],"l":{"1":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/negate.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/negate.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"negate","line":18,"loc":{"start":{"line":18,"column":25},"end":{"line":18,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":60}},"3":{"start":{"line":18,"column":46},"end":{"line":18,"column":56}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Negates its argument."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Math"," * @sig Number -> Number"," * @param {Number} n"," * @return {Number}"," * @example"," *"," *      R.negate(42); //=> -42"," */","module.exports = _curry1(function negate(n) { return -n; });",""],"l":{"1":1,"18":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/none.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/none.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":74}}},"branchMap":{},"code":["var _complement = require('./internal/_complement');","var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xany = require('./internal/_xany');","var any = require('./any');","","","/**"," * Returns `true` if no elements of the list match the predicate, `false`"," * otherwise."," *"," * Dispatches to the `any` method of the second argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> Boolean"," * @param {Function} fn The predicate function."," * @param {Array} list The array to consider."," * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise."," * @see R.all, R.any"," * @example"," *"," *      var isEven = n => n % 2 === 0;"," *"," *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true"," *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false"," */","module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/nthArg.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/nthArg.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"nthArg","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":44}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":24,"column":0},"end":{"line":29,"column":3}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":32}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":5}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":22},"end":{"line":25,"column":23}},{"start":{"line":25,"column":26},"end":{"line":25,"column":31}}]}},"code":["var _curry1 = require('./internal/_curry1');","var curryN = require('./curryN');","var nth = require('./nth');","","","/**"," * Returns a function which returns its nth argument."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category Function"," * @sig Number -> *... -> *"," * @param {Number} n"," * @return {Function}"," * @example"," *"," *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'"," *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'"," * @symb R.nthArg(-1)(a, b, c) = c"," * @symb R.nthArg(0)(a, b, c) = a"," * @symb R.nthArg(1)(a, b, c) = b"," */","module.exports = _curry1(function nthArg(n) {","  var arity = n < 0 ? 1 : n + 1;","  return curryN(arity, function() {","    return nth(n, arguments);","  });","});",""],"l":{"1":1,"2":1,"3":1,"24":1,"25":0,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/of.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/of.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var _of = require('./internal/_of');","","","/**"," * Returns a singleton array containing the value provided."," *"," * Note this `of` is different from the ES6 `of`; See"," * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of"," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category Function"," * @sig a -> [a]"," * @param {*} x any value"," * @return {Array} An array wrapping `x`."," * @example"," *"," *      R.of(null); //=> [null]"," *      R.of([42]); //=> [[42]]"," */","module.exports = _curry1(_of);",""],"l":{"1":1,"2":1,"23":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_of.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_of.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_of","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":1,"column":35},"end":{"line":1,"column":46}}},"branchMap":{},"code":["module.exports = function _of(x) { return [x]; };",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/omit.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/omit.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"omit","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":21,"column":0},"end":{"line":29,"column":3}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":18}},"5":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":25,"column":6},"end":{"line":25,"column":31}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":16}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]}},"code":["var _contains = require('./internal/_contains');","var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a partial copy of an object omitting the keys specified."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig [String] -> {String: *} -> {String: *}"," * @param {Array} names an array of String property names to omit from the new object"," * @param {Object} obj The object to copy from"," * @return {Object} A new object with properties from `names` not on it."," * @see R.pick"," * @example"," *"," *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}"," */","module.exports = _curry2(function omit(names, obj) {","  var result = {};","  for (var prop in obj) {","    if (!_contains(prop, names)) {","      result[prop] = obj[prop];","    }","  }","  return result;","});",""],"l":{"1":1,"2":1,"21":1,"22":0,"23":0,"24":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/once.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/once.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"once","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":43}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":27},"end":{"line":27,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":24,"column":0},"end":{"line":35,"column":3}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":21}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":13}},"6":{"start":{"line":27,"column":2},"end":{"line":34,"column":5}},"7":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"8":{"start":{"line":29,"column":6},"end":{"line":29,"column":20}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":39}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":18}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]}},"code":["var _arity = require('./internal/_arity');","var _curry1 = require('./internal/_curry1');","","","/**"," * Accepts a function `fn` and returns a function that guards invocation of"," * `fn` such that `fn` can only ever be called once, no matter how many times"," * the returned function is invoked. The first value calculated is returned in"," * subsequent invocations."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (a... -> b) -> (a... -> b)"," * @param {Function} fn The function to wrap in a call-only-once wrapper."," * @return {Function} The wrapped function."," * @example"," *"," *      var addOneOnce = R.once(x => x + 1);"," *      addOneOnce(10); //=> 11"," *      addOneOnce(addOneOnce(50)); //=> 11"," */","module.exports = _curry1(function once(fn) {","  var called = false;","  var result;","  return _arity(fn.length, function() {","    if (called) {","      return result;","    }","    called = true;","    result = fn.apply(this, arguments);","    return result;","  });","});",""],"l":{"1":1,"2":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/over.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/over.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0},"b":{},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":29}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":29}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":27},"end":{"line":30,"column":39}}},"4":{"name":"over","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":43}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":26,"column":0},"end":{"line":39,"column":5}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":4}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":67}},"5":{"start":{"line":30,"column":41},"end":{"line":30,"column":63}},"6":{"start":{"line":33,"column":2},"end":{"line":38,"column":5}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":65}},"8":{"start":{"line":37,"column":30},"end":{"line":37,"column":52}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Returns the result of \"setting\" the portion of the given data structure"," * focused by the given lens to the result of applying the given function to"," * the focused value."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Object"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig Lens s a -> (a -> a) -> s -> s"," * @param {Lens} lens"," * @param {*} v"," * @param {*} x"," * @return {*}"," * @see R.prop, R.lensIndex, R.lensProp"," * @example"," *"," *      var headLens = R.lensIndex(0);"," *"," *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']"," */","module.exports = (function() {","  // `Identity` is a functor that holds a single value, where `map` simply","  // transforms the held value with the provided function.","  var Identity = function(x) {","    return {value: x, map: function(f) { return Identity(f(x)); }};","  };","","  return _curry3(function over(lens, f, x) {","    // The value returned by the getter function is first transformed with `f`,","    // then set as the value of an `Identity`. This is then mapped over with the","    // setter function of the lens.","    return lens(function(y) { return Identity(f(y)); })(x).value;","  });","}());",""],"l":{"1":1,"26":1,"29":1,"30":0,"33":1,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pair.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pair.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"pair","line":20,"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":73}},"3":{"start":{"line":20,"column":51},"end":{"line":20,"column":69}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`."," *"," * @func"," * @memberOf R"," * @since v0.18.0"," * @category List"," * @sig a -> b -> (a,b)"," * @param {*} fst"," * @param {*} snd"," * @return {Array}"," * @see R.objOf, R.of"," * @example"," *"," *      R.pair('foo', 'bar'); //=> ['foo', 'bar']"," */","module.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });",""],"l":{"1":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/partial.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/partial.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":78}},"3":{"start":{"line":33,"column":0},"end":{"line":33,"column":51}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _createPartialApplicator = require('./internal/_createPartialApplicator');","","","/**"," * Takes a function `f` and a list of arguments, and returns a function `g`."," * When applied, `g` returns the result of applying `f` to the arguments"," * provided initially followed by the arguments provided to `g`."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category Function"," * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)"," * @param {Function} f"," * @param {Array} args"," * @return {Function}"," * @see R.partialRight"," * @example"," *"," *      var multiply2 = (a, b) => a * b;"," *      var double = R.partial(multiply2, [2]);"," *      double(2); //=> 4"," *"," *      var greet = (salutation, title, firstName, lastName) =>"," *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';"," *"," *      var sayHello = R.partial(greet, ['Hello']);"," *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);"," *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'"," * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)"," */","module.exports = _createPartialApplicator(_concat);",""],"l":{"1":1,"2":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_createPartialApplicator.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_createPartialApplicator.js","s":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":0},"b":{},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"_createPartialApplicator","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":59}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}}},"3":{"name":"(anonymous_3)","line":7,"loc":{"start":{"line":7,"column":56},"end":{"line":7,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":11,"column":2}},"4":{"start":{"line":6,"column":2},"end":{"line":10,"column":5}},"5":{"start":{"line":7,"column":4},"end":{"line":9,"column":7}},"6":{"start":{"line":8,"column":6},"end":{"line":8,"column":53}}},"branchMap":{},"code":["var _arity = require('./_arity');","var _curry2 = require('./_curry2');","","","module.exports = function _createPartialApplicator(concat) {","  return _curry2(function(fn, args) {","    return _arity(Math.max(0, fn.length - args.length), function() {","      return fn.apply(this, concat(args, arguments));","    });","  });","};",""],"l":{"1":1,"2":1,"5":1,"6":2,"7":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/partialRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/partialRight.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":78}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":57}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _createPartialApplicator = require('./internal/_createPartialApplicator');","var flip = require('./flip');","","","/**"," * Takes a function `f` and a list of arguments, and returns a function `g`."," * When applied, `g` returns the result of applying `f` to the arguments"," * provided to `g` followed by the arguments provided initially."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category Function"," * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)"," * @param {Function} f"," * @param {Array} args"," * @return {Function}"," * @see R.partial"," * @example"," *"," *      var greet = (salutation, title, firstName, lastName) =>"," *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';"," *"," *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);"," *"," *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'"," * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)"," */","module.exports = _createPartialApplicator(flip(_concat));",""],"l":{"1":1,"2":1,"3":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/partition.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/partition.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":29,"column":0},"end":{"line":29,"column":40}}},"branchMap":{},"code":["var filter = require('./filter');","var juxt = require('./juxt');","var reject = require('./reject');","","","/**"," * Takes a predicate and a list or other \"filterable\" object and returns the"," * pair of filterable objects of the same type of elements which do and do not"," * satisfy, the predicate, respectively."," *"," * @func"," * @memberOf R"," * @since v0.1.4"," * @category List"," * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]"," * @param {Function} pred A predicate to determine which side the element belongs to."," * @param {Array} filterable the list (or other filterable) to partition."," * @return {Array} An array, containing first the subset of elements that satisfy the"," *         predicate, and second the subset of elements that do not satisfy."," * @see R.filter, R.reject"," * @example"," *"," *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);"," *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]"," *"," *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });"," *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]"," */","module.exports = juxt([filter, reject]);",""],"l":{"1":1,"2":1,"3":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pathEq.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pathEq.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"pathEq","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":30,"column":0},"end":{"line":32,"column":3}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":39}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var equals = require('./equals');","var path = require('./path');","","","/**"," * Determines whether a nested path on an object has a specific value, in"," * `R.equals` terms. Most likely used to filter a list."," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category Relation"," * @typedefn Idx = String | Int"," * @sig [Idx] -> a -> {a} -> Boolean"," * @param {Array} path The path of the nested property to use"," * @param {*} val The value to compare the nested property with"," * @param {Object} obj The object to check the nested property in"," * @return {Boolean} `true` if the value equals the nested object property,"," *         `false` otherwise."," * @example"," *"," *      var user1 = { address: { zipCode: 90210 } };"," *      var user2 = { address: { zipCode: 55555 } };"," *      var user3 = { name: 'Bob' };"," *      var users = [ user1, user2, user3 ];"," *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);"," *      R.filter(isFamous, users); //=> [ user1 ]"," */","module.exports = _curry3(function pathEq(_path, val, obj) {","  return equals(path(_path, obj), val);","});",""],"l":{"1":1,"2":1,"3":1,"30":1,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pathOr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pathOr.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"pathOr","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":25,"column":0},"end":{"line":27,"column":3}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":36}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var defaultTo = require('./defaultTo');","var path = require('./path');","","","/**"," * If the given, non-null object has a value at the given path, returns the"," * value at that path. Otherwise returns the provided default value."," *"," * @func"," * @memberOf R"," * @since v0.18.0"," * @category Object"," * @typedefn Idx = String | Int"," * @sig a -> [Idx] -> {a} -> a"," * @param {*} d The default value."," * @param {Array} p The path to use."," * @param {Object} obj The object to retrieve the nested property from."," * @return {*} The data at `path` of the supplied object or the default value."," * @example"," *"," *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2"," *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\""," */","module.exports = _curry3(function pathOr(d, p, obj) {","  return defaultTo(d, path(p, obj));","});",""],"l":{"1":1,"2":1,"3":1,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pathSatisfies.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pathSatisfies.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pathSatisfies","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":58}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":9},"end":{"line":25,"column":28}},{"start":{"line":25,"column":32},"end":{"line":25,"column":57}}]}},"code":["var _curry3 = require('./internal/_curry3');","var path = require('./path');","","","/**"," * Returns `true` if the specified object property at given path satisfies the"," * given predicate; `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Logic"," * @typedefn Idx = String | Int"," * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean"," * @param {Function} pred"," * @param {Array} propPath"," * @param {*} obj"," * @return {Boolean}"," * @see R.propSatisfies, R.path"," * @example"," *"," *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true"," */","module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {","  return propPath.length > 0 && pred(path(propPath, obj));","});",""],"l":{"1":1,"2":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pick.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pick.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pick","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"5":{"start":{"line":25,"column":2},"end":{"line":30,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"7":{"start":{"line":27,"column":6},"end":{"line":27,"column":43}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":13}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a partial copy of an object containing only the keys specified. If"," * the key does not exist, the property is ignored."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig [k] -> {k: v} -> {k: v}"," * @param {Array} names an array of String property names to copy onto a new object"," * @param {Object} obj The object to copy from"," * @return {Object} A new object with only properties from `names` on it."," * @see R.omit, R.props"," * @example"," *"," *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}"," *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}"," */","module.exports = _curry2(function pick(names, obj) {","  var result = {};","  var idx = 0;","  while (idx < names.length) {","    if (names[idx] in obj) {","      result[names[idx]] = obj[names[idx]];","    }","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pickAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pickAll.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"pickAll","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"6":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":26}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":29}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":13}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Similar to `pick` except that this one includes a `key: undefined` pair for"," * properties that don't exist."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig [k] -> {k: v} -> {k: v}"," * @param {Array} names an array of String property names to copy onto a new object"," * @param {Object} obj The object to copy from"," * @return {Object} A new object with only properties from `names` on it."," * @see R.pick"," * @example"," *"," *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}"," *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}"," */","module.exports = _curry2(function pickAll(names, obj) {","  var result = {};","  var idx = 0;","  var len = names.length;","  while (idx < len) {","    var name = names[idx];","    result[name] = obj[name];","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pickBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pickBy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pickBy","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"4":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"5":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"6":{"start":{"line":28,"column":6},"end":{"line":28,"column":31}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a partial copy of an object containing only the keys that satisfy"," * the supplied predicate."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Object"," * @sig (v, k -> Boolean) -> {k: v} -> {k: v}"," * @param {Function} pred A predicate to determine whether or not a key"," *        should be included on the output object."," * @param {Object} obj The object to copy from"," * @return {Object} A new object with only properties that satisfy `pred`"," *         on it."," * @see R.pick, R.filter"," * @example"," *"," *      var isUpperCase = (val, key) => key.toUpperCase() === key;"," *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}"," */","module.exports = _curry2(function pickBy(test, obj) {","  var result = {};","  for (var prop in obj) {","    if (test(obj[prop], prop, obj)) {","      result[prop] = obj[prop];","    }","  }","  return result;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"28":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pipeK.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/pipeK.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pipeK","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":38,"column":0},"end":{"line":43,"column":2}},"4":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"5":{"start":{"line":40,"column":4},"end":{"line":40,"column":60}},"6":{"start":{"line":42,"column":2},"end":{"line":42,"column":50}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["var composeK = require('./composeK');","var reverse = require('./reverse');","","/**"," * Returns the left-to-right Kleisli composition of the provided functions,"," * each of which must return a value of a type supported by [`chain`](#chain)."," *"," * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Function"," * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)"," * @param {...Function}"," * @return {Function}"," * @see R.composeK"," * @example"," *"," *      //  parseJson :: String -> Maybe *"," *      //  get :: String -> Object -> Maybe *"," *"," *      //  getStateCode :: Maybe String -> Maybe String"," *      var getStateCode = R.pipeK("," *        parseJson,"," *        get('user'),"," *        get('address'),"," *        get('state'),"," *        R.compose(Maybe.of, R.toUpper)"," *      );"," *"," *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');"," *      //=> Just('NY')"," *      getStateCode('[Invalid JSON]');"," *      //=> Nothing()"," * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))"," */","module.exports = function pipeK() {","  if (arguments.length === 0) {","    throw new Error('pipeK requires at least one argument');","  }","  return composeK.apply(this, reverse(arguments));","};",""],"l":{"1":1,"2":1,"38":1,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/prepend.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/prepend.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"prepend","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":29}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a new list with the given element at the front, followed by the"," * contents of the list."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig a -> [a] -> [a]"," * @param {*} el The item to add to the head of the output list."," * @param {Array} list The array to add to the tail of the output list."," * @return {Array} A new array."," * @see R.append"," * @example"," *"," *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']"," */","module.exports = _curry2(function prepend(el, list) {","  return _concat([el], list);","});",""],"l":{"1":1,"2":1,"22":1,"23":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/product.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/product.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"branchMap":{},"code":["var multiply = require('./multiply');","var reduce = require('./reduce');","","","/**"," * Multiplies together all the elements of a list."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Math"," * @sig [Number] -> Number"," * @param {Array} list An array of numbers"," * @return {Number} The product of all the numbers in the list."," * @see R.reduce"," * @example"," *"," *      R.product([2,4,6,8,100,1]); //=> 38400"," */","module.exports = reduce(multiply, 1);",""],"l":{"1":1,"2":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/project.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/project.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}}},"branchMap":{},"code":["var _map = require('./internal/_map');","var identity = require('./identity');","var pickAll = require('./pickAll');","var useWith = require('./useWith');","","","/**"," * Reasonable analog to SQL `select` statement."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @category Relation"," * @sig [k] -> [{k: v}] -> [{k: v}]"," * @param {Array} props The property names to project"," * @param {Array} objs The objects to query"," * @return {Array} An array of objects with just the `props` properties."," * @example"," *"," *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};"," *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};"," *      var kids = [abby, fred];"," *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]"," */","module.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity",""],"l":{"1":1,"2":1,"3":1,"4":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/useWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/useWith.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"useWith","line":34,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":60}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":34,"column":0},"end":{"line":44,"column":3}},"4":{"start":{"line":35,"column":2},"end":{"line":43,"column":5}},"5":{"start":{"line":36,"column":4},"end":{"line":36,"column":18}},"6":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}},"7":{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},"8":{"start":{"line":39,"column":6},"end":{"line":39,"column":62}},"9":{"start":{"line":40,"column":6},"end":{"line":40,"column":15}},"10":{"start":{"line":42,"column":4},"end":{"line":42,"column":99}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var curryN = require('./curryN');","","","/**"," * Accepts a function `fn` and a list of transformer functions and returns a"," * new curried function. When the new function is invoked, it calls the"," * function `fn` with parameters consisting of the result of calling each"," * supplied handler on successive arguments to the new function."," *"," * If more arguments are passed to the returned function than transformer"," * functions, those arguments are passed directly to `fn` as additional"," * parameters. If you expect additional arguments that don't need to be"," * transformed, although you can ignore them, it's best to pass an identity"," * function so that the new function reports the correct arity."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)"," * @param {Function} fn The function to wrap."," * @param {Array} transformers A list of transformer functions"," * @return {Function} The wrapped function."," * @see R.converge"," * @example"," *"," *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81"," *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81"," *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32"," *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32"," * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))"," */","module.exports = _curry2(function useWith(fn, transformers) {","  return curryN(transformers.length, function() {","    var args = [];","    var idx = 0;","    while (idx < transformers.length) {","      args.push(transformers[idx].call(this, arguments[idx]));","      idx += 1;","    }","    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));","  });","});",""],"l":{"1":1,"2":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propEq.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propEq.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"propEq","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":29,"column":0},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":32}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var equals = require('./equals');","","","/**"," * Returns `true` if the specified object property is equal, in `R.equals`"," * terms, to the given value; `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig String -> a -> Object -> Boolean"," * @param {String} name"," * @param {*} val"," * @param {*} obj"," * @return {Boolean}"," * @see R.equals, R.propSatisfies"," * @example"," *"," *      var abby = {name: 'Abby', age: 7, hair: 'blond'};"," *      var fred = {name: 'Fred', age: 12, hair: 'brown'};"," *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};"," *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};"," *      var kids = [abby, fred, rusty, alois];"," *      var hasBrownHair = R.propEq('hair', 'brown');"," *      R.filter(hasBrownHair, kids); //=> [fred, rusty]"," */","module.exports = _curry3(function propEq(name, val, obj) {","  return equals(val, obj[name]);","});",""],"l":{"1":1,"2":1,"29":1,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propIs.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propIs.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"propIs","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"3":{"start":{"line":25,"column":0},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var is = require('./is');","","","/**"," * Returns `true` if the specified object property is of the given type;"," * `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Type"," * @sig Type -> String -> Object -> Boolean"," * @param {Function} type"," * @param {String} name"," * @param {*} obj"," * @return {Boolean}"," * @see R.is, R.propSatisfies"," * @example"," *"," *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true"," *      R.propIs(Number, 'x', {x: 'foo'});    //=> false"," *      R.propIs(Number, 'x', {});            //=> false"," */","module.exports = _curry3(function propIs(type, name, obj) {","  return is(type, obj[name]);","});",""],"l":{"1":1,"2":1,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propOr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propOr.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"propOr","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":31,"column":0},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":54}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":41},"end":{"line":32,"column":47}},{"start":{"line":32,"column":50},"end":{"line":32,"column":53}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":21}},{"start":{"line":32,"column":25},"end":{"line":32,"column":37}}]}},"code":["var _curry3 = require('./internal/_curry3');","var _has = require('./internal/_has');","","","/**"," * If the given, non-null object has an own property with the specified name,"," * returns the value of that property. Otherwise returns the provided default"," * value."," *"," * @func"," * @memberOf R"," * @since v0.6.0"," * @category Object"," * @sig a -> String -> Object -> a"," * @param {*} val The default value."," * @param {String} p The name of the property to return."," * @param {Object} obj The object to query."," * @return {*} The value of given property of the supplied object or the default value."," * @example"," *"," *      var alice = {"," *        name: 'ALICE',"," *        age: 101"," *      };"," *      var favorite = R.prop('favoriteLibrary');"," *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');"," *"," *      favorite(alice);  //=> undefined"," *      favoriteWithDefault(alice);  //=> 'Ramda'"," */","module.exports = _curry3(function propOr(val, p, obj) {","  return (obj != null && _has(p, obj)) ? obj[p] : val;","});",""],"l":{"1":1,"2":1,"31":1,"32":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propSatisfies.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/propSatisfies.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"propSatisfies","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":24,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Returns `true` if the specified object property satisfies the given"," * predicate; `false` otherwise."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Logic"," * @sig (a -> Boolean) -> String -> {String: a} -> Boolean"," * @param {Function} pred"," * @param {String} name"," * @param {*} obj"," * @return {Boolean}"," * @see R.propEq, R.propIs"," * @example"," *"," *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true"," */","module.exports = _curry3(function propSatisfies(pred, name, obj) {","  return pred(obj[name]);","});",""],"l":{"1":1,"22":1,"23":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/props.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/props.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"props","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":35,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":22}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":15}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"6":{"start":{"line":29,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":28}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":13}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Acts as multiple `prop`: array of keys in, array of values out. Preserves"," * order."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Object"," * @sig [k] -> {k: v} -> [v]"," * @param {Array} ps The property names to fetch"," * @param {Object} obj The object to query"," * @return {Array} The corresponding values or partially applied function."," * @example"," *"," *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]"," *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]"," *"," *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));"," *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'"," */","module.exports = _curry2(function props(ps, obj) {","  var len = ps.length;","  var out = [];","  var idx = 0;","","  while (idx < len) {","    out[idx] = obj[ps[idx]];","    idx += 1;","  }","","  return out;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/range.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/range.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"range","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":21,"column":0},"end":{"line":32,"column":3}},"4":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":67}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":15}},"8":{"start":{"line":27,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":19}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":11}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},{"start":{"line":22,"column":27},"end":{"line":22,"column":40}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _isNumber = require('./internal/_isNumber');","","","/**"," * Returns a list of numbers from `from` (inclusive) to `to` (exclusive)."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig Number -> Number -> [Number]"," * @param {Number} from The first number in the list."," * @param {Number} to One more than the last number in the list."," * @return {Array} The list of numbers in tthe set `[a, b)`."," * @example"," *"," *      R.range(1, 5);    //=> [1, 2, 3, 4]"," *      R.range(50, 53);  //=> [50, 51, 52]"," */","module.exports = _curry2(function range(from, to) {","  if (!(_isNumber(from) && _isNumber(to))) {","    throw new TypeError('Both arguments to range must be numbers');","  }","  var result = [];","  var n = from;","  while (n < to) {","    result.push(n);","    n += 1;","  }","  return result;","});",""],"l":{"1":1,"2":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduceRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduceRight.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"reduceRight","line":46,"loc":{"start":{"line":46,"column":25},"end":{"line":46,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":46,"column":0},"end":{"line":53,"column":3}},"3":{"start":{"line":47,"column":2},"end":{"line":47,"column":28}},"4":{"start":{"line":48,"column":2},"end":{"line":51,"column":3}},"5":{"start":{"line":49,"column":4},"end":{"line":49,"column":29}},"6":{"start":{"line":50,"column":4},"end":{"line":50,"column":13}},"7":{"start":{"line":52,"column":2},"end":{"line":52,"column":13}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Returns a single item by iterating through the list, successively calling"," * the iterator function and passing it an accumulator value and the current"," * value from the array, and then passing the result to the next call."," *"," * Similar to `reduce`, except moves through the input list from the right to"," * the left."," *"," * The iterator function receives two values: *(value, acc)*, while the arguments'"," * order of `reduce`'s iterator function is *(acc, value)*."," *"," * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse"," * arrays), unlike the native `Array.prototype.reduce` method. For more details"," * on this behavior, see:"," * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description"," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a, b -> b) -> b -> [a] -> b"," * @param {Function} fn The iterator function. Receives two values, the current element from the array"," *        and the accumulator."," * @param {*} acc The accumulator value."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @see R.reduce, R.addIndex"," * @example"," *"," *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2"," *          -               -2"," *         / \\              / \\"," *        1   -            1   3"," *           / \\              / \\"," *          2   -     ==>    2  -1"," *             / \\              / \\"," *            3   -            3   4"," *               / \\              / \\"," *              4   0            4   0"," *"," * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))"," */","module.exports = _curry3(function reduceRight(fn, acc, list) {","  var idx = list.length - 1;","  while (idx >= 0) {","    acc = fn(list[idx], acc);","    idx -= 1;","  }","  return acc;","});",""],"l":{"1":1,"46":1,"47":0,"48":0,"49":0,"50":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduceWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduceWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_reduceWhile","line":35,"loc":{"start":{"line":35,"column":32},"end":{"line":35,"column":73}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":17},"end":{"line":36,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":35,"column":0},"end":{"line":39,"column":3}},"5":{"start":{"line":36,"column":2},"end":{"line":38,"column":14}},"6":{"start":{"line":37,"column":4},"end":{"line":37,"column":53}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":26},"end":{"line":37,"column":36}},{"start":{"line":37,"column":39},"end":{"line":37,"column":52}}]}},"code":["var _curryN = require('./internal/_curryN');","var _reduce = require('./internal/_reduce');","var _reduced = require('./internal/_reduced');","","","/**"," * Like `reduce`, `reduceWhile` returns a single item by iterating through"," * the list, successively calling the iterator function. `reduceWhile` also"," * takes a predicate that is evaluated before each step. If the predicate returns"," * `false`, it \"short-circuits\" the iteration and returns the current value"," * of the accumulator."," *"," * @func"," * @memberOf R"," * @since v0.22.0"," * @category List"," * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a"," * @param {Function} pred The predicate. It is passed the accumulator and the"," *        current element."," * @param {Function} fn The iterator function. Receives two values, the"," *        accumulator and the current element."," * @param {*} a The accumulator value."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @see R.reduce, R.reduced"," * @example"," *"," *      var isOdd = (acc, x) => x % 2 === 1;"," *      var xs = [1, 3, 5, 60, 777, 800];"," *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9"," *"," *      var ys = [2, 4, 6]"," *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111"," */","module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {","  return _reduce(function(acc, x) {","    return pred(acc, x) ? fn(acc, x) : _reduced(acc);","  }, a, list);","});",""],"l":{"1":1,"2":1,"3":1,"35":1,"36":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduced.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/reduced.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var _reduced = require('./internal/_reduced');","","/**"," * Returns a value wrapped to indicate that it is the final value of the reduce"," * and transduce functions. The returned value should be considered a black"," * box: the internal structure is not guaranteed to be stable."," *"," * Note: this optimization is unavailable to functions not explicitly listed"," * above. For instance, it is not currently supported by reduceRight."," *"," * @func"," * @memberOf R"," * @since v0.15.0"," * @category List"," * @sig a -> *"," * @param {*} x The final value of the reduce."," * @return {*} The wrapped value."," * @see R.reduce, R.transduce"," * @example"," *"," *      R.reduce("," *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),"," *        0,"," *        [1, 2, 3, 4, 5]) // 10"," */","","module.exports = _curry1(_reduced);",""],"l":{"1":1,"2":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/remove.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/remove.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"remove","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":51}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":30}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":16}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Removes the sub-list of `list` starting at index `start` and containing"," * `count` elements. _Note that this is not destructive_: it returns a copy of"," * the list with the changes."," * <small>No lists have been harmed in the application of this function.</small>"," *"," * @func"," * @memberOf R"," * @since v0.2.2"," * @category List"," * @sig Number -> Number -> [a] -> [a]"," * @param {Number} start The position to start removing elements"," * @param {Number} count The number of elements to remove"," * @param {Array} list The list to remove from"," * @return {Array} A new Array with `count` elements from `start` removed."," * @example"," *"," *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]"," */","module.exports = _curry3(function remove(start, count, list) {","  var result = Array.prototype.slice.call(list, 0);","  result.splice(start, count);","  return result;","});",""],"l":{"1":1,"23":1,"24":0,"25":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/repeat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/repeat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"repeat","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var always = require('./always');","var times = require('./times');","","","/**"," * Returns a fixed list of size `n` containing a specified identical value."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category List"," * @sig a -> n -> [a]"," * @param {*} value The value to repeat."," * @param {Number} n The desired size of the output list."," * @return {Array} A new array containing `n` `value`s."," * @example"," *"," *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']"," *"," *      var obj = {};"," *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]"," *      repeatedObjs[0] === repeatedObjs[1]; //=> true"," * @symb R.repeat(a, 0) = []"," * @symb R.repeat(a, 1) = [a]"," * @symb R.repeat(a, 2) = [a, a]"," */","module.exports = _curry2(function repeat(value, n) {","  return times(always(value), n);","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/times.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/times.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"times","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":26,"column":0},"end":{"line":40,"column":3}},"3":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":14}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":11}},"6":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":60}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"9":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":14}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":13}},{"start":{"line":31,"column":17},"end":{"line":31,"column":27}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Calls an input function `n` times, returning an array containing the results"," * of those function calls."," *"," * `fn` is passed one argument: The current value of `n`, which begins at `0`"," * and is gradually incremented to `n - 1`."," *"," * @func"," * @memberOf R"," * @since v0.2.3"," * @category List"," * @sig (Number -> a) -> Number -> [a]"," * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`."," * @param {Number} n A value between `0` and `n - 1`. Increments after each function call."," * @return {Array} An array containing the return values of all calls to `fn`."," * @example"," *"," *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]"," * @symb R.times(f, 0) = []"," * @symb R.times(f, 1) = [f(0)]"," * @symb R.times(f, 2) = [f(0), f(1)]"," */","module.exports = _curry2(function times(fn, n) {","  var len = Number(n);","  var idx = 0;","  var list;","","  if (len < 0 || isNaN(len)) {","    throw new RangeError('n must be a non-negative number');","  }","  list = new Array(len);","  while (idx < len) {","    list[idx] = fn(idx);","    idx += 1;","  }","  return list;","});",""],"l":{"1":1,"26":1,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/replace.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/replace.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"replace","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":41}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Replace a substring or regex match in a string with a replacement."," *"," * @func"," * @memberOf R"," * @since v0.7.0"," * @category String"," * @sig RegExp|String -> String -> String -> String"," * @param {RegExp|String} pattern A regular expression or a substring to match."," * @param {String} replacement The string to replace the matches with."," * @param {String} str The String to do the search and replacement in."," * @return {String} The result."," * @example"," *"," *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'"," *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'"," *"," *      // Use the \"g\" (global) flag to replace all occurrences:"," *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'"," */","module.exports = _curry3(function replace(regex, replacement, str) {","  return str.replace(regex, replacement);","});",""],"l":{"1":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/scan.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/scan.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"scan","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":34,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":24}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"6":{"start":{"line":28,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":29}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":26}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":13}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":16}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Scan is similar to reduce, but returns a list of successively reduced values"," * from the left"," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category List"," * @sig (a,b -> a) -> a -> [b] -> [a]"," * @param {Function} fn The iterator function. Receives two values, the accumulator and the"," *        current element from the array"," * @param {*} acc The accumulator value."," * @param {Array} list The list to iterate over."," * @return {Array} A list of all intermediately reduced values."," * @example"," *"," *      var numbers = [1, 2, 3, 4];"," *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]"," * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]"," */","module.exports = _curry3(function scan(fn, acc, list) {","  var idx = 0;","  var len = list.length;","  var result = [acc];","  while (idx < len) {","    acc = fn(acc, list[idx]);","    result[idx + 1] = acc;","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sequence.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sequence.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"sequence","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":60}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"6":{"start":{"line":32,"column":0},"end":{"line":38,"column":3}},"7":{"start":{"line":33,"column":2},"end":{"line":37,"column":29}},"8":{"start":{"line":35,"column":35},"end":{"line":35,"column":67}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":28}},{"start":{"line":35,"column":4},"end":{"line":37,"column":28}}]}},"code":["var _curry2 = require('./internal/_curry2');","var ap = require('./ap');","var map = require('./map');","var prepend = require('./prepend');","var reduceRight = require('./reduceRight');","","","/**"," * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)"," * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an"," * Applicative of Traversable."," *"," * Dispatches to the `sequence` method of the second argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)"," * @param {Function} of"," * @param {*} traversable"," * @return {*}"," * @see R.traverse"," * @example"," *"," *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])"," *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()"," *"," *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]"," *      R.sequence(R.of, Nothing());       //=> [Nothing()]"," */","module.exports = _curry2(function sequence(of, traversable) {","  return typeof traversable.sequence === 'function' ?","    traversable.sequence(of) :","    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },","                of([]),","                traversable);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"32":1,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/set.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/set.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"set","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":34}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var always = require('./always');","var over = require('./over');","","","/**"," * Returns the result of \"setting\" the portion of the given data structure"," * focused by the given lens to the given value."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Object"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig Lens s a -> a -> s -> s"," * @param {Lens} lens"," * @param {*} v"," * @param {*} x"," * @return {*}"," * @see R.prop, R.lensIndex, R.lensProp"," * @example"," *"," *      var xLens = R.lensProp('x');"," *"," *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}"," *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}"," */","module.exports = _curry3(function set(lens, v, x) {","  return over(lens, always(v), x);","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sort.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sort.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"sort","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":62}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a copy of the list, sorted according to the comparator function,"," * which should accept two values at a time and return a negative number if the"," * first value is smaller, a positive number if it's larger, and zero if they"," * are equal. Please note that this is a **copy** of the list. It does not"," * modify the original."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a,a -> Number) -> [a] -> [a]"," * @param {Function} comparator A sorting function :: a -> b -> Int"," * @param {Array} list The list to sort"," * @return {Array} a new array with its elements sorted by the comparator function."," * @example"," *"," *      var diff = function(a, b) { return a - b; };"," *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]"," */","module.exports = _curry2(function sort(comparator, list) {","  return Array.prototype.slice.call(list, 0).sort(comparator);","});",""],"l":{"1":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sortBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sortBy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"sortBy","line":36,"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":51}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":50},"end":{"line":37,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":36,"column":0},"end":{"line":42,"column":3}},"3":{"start":{"line":37,"column":2},"end":{"line":41,"column":5}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":19}},"5":{"start":{"line":39,"column":4},"end":{"line":39,"column":19}},"6":{"start":{"line":40,"column":4},"end":{"line":40,"column":42}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":21},"end":{"line":40,"column":23}},{"start":{"line":40,"column":26},"end":{"line":40,"column":41}}]},"2":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":36},"end":{"line":40,"column":37}},{"start":{"line":40,"column":40},"end":{"line":40,"column":41}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Sorts the list according to the supplied function."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig Ord b => (a -> b) -> [a] -> [a]"," * @param {Function} fn"," * @param {Array} list The list to sort."," * @return {Array} A new list sorted by the keys generated by `fn`."," * @example"," *"," *      var sortByFirstItem = R.sortBy(R.prop(0));"," *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));"," *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];"," *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]"," *      var alice = {"," *        name: 'ALICE',"," *        age: 101"," *      };"," *      var bob = {"," *        name: 'Bob',"," *        age: -10"," *      };"," *      var clara = {"," *        name: 'clara',"," *        age: 314.159"," *      };"," *      var people = [clara, bob, alice];"," *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]"," */","module.exports = _curry2(function sortBy(fn, list) {","  return Array.prototype.slice.call(list, 0).sort(function(a, b) {","    var aa = fn(a);","    var bb = fn(b);","    return aa < bb ? -1 : aa > bb ? 1 : 0;","  });","});",""],"l":{"1":1,"36":1,"37":0,"38":0,"39":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sortWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/sortWith.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"sortWith","line":36,"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":54}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":50},"end":{"line":37,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":36,"column":0},"end":{"line":46,"column":3}},"3":{"start":{"line":37,"column":2},"end":{"line":45,"column":5}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":19}},"5":{"start":{"line":39,"column":4},"end":{"line":39,"column":14}},"6":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"7":{"start":{"line":41,"column":6},"end":{"line":41,"column":28}},"8":{"start":{"line":42,"column":6},"end":{"line":42,"column":13}},"9":{"start":{"line":44,"column":4},"end":{"line":44,"column":18}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":23}},{"start":{"line":40,"column":27},"end":{"line":40,"column":41}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Sorts a list according to a list of comparators."," *"," * @func"," * @memberOf R"," * @since v0.23.0"," * @category Relation"," * @sig [a -> a -> Number] -> [a] -> [a]"," * @param {Array} functions A list of comparator functions."," * @param {Array} list The list to sort."," * @return {Array} A new list sorted according to the comarator functions."," * @example"," *"," *      var alice = {"," *        name: 'alice',"," *        age: 40"," *      };"," *      var bob = {"," *        name: 'bob',"," *        age: 30"," *      };"," *      var clara = {"," *        name: 'clara',"," *        age: 40"," *      };"," *      var people = [clara, bob, alice];"," *      var ageNameSort = R.sortWith(["," *        R.descend(R.prop('age')),"," *        R.ascend(R.prop('name'))"," *      ]);"," *      ageNameSort(people); //=> [alice, clara, bob]"," */","module.exports = _curry2(function sortWith(fns, list) {","  return Array.prototype.slice.call(list, 0).sort(function(a, b) {","    var result = 0;","    var i = 0;","    while (result === 0 && i < fns.length) {","      result = fns[i](a, b);","      i += 1;","    }","    return result;","  });","});",""],"l":{"1":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/split.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/split.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"branchMap":{},"code":["var invoker = require('./invoker');","","","/**"," * Splits a string into an array of strings based on the given"," * separator."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category String"," * @sig (String | RegExp) -> String -> [String]"," * @param {String|RegExp} sep The pattern."," * @param {String} str The string to separate into an array."," * @return {Array} The array of strings from `str` separated by `str`."," * @see R.join"," * @example"," *"," *      var pathComponents = R.split('/');"," *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']"," *"," *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']"," */","module.exports = invoker(1, 'split');",""],"l":{"1":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/splitAt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/splitAt.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"splitAt","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":70}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var length = require('./length');","var slice = require('./slice');","","","/**"," * Splits a given list or string at a given index."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig Number -> [a] -> [[a], [a]]"," * @sig Number -> String -> [String, String]"," * @param {Number} index The index where the array/string is split."," * @param {Array|String} array The array/string to be split."," * @return {Array}"," * @example"," *"," *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]"," *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']"," *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']"," */","module.exports = _curry2(function splitAt(index, array) {","  return [slice(0, index, array), slice(index, length(array), array)];","});",""],"l":{"1":1,"2":1,"3":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/splitEvery.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/splitEvery.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"splitEvery","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":22,"column":0},"end":{"line":32,"column":3}},"4":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":79}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":44}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]}},"code":["var _curry2 = require('./internal/_curry2');","var slice = require('./slice');","","","/**"," * Splits a collection into slices of the specified length."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category List"," * @sig Number -> [a] -> [[a]]"," * @sig Number -> String -> [String]"," * @param {Number} n"," * @param {Array} list"," * @return {Array}"," * @example"," *"," *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]"," *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']"," */","module.exports = _curry2(function splitEvery(n, list) {","  if (n <= 0) {","    throw new Error('First argument to splitEvery must be a positive integer');","  }","  var result = [];","  var idx = 0;","  while (idx < list.length) {","    result.push(slice(idx, idx += n, list));","  }","  return result;","});",""],"l":{"1":1,"2":1,"22":1,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/splitWhen.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/splitWhen.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"splitWhen","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":34,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":24}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"6":{"start":{"line":28,"column":2},"end":{"line":31,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":13}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":57}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":18}},{"start":{"line":28,"column":22},"end":{"line":28,"column":38}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Takes a list and a predicate and returns a pair of lists with the following properties:"," *"," *  - the result of concatenating the two output lists is equivalent to the input list;"," *  - none of the elements of the first output list satisfies the predicate; and"," *  - if the second output list is non-empty, its first element satisfies the predicate."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> [[a], [a]]"," * @param {Function} pred The predicate that determines where the array is split."," * @param {Array} list The array to be split."," * @return {Array}"," * @example"," *"," *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]"," */","module.exports = _curry2(function splitWhen(pred, list) {","  var idx = 0;","  var len = list.length;","  var prefix = [];","","  while (idx < len && !pred(list[idx])) {","    prefix.push(list[idx]);","    idx += 1;","  }","","  return [prefix, Array.prototype.slice.call(list, idx)];","});",""],"l":{"1":1,"23":1,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/subtract.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/subtract.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"subtract","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"3":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Subtracts its second argument from its first argument."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Math"," * @sig Number -> Number -> Number"," * @param {Number} a The first value."," * @param {Number} b The second value."," * @return {Number} The result of `a - b`."," * @see R.add"," * @example"," *"," *      R.subtract(10, 8); //=> 2"," *"," *      var minus5 = R.subtract(R.__, 5);"," *      minus5(17); //=> 12"," *"," *      var complementaryAngle = R.subtract(90);"," *      complementaryAngle(30); //=> 60"," *      complementaryAngle(72); //=> 18"," */","module.exports = _curry2(function subtract(a, b) {","  return Number(a) - Number(b);","});",""],"l":{"1":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/symmetricDifference.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/symmetricDifference.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"symmetricDifference","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":68}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"4":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":68}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var concat = require('./concat');","var difference = require('./difference');","","","/**"," * Finds the set (i.e. no duplicates) of all elements contained in the first or"," * second list, but not both."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Relation"," * @sig [*] -> [*] -> [*]"," * @param {Array} list1 The first list."," * @param {Array} list2 The second list."," * @return {Array} The elements in `list1` or `list2`, but not both."," * @see R.symmetricDifferenceWith, R.difference, R.differenceWith"," * @example"," *"," *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]"," *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]"," */","module.exports = _curry2(function symmetricDifference(list1, list2) {","  return concat(difference(list1, list2), difference(list2, list1));","});",""],"l":{"1":1,"2":1,"3":1,"24":1,"25":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/symmetricDifferenceWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/symmetricDifferenceWith.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"symmetricDifferenceWith","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":78}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":88}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var concat = require('./concat');","var differenceWith = require('./differenceWith');","","","/**"," * Finds the set (i.e. no duplicates) of all elements contained in the first or"," * second list, but not both. Duplication is determined according to the value"," * returned by applying the supplied predicate to two list elements."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category Relation"," * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]"," * @param {Function} pred A predicate used to test whether two items are equal."," * @param {Array} list1 The first list."," * @param {Array} list2 The second list."," * @return {Array} The elements in `list1` or `list2`, but not both."," * @see R.symmetricDifference, R.difference, R.differenceWith"," * @example"," *"," *      var eqA = R.eqBy(R.prop('a'));"," *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];"," *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];"," *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]"," */","module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {","  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/takeLast.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/takeLast.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"takeLast","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":27,"column":0},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":46}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":36}},{"start":{"line":28,"column":39},"end":{"line":28,"column":40}}]}},"code":["var _curry2 = require('./internal/_curry2');","var drop = require('./drop');","","","/**"," * Returns a new list containing the last `n` elements of the given list."," * If `n > list.length`, returns a list of `list.length` elements."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category List"," * @sig Number -> [a] -> [a]"," * @sig Number -> String -> String"," * @param {Number} n The number of elements to return."," * @param {Array} xs The collection to consider."," * @return {Array}"," * @see R.dropLast"," * @example"," *"," *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']"," *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']"," *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']"," *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']"," *      R.takeLast(3, 'ramda');               //=> 'mda'"," */","module.exports = _curry2(function takeLast(n, xs) {","  return drop(n >= 0 ? xs.length - n : 0, xs);","});",""],"l":{"1":1,"2":1,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/takeLastWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/takeLastWhile.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"takeLastWhile","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":26,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":27,"column":2},"end":{"line":27,"column":28}},"4":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":13}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":51}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":17}},{"start":{"line":28,"column":21},"end":{"line":28,"column":34}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a new list containing the last `n` elements of a given list, passing"," * each value to the supplied predicate function, and terminating when the"," * predicate function returns `false`. Excludes the element that caused the"," * predicate function to fail. The predicate function is passed one argument:"," * *(value)*."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> [a]"," * @param {Function} fn The function called per iteration."," * @param {Array} list The collection to iterate over."," * @return {Array} A new array."," * @see R.dropLastWhile, R.addIndex"," * @example"," *"," *      var isNotOne = x => x !== 1;"," *"," *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]"," */","module.exports = _curry2(function takeLastWhile(fn, list) {","  var idx = list.length - 1;","  while (idx >= 0 && fn(list[idx])) {","    idx -= 1;","  }","  return Array.prototype.slice.call(list, idx + 1);","});",""],"l":{"1":1,"26":1,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/takeWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/takeWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"takeWhile","line":32,"loc":{"start":{"line":32,"column":67},"end":{"line":32,"column":96}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":56}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":32,"column":0},"end":{"line":39,"column":4}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":14}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"7":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":13}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":50}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":18}},{"start":{"line":35,"column":22},"end":{"line":35,"column":35}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _dispatchable = require('./internal/_dispatchable');","var _xtakeWhile = require('./internal/_xtakeWhile');","","","/**"," * Returns a new list containing the first `n` elements of a given list,"," * passing each value to the supplied predicate function, and terminating when"," * the predicate function returns `false`. Excludes the element that caused the"," * predicate function to fail. The predicate function is passed one argument:"," * *(value)*."," *"," * Dispatches to the `takeWhile` method of the second argument, if present."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a -> Boolean) -> [a] -> [a]"," * @param {Function} fn The function called per iteration."," * @param {Array} list The collection to iterate over."," * @return {Array} A new array."," * @see R.dropWhile, R.transduce, R.addIndex"," * @example"," *"," *      var isNotFour = x => x !== 4;"," *"," *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]"," */","module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {","  var idx = 0;","  var len = list.length;","  while (idx < len && fn(list[idx])) {","    idx += 1;","  }","  return Array.prototype.slice.call(list, 0, idx);","}));",""],"l":{"1":1,"2":1,"3":1,"32":1,"33":0,"34":0,"35":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xtakeWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_xtakeWhile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":29}}},"2":{"name":"XTakeWhile","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":70}}},"4":{"name":"_xtakeWhile","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":18,"column":5}},"5":{"start":{"line":7,"column":2},"end":{"line":10,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":59}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":63}},"10":{"start":{"line":13,"column":2},"end":{"line":15,"column":4}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":90}},"12":{"start":{"line":17,"column":2},"end":{"line":17,"column":80}},"13":{"start":{"line":17,"column":47},"end":{"line":17,"column":76}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":27},"end":{"line":14,"column":70}},{"start":{"line":14,"column":73},"end":{"line":14,"column":89}}]}},"code":["var _curry2 = require('./_curry2');","var _reduced = require('./_reduced');","var _xfBase = require('./_xfBase');","","","module.exports = (function() {","  function XTakeWhile(f, xf) {","    this.xf = xf;","    this.f = f;","  }","  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;","  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;","  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {","    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);","  };","","  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });","}());",""],"l":{"1":1,"2":1,"3":1,"6":1,"7":1,"8":0,"9":0,"11":1,"12":1,"13":1,"14":0,"17":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/tap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/tap.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"tap","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":25,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":8}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":11}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Runs the given function with the supplied object, then returns the object."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Function"," * @sig (a -> *) -> a -> a"," * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away."," * @param {*} x"," * @return {*} `x`."," * @example"," *"," *      var sayX = x => console.log('x is ' + x);"," *      R.tap(sayX, 100); //=> 100"," *      // logs 'x is 100'"," * @symb R.tap(f, a) = a"," */","module.exports = _curry2(function tap(fn, x) {","  fn(x);","  return x;","});",""],"l":{"1":1,"22":1,"23":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/test.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"test","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":54}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":24,"column":0},"end":{"line":29,"column":3}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":119}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":41}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["var _cloneRegExp = require('./internal/_cloneRegExp');","var _curry2 = require('./internal/_curry2');","var _isRegExp = require('./internal/_isRegExp');","var toString = require('./toString');","","","/**"," * Determines whether a given string matches a given regular expression."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category String"," * @sig RegExp -> String -> Boolean"," * @param {RegExp} pattern"," * @param {String} str"," * @return {Boolean}"," * @see R.match"," * @example"," *"," *      R.test(/^x/, 'xyz'); //=> true"," *      R.test(/^y/, 'xyz'); //=> false"," */","module.exports = _curry2(function test(pattern, str) {","  if (!_isRegExp(pattern)) {","    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));","  }","  return _cloneRegExp(pattern).test(str);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"24":1,"25":0,"26":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isRegExp.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/internal/_isRegExp.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_isRegExp","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":65}}},"branchMap":{},"code":["module.exports = function _isRegExp(x) {","  return Object.prototype.toString.call(x) === '[object RegExp]';","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toLower.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toLower.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}}},"branchMap":{},"code":["var invoker = require('./invoker');","","","/**"," * The lower case version of a string."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category String"," * @sig String -> String"," * @param {String} str The string to lower case."," * @return {String} The lower case version of `str`."," * @see R.toUpper"," * @example"," *"," *      R.toLower('XYZ'); //=> 'xyz'"," */","module.exports = invoker(0, 'toLowerCase');",""],"l":{"1":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toPairs.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toPairs.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"toPairs","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":23,"column":0},"end":{"line":31,"column":3}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"5":{"start":{"line":25,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"7":{"start":{"line":27,"column":6},"end":{"line":27,"column":46}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]}},"code":["var _curry1 = require('./internal/_curry1');","var _has = require('./internal/_has');","","","/**"," * Converts an object into an array of key, value arrays. Only the object's"," * own properties are used."," * Note that the order of the output array is not guaranteed to be consistent"," * across different JS platforms."," *"," * @func"," * @memberOf R"," * @since v0.4.0"," * @category Object"," * @sig {String: *} -> [[String,*]]"," * @param {Object} obj The object to extract from"," * @return {Array} An array of key, value arrays from the object's own properties."," * @see R.fromPairs"," * @example"," *"," *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]"," */","module.exports = _curry1(function toPairs(obj) {","  var pairs = [];","  for (var prop in obj) {","    if (_has(prop, obj)) {","      pairs[pairs.length] = [prop, obj[prop]];","    }","  }","  return pairs;","});",""],"l":{"1":1,"2":1,"23":1,"24":0,"25":0,"26":0,"27":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toPairsIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toPairsIn.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"toPairsIn","line":25,"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"4":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":44}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Converts an object into an array of key, value arrays. The object's own"," * properties and prototype properties are used. Note that the order of the"," * output array is not guaranteed to be consistent across different JS"," * platforms."," *"," * @func"," * @memberOf R"," * @since v0.4.0"," * @category Object"," * @sig {String: *} -> [[String,*]]"," * @param {Object} obj The object to extract from"," * @return {Array} An array of key, value arrays from the object's own"," *         and prototype properties."," * @example"," *"," *      var F = function() { this.x = 'X'; };"," *      F.prototype.y = 'Y';"," *      var f = new F();"," *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]"," */","module.exports = _curry1(function toPairsIn(obj) {","  var pairs = [];","  for (var prop in obj) {","    pairs[pairs.length] = [prop, obj[prop]];","  }","  return pairs;","});",""],"l":{"1":1,"25":1,"26":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toUpper.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/toUpper.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}}},"branchMap":{},"code":["var invoker = require('./invoker');","","","/**"," * The upper case version of a string."," *"," * @func"," * @memberOf R"," * @since v0.9.0"," * @category String"," * @sig String -> String"," * @param {String} str The string to upper case."," * @return {String} The upper case version of `str`."," * @see R.toLower"," * @example"," *"," *      R.toUpper('abc'); //=> 'ABC'"," */","module.exports = invoker(0, 'toUpperCase');",""],"l":{"1":1,"19":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/transduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/transduce.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"transduce","line":50,"loc":{"start":{"line":50,"column":27},"end":{"line":50,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":50,"column":0},"end":{"line":52,"column":3}},"5":{"start":{"line":51,"column":2},"end":{"line":51,"column":76}}},"branchMap":{"1":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":47},"end":{"line":51,"column":57}},{"start":{"line":51,"column":60},"end":{"line":51,"column":62}}]}},"code":["var _reduce = require('./internal/_reduce');","var _xwrap = require('./internal/_xwrap');","var curryN = require('./curryN');","","","/**"," * Initializes a transducer using supplied iterator function. Returns a single"," * item by iterating through the list, successively calling the transformed"," * iterator function and passing it an accumulator value and the current value"," * from the array, and then passing the result to the next call."," *"," * The iterator function receives two values: *(acc, value)*. It will be"," * wrapped as a transformer to initialize the transducer. A transformer can be"," * passed directly in place of an iterator function. In both cases, iteration"," * may be stopped early with the `R.reduced` function."," *"," * A transducer is a function that accepts a transformer and returns a"," * transformer and can be composed directly."," *"," * A transformer is an an object that provides a 2-arity reducing iterator"," * function, step, 0-arity initial value function, init, and 1-arity result"," * extraction function, result. The step function is used as the iterator"," * function in reduce. The result function is used to convert the final"," * accumulator into the return type and in most cases is R.identity. The init"," * function can be used to provide an initial accumulator, but is ignored by"," * transduce."," *"," * The iteration is performed with R.reduce after initializing the transducer."," *"," * @func"," * @memberOf R"," * @since v0.12.0"," * @category List"," * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a"," * @param {Function} xf The transducer function. Receives a transformer and returns a transformer."," * @param {Function} fn The iterator function. Receives two values, the accumulator and the"," *        current element from the array. Wrapped as transformer, if necessary, and used to"," *        initialize the transducer"," * @param {*} acc The initial accumulator value."," * @param {Array} list The list to iterate over."," * @return {*} The final, accumulated value."," * @see R.reduce, R.reduced, R.into"," * @example"," *"," *      var numbers = [1, 2, 3, 4];"," *      var transducer = R.compose(R.map(R.add(1)), R.take(2));"," *"," *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]"," */","module.exports = curryN(4, function transduce(xf, fn, acc, list) {","  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);","});",""],"l":{"1":1,"2":1,"3":1,"50":1,"51":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/transpose.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/transpose.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"transpose","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":29,"column":0},"end":{"line":45,"column":3}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":12}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":18}},"5":{"start":{"line":32,"column":2},"end":{"line":43,"column":3}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":14}},"8":{"start":{"line":35,"column":4},"end":{"line":41,"column":5}},"9":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":23}},"11":{"start":{"line":39,"column":6},"end":{"line":39,"column":35}},"12":{"start":{"line":40,"column":6},"end":{"line":40,"column":13}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":11}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":16}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]}},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Transposes the rows and columns of a 2D list."," * When passed a list of `n` lists of length `x`,"," * returns a list of `x` lists of length `n`."," *"," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig [[a]] -> [[a]]"," * @param {Array} list A 2D list"," * @return {Array} A 2D list"," * @example"," *"," *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]"," *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]"," *"," * If some of the rows are shorter than the following rows, their elements are skipped:"," *"," *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]"," * @symb R.transpose([[a], [b], [c]]) = [a, b, c]"," * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]"," * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]"," */","module.exports = _curry1(function transpose(outerlist) {","  var i = 0;","  var result = [];","  while (i < outerlist.length) {","    var innerlist = outerlist[i];","    var j = 0;","    while (j < innerlist.length) {","      if (typeof result[j] === 'undefined') {","        result[j] = [];","      }","      result[j].push(innerlist[j]);","      j += 1;","    }","    i += 1;","  }","  return result;","});",""],"l":{"1":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/traverse.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/traverse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"traverse","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":32,"column":0},"end":{"line":34,"column":3}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":43}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","var map = require('./map');","var sequence = require('./sequence');","","","/**"," * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning"," * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),"," * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative"," * into an Applicative of Traversable."," *"," * Dispatches to the `sequence` method of the third argument, if present."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)"," * @param {Function} of"," * @param {Function} f"," * @param {*} traversable"," * @return {*}"," * @see R.sequence"," * @example"," *"," *      // Returns `Nothing` if the given divisor is `0`"," *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)"," *"," *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])"," *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing"," */","module.exports = _curry3(function traverse(of, f, traversable) {","  return sequence(of, map(f, traversable));","});",""],"l":{"1":1,"2":1,"3":1,"32":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/trim.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/trim.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0},"b":{"1":[0,1],"2":[1,1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":29}}},"2":{"name":"trim","line":26,"loc":{"start":{"line":26,"column":19},"end":{"line":26,"column":38}}},"3":{"name":"trim","line":32,"loc":{"start":{"line":32,"column":19},"end":{"line":32,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":19,"column":0},"end":{"line":36,"column":5}},"3":{"start":{"line":20,"column":2},"end":{"line":22,"column":26}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":27}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":67}},"6":{"start":{"line":25,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":30,"column":7}},"8":{"start":{"line":27,"column":6},"end":{"line":27,"column":61}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":59}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":57}},"11":{"start":{"line":32,"column":4},"end":{"line":34,"column":7}},"12":{"start":{"line":33,"column":6},"end":{"line":33,"column":24}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":19}},{"start":{"line":25,"column":24},"end":{"line":25,"column":33}},{"start":{"line":25,"column":37},"end":{"line":25,"column":54}}]}},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Removes (strips) whitespace from both ends of the string."," *"," * @func"," * @memberOf R"," * @since v0.6.0"," * @category String"," * @sig String -> String"," * @param {String} str The string to trim."," * @return {String} Trimmed version of `str`."," * @example"," *"," *      R.trim('   xyz  '); //=> 'xyz'"," *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']"," */","module.exports = (function() {","  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +","           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +","           '\\u2029\\uFEFF';","  var zeroWidth = '\\u200b';","  var hasProtoTrim = (typeof String.prototype.trim === 'function');","  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {","    return _curry1(function trim(str) {","      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');","      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');","      return str.replace(beginRx, '').replace(endRx, '');","    });","  } else {","    return _curry1(function trim(str) {","      return str.trim();","    });","  }","}());",""],"l":{"1":1,"19":1,"20":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"32":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/tryCatch.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/tryCatch.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_tryCatch","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":60}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":30},"end":{"line":28,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":27,"column":0},"end":{"line":35,"column":3}},"5":{"start":{"line":28,"column":2},"end":{"line":34,"column":5}},"6":{"start":{"line":29,"column":4},"end":{"line":33,"column":5}},"7":{"start":{"line":30,"column":6},"end":{"line":30,"column":42}},"8":{"start":{"line":32,"column":6},"end":{"line":32,"column":58}}},"branchMap":{},"code":["var _arity = require('./internal/_arity');","var _concat = require('./internal/_concat');","var _curry2 = require('./internal/_curry2');","","","/**"," * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned"," * function evaluates the `tryer`; if it does not throw, it simply returns the"," * result. If the `tryer` *does* throw, the returned function evaluates the"," * `catcher` function and returns its result. Note that for effective"," * composition with this function, both the `tryer` and `catcher` functions"," * must return the same type of results."," *"," * @func"," * @memberOf R"," * @since v0.20.0"," * @category Function"," * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)"," * @param {Function} tryer The function that may throw."," * @param {Function} catcher The function that will be evaluated if `tryer` throws."," * @return {Function} A new function that will catch exceptions and send then to the catcher."," * @example"," *"," *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true"," *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false"," */","module.exports = _curry2(function _tryCatch(tryer, catcher) {","  return _arity(tryer.length, function() {","    try {","      return tryer.apply(this, arguments);","    } catch (e) {","      return catcher.apply(this, _concat([e], arguments));","    }","  });","});",""],"l":{"1":1,"2":1,"3":1,"27":1,"28":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unapply.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unapply.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"unapply","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":46}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":9},"end":{"line":29,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":28,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":4}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":56}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Takes a function `fn`, which takes a single array argument, and returns a"," * function which:"," *"," *   - takes any number of positional arguments;"," *   - passes these arguments to `fn` as an array; and"," *   - returns the result."," *"," * In other words, R.unapply derives a variadic function from a function which"," * takes an array. R.unapply is the inverse of R.apply."," *"," * @func"," * @memberOf R"," * @since v0.8.0"," * @category Function"," * @sig ([*...] -> a) -> (*... -> a)"," * @param {Function} fn"," * @return {Function}"," * @see R.apply"," * @example"," *"," *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'"," * @symb R.unapply(f)(a, b) = f([a, b])"," */","module.exports = _curry1(function unapply(fn) {","  return function() {","    return fn(Array.prototype.slice.call(arguments, 0));","  };","});",""],"l":{"1":1,"28":1,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unary.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unary.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"unary","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":32,"column":0},"end":{"line":34,"column":3}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","var nAry = require('./nAry');","","","/**"," * Wraps a function of any arity (including nullary) in a function that accepts"," * exactly 1 parameter. Any extraneous parameters will not be passed to the"," * supplied function."," *"," * @func"," * @memberOf R"," * @since v0.2.0"," * @category Function"," * @sig (* -> b) -> (a -> b)"," * @param {Function} fn The function to wrap."," * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of"," *         arity 1."," * @example"," *"," *      var takesTwoArgs = function(a, b) {"," *        return [a, b];"," *      };"," *      takesTwoArgs.length; //=> 2"," *      takesTwoArgs(1, 2); //=> [1, 2]"," *"," *      var takesOneArg = R.unary(takesTwoArgs);"," *      takesOneArg.length; //=> 1"," *      // Only 1 argument is passed to the wrapped function"," *      takesOneArg(1, 2); //=> [1, undefined]"," * @symb R.unary(f)(a, b, c) = f(a)"," */","module.exports = _curry1(function unary(fn) {","  return nAry(1, fn);","});",""],"l":{"1":1,"2":1,"32":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uncurryN.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/uncurryN.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"uncurryN","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":54}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":23},"end":{"line":25,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":24,"column":0},"end":{"line":38,"column":3}},"4":{"start":{"line":25,"column":2},"end":{"line":37,"column":5}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":19}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":15}},"9":{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},"10":{"start":{"line":31,"column":6},"end":{"line":31,"column":78}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":84}},"12":{"start":{"line":33,"column":6},"end":{"line":33,"column":24}},"13":{"start":{"line":34,"column":6},"end":{"line":34,"column":19}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":17}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":32}},{"start":{"line":30,"column":36},"end":{"line":30,"column":63}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":40},"end":{"line":31,"column":56}},{"start":{"line":31,"column":59},"end":{"line":31,"column":77}}]}},"code":["var _curry2 = require('./internal/_curry2');","var curryN = require('./curryN');","","","/**"," * Returns a function of arity `n` from a (manually) curried function."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category Function"," * @sig Number -> (a -> b) -> (a -> c)"," * @param {Number} length The arity for the returned function."," * @param {Function} fn The function to uncurry."," * @return {Function} A new function."," * @see R.curry"," * @example"," *"," *      var addFour = a => b => c => d => a + b + c + d;"," *"," *      var uncurriedAddFour = R.uncurryN(4, addFour);"," *      uncurriedAddFour(1, 2, 3, 4); //=> 10"," */","module.exports = _curry2(function uncurryN(depth, fn) {","  return curryN(depth, function() {","    var currentDepth = 1;","    var value = fn;","    var idx = 0;","    var endIdx;","    while (currentDepth <= depth && typeof value === 'function') {","      endIdx = currentDepth === depth ? arguments.length : idx + value.length;","      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));","      currentDepth += 1;","      idx = endIdx;","    }","    return value;","  });","});",""],"l":{"1":1,"2":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unfold.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unfold.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"unfold","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":29,"column":0},"end":{"line":37,"column":3}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":18}},"5":{"start":{"line":32,"column":2},"end":{"line":35,"column":3}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":16}}},"branchMap":{"1":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":9},"end":{"line":32,"column":13}},{"start":{"line":32,"column":17},"end":{"line":32,"column":28}}]}},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Builds a list from a seed value. Accepts an iterator function, which returns"," * either false to stop iteration or an array of length 2 containing the value"," * to add to the resulting list and the seed to be used in the next call to the"," * iterator function."," *"," * The iterator function receives one argument: *(seed)*."," *"," * @func"," * @memberOf R"," * @since v0.10.0"," * @category List"," * @sig (a -> [b]) -> * -> [b]"," * @param {Function} fn The iterator function. receives one argument, `seed`, and returns"," *        either false to quit iteration or an array of length two to proceed. The element"," *        at index 0 of this array will be added to the resulting array, and the element"," *        at index 1 will be passed to the next call to `fn`."," * @param {*} seed The seed value."," * @return {Array} The final list."," * @example"," *"," *      var f = n => n > 50 ? false : [-n, n + 10];"," *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]"," * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]"," */","module.exports = _curry2(function unfold(fn, seed) {","  var pair = fn(seed);","  var result = [];","  while (pair && pair.length) {","    result[result.length] = pair[0];","    pair = fn(pair[1]);","  }","  return result;","});",""],"l":{"1":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/union.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/union.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _curry2 = require('./internal/_curry2');","var compose = require('./compose');","var uniq = require('./uniq');","","","/**"," * Combines two lists into a set (i.e. no duplicates) composed of the elements"," * of each list."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig [*] -> [*] -> [*]"," * @param {Array} as The first list."," * @param {Array} bs The second list."," * @return {Array} The first and second lists concatenated, with"," *         duplicates removed."," * @example"," *"," *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]"," */","module.exports = _curry2(compose(uniq, _concat));",""],"l":{"1":1,"2":1,"3":1,"4":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unionWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unionWith.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"unionWith","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":47}}},"branchMap":{},"code":["var _concat = require('./internal/_concat');","var _curry3 = require('./internal/_curry3');","var uniqWith = require('./uniqWith');","","","/**"," * Combines two lists into a set (i.e. no duplicates) composed of the elements"," * of each list. Duplication is determined according to the value returned by"," * applying the supplied predicate to two list elements."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category Relation"," * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]"," * @param {Function} pred A predicate used to test whether two items are equal."," * @param {Array} list1 The first list."," * @param {Array} list2 The second list."," * @return {Array} The first and second lists concatenated, with"," *         duplicates removed."," * @see R.union"," * @example"," *"," *      var l1 = [{a: 1}, {a: 2}];"," *      var l2 = [{a: 1}, {a: 4}];"," *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]"," */","module.exports = _curry3(function unionWith(pred, list1, list2) {","  return uniqWith(pred, _concat(list1, list2));","});",""],"l":{"1":1,"2":1,"3":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unless.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unless.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"unless","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":29,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":38}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":20}},{"start":{"line":30,"column":23},"end":{"line":30,"column":37}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Tests the final argument by passing it to the given predicate function. If"," * the predicate is not satisfied, the function will return the result of"," * calling the `whenFalseFn` function with the same argument. If the predicate"," * is satisfied, the argument is returned as is."," *"," * @func"," * @memberOf R"," * @since v0.18.0"," * @category Logic"," * @sig (a -> Boolean) -> (a -> a) -> a -> a"," * @param {Function} pred        A predicate function"," * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates"," *                               to a falsy value."," * @param {*}        x           An object to test with the `pred` function and"," *                               pass to `whenFalseFn` if necessary."," * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`."," * @see R.ifElse, R.when"," * @example"," *"," *      // coerceArray :: (a|[a]) -> [a]"," *      var coerceArray = R.unless(R.isArrayLike, R.of);"," *      coerceArray([1, 2, 3]); //=> [1, 2, 3]"," *      coerceArray(1);         //=> [1]"," */","module.exports = _curry3(function unless(pred, whenFalseFn, x) {","  return pred(x) ? x : whenFalseFn(x);","});",""],"l":{"1":1,"29":1,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unnest.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/unnest.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"branchMap":{},"code":["var _identity = require('./internal/_identity');","var chain = require('./chain');","","","/**"," * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from"," * any [Chain](https://github.com/fantasyland/fantasy-land#chain)."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category List"," * @sig Chain c => c (c a) -> c a"," * @param {*} list"," * @return {*}"," * @see R.flatten, R.chain"," * @example"," *"," *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]"," *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]"," */","module.exports = chain(_identity);",""],"l":{"1":1,"2":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/until.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/until.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"until","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":29,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"4":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":13}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Takes a predicate, a transformation function, and an initial value,"," * and returns a value of the same type as the initial value."," * It does so by applying the transformation until the predicate is satisfied,"," * at which point it returns the satisfactory value."," *"," * @func"," * @memberOf R"," * @since v0.20.0"," * @category Logic"," * @sig (a -> Boolean) -> (a -> a) -> a -> a"," * @param {Function} pred A predicate function"," * @param {Function} fn The iterator function"," * @param {*} init Initial value"," * @return {*} Final value that satisfies predicate"," * @example"," *"," *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128"," */","module.exports = _curry3(function until(pred, fn, init) {","  var val = init;","  while (!pred(val)) {","    val = fn(val);","  }","  return val;","});",""],"l":{"1":1,"23":1,"24":0,"25":0,"26":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/valuesIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/valuesIn.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"valuesIn","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":24,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":11}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":12}}},"branchMap":{},"code":["var _curry1 = require('./internal/_curry1');","","","/**"," * Returns a list of all the properties, including prototype properties, of the"," * supplied object."," * Note that the order of the output array is not guaranteed to be consistent"," * across different JS platforms."," *"," * @func"," * @memberOf R"," * @since v0.2.0"," * @category Object"," * @sig {k: v} -> [v]"," * @param {Object} obj The object to extract values from"," * @return {Array} An array of the values of the object's own and prototype properties."," * @example"," *"," *      var F = function() { this.x = 'X'; };"," *      F.prototype.y = 'Y';"," *      var f = new F();"," *      R.valuesIn(f); //=> ['X', 'Y']"," */","module.exports = _curry1(function valuesIn(obj) {","  var prop;","  var vs = [];","  for (prop in obj) {","    vs[vs.length] = obj[prop];","  }","  return vs;","});",""],"l":{"1":1,"24":1,"25":0,"26":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/view.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/view.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0},"b":{},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":29}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":27},"end":{"line":28,"column":38}}},"4":{"name":"view","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":25,"column":0},"end":{"line":36,"column":5}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":4}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":56}},"5":{"start":{"line":28,"column":40},"end":{"line":28,"column":52}},"6":{"start":{"line":31,"column":2},"end":{"line":35,"column":5}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":32}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Returns a \"view\" of the given data structure, determined by the given lens."," * The lens's focus determines which portion of the data structure is visible."," *"," * @func"," * @memberOf R"," * @since v0.16.0"," * @category Object"," * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s"," * @sig Lens s a -> s -> a"," * @param {Lens} lens"," * @param {*} x"," * @return {*}"," * @see R.prop, R.lensIndex, R.lensProp"," * @example"," *"," *      var xLens = R.lensProp('x');"," *"," *      R.view(xLens, {x: 1, y: 2});  //=> 1"," *      R.view(xLens, {x: 4, y: 2});  //=> 4"," */","module.exports = (function() {","  // `Const` is a functor that effectively ignores the function given to `map`.","  var Const = function(x) {","    return {value: x, map: function() { return this; }};","  };","","  return _curry2(function view(lens, x) {","    // Using `Const` effectively ignores the setter function of the `lens`,","    // leaving the value returned by the getter function unmodified.","    return lens(Const)(x).value;","  });","}());",""],"l":{"1":1,"25":1,"27":1,"28":0,"31":1,"34":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/when.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/when.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"when","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":32,"column":0},"end":{"line":34,"column":3}},"3":{"start":{"line":33,"column":2},"end":{"line":33,"column":37}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":19},"end":{"line":33,"column":32}},{"start":{"line":33,"column":35},"end":{"line":33,"column":36}}]}},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Tests the final argument by passing it to the given predicate function. If"," * the predicate is satisfied, the function will return the result of calling"," * the `whenTrueFn` function with the same argument. If the predicate is not"," * satisfied, the argument is returned as is."," *"," * @func"," * @memberOf R"," * @since v0.18.0"," * @category Logic"," * @sig (a -> Boolean) -> (a -> a) -> a -> a"," * @param {Function} pred       A predicate function"," * @param {Function} whenTrueFn A function to invoke when the `condition`"," *                              evaluates to a truthy value."," * @param {*}        x          An object to test with the `pred` function and"," *                              pass to `whenTrueFn` if necessary."," * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`."," * @see R.ifElse, R.unless"," * @example"," *"," *      // truncate :: String -> String"," *      var truncate = R.when("," *        R.propSatisfies(R.gt(R.__, 10), 'length'),"," *        R.pipe(R.take(10), R.append('…'), R.join(''))"," *      );"," *      truncate('12345');         //=> '12345'"," *      truncate('0123456789ABC'); //=> '0123456789…'"," */","module.exports = _curry3(function when(pred, whenTrueFn, x) {","  return pred(x) ? whenTrueFn(x) : x;","});",""],"l":{"1":1,"32":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/where.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/where.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"where","line":39,"loc":{"start":{"line":39,"column":25},"end":{"line":39,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"3":{"start":{"line":39,"column":0},"end":{"line":46,"column":3}},"4":{"start":{"line":40,"column":2},"end":{"line":44,"column":3}},"5":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"6":{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},"7":{"start":{"line":45,"column":2},"end":{"line":45,"column":14}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":24}},{"start":{"line":41,"column":28},"end":{"line":41,"column":54}}]}},"code":["var _curry2 = require('./internal/_curry2');","var _has = require('./internal/_has');","","","/**"," * Takes a spec object and a test object; returns true if the test satisfies"," * the spec. Each of the spec's own properties must be a predicate function."," * Each predicate is applied to the value of the corresponding property of the"," * test object. `where` returns true if all the predicates return true, false"," * otherwise."," *"," * `where` is well suited to declaratively expressing constraints for other"," * functions such as `filter` and `find`."," *"," * @func"," * @memberOf R"," * @since v0.1.1"," * @category Object"," * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean"," * @param {Object} spec"," * @param {Object} testObj"," * @return {Boolean}"," * @example"," *"," *      // pred :: Object -> Boolean"," *      var pred = R.where({"," *        a: R.equals('foo'),"," *        b: R.complement(R.equals('bar')),"," *        x: R.gt(__, 10),"," *        y: R.lt(__, 20)"," *      });"," *"," *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true"," *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false"," *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false"," *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false"," *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false"," */","module.exports = _curry2(function where(spec, testObj) {","  for (var prop in spec) {","    if (_has(prop, spec) && !spec[prop](testObj[prop])) {","      return false;","    }","  }","  return true;","});",""],"l":{"1":1,"2":1,"39":1,"40":0,"41":0,"42":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/whereEq.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/whereEq.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"whereEq","line":34,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":34,"column":0},"end":{"line":36,"column":3}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":43}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","var equals = require('./equals');","var map = require('./map');","var where = require('./where');","","","/**"," * Takes a spec object and a test object; returns true if the test satisfies"," * the spec, false otherwise. An object satisfies the spec if, for each of the"," * spec's own properties, accessing that property of the object gives the same"," * value (in `R.equals` terms) as accessing that property of the spec."," *"," * `whereEq` is a specialization of [`where`](#where)."," *"," * @func"," * @memberOf R"," * @since v0.14.0"," * @category Object"," * @sig {String: *} -> {String: *} -> Boolean"," * @param {Object} spec"," * @param {Object} testObj"," * @return {Boolean}"," * @see R.where"," * @example"," *"," *      // pred :: Object -> Boolean"," *      var pred = R.whereEq({a: 1, b: 2});"," *"," *      pred({a: 1});              //=> false"," *      pred({a: 1, b: 2});        //=> true"," *      pred({a: 1, b: 2, c: 3});  //=> true"," *      pred({a: 1, b: 1});        //=> false"," */","module.exports = _curry2(function whereEq(spec, testObj) {","  return where(map(equals, spec), testObj);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"34":1,"35":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/without.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/without.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":25},"end":{"line":26,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"5":{"start":{"line":26,"column":0},"end":{"line":28,"column":3}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":43}}},"branchMap":{},"code":["var _contains = require('./internal/_contains');","var _curry2 = require('./internal/_curry2');","var flip = require('./flip');","var reject = require('./reject');","","","/**"," * Returns a new list without values in the first argument."," * `R.equals` is used to determine equality."," *"," * Acts as a transducer if a transformer is given in list position."," *"," * @func"," * @memberOf R"," * @since v0.19.0"," * @category List"," * @sig [a] -> [a] -> [a]"," * @param {Array} list1 The values to be removed from `list2`."," * @param {Array} list2 The array to remove values from."," * @return {Array} The new array without values in `list1`."," * @see R.transduce"," * @example"," *"," *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]"," */","module.exports = _curry2(function(xs, list) {","  return reject(flip(_contains)(xs), list);","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"26":1,"27":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/xprod.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/xprod.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"xprod","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":22,"column":0},"end":{"line":37,"column":3}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":14}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":22}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":8}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":22}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"8":{"start":{"line":28,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":10}},"10":{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":45}},"12":{"start":{"line":32,"column":6},"end":{"line":32,"column":13}},"13":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}},"14":{"start":{"line":36,"column":2},"end":{"line":36,"column":16}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Creates a new list out of the two supplied by creating each possible pair"," * from the lists."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [b] -> [[a,b]]"," * @param {Array} as The first list."," * @param {Array} bs The second list."," * @return {Array} The list made by combining each possible pair from"," *         `as` and `bs` into pairs (`[a, b]`)."," * @example"," *"," *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]"," * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]"," */","module.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)","  var idx = 0;","  var ilen = a.length;","  var j;","  var jlen = b.length;","  var result = [];","  while (idx < ilen) {","    j = 0;","    while (j < jlen) {","      result[result.length] = [a[idx], b[j]];","      j += 1;","    }","    idx += 1;","  }","  return result;","});",""],"l":{"1":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/zip.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/zip.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"zip","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":23,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":41}},"6":{"start":{"line":27,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":13}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":12}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Creates a new list out of the two supplied by pairing up equally-positioned"," * items from both lists. The returned list is truncated to the length of the"," * shorter of the two input lists."," * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`."," *"," * @func"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig [a] -> [b] -> [[a,b]]"," * @param {Array} list1 The first array to consider."," * @param {Array} list2 The second array to consider."," * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`."," * @example"," *"," *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]"," * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]"," */","module.exports = _curry2(function zip(a, b) {","  var rv = [];","  var idx = 0;","  var len = Math.min(a.length, b.length);","  while (idx < len) {","    rv[idx] = [a[idx], b[idx]];","    idx += 1;","  }","  return rv;","});",""],"l":{"1":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/zipObj.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/zipObj.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"zipObj","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":21,"column":0},"end":{"line":30,"column":3}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":14}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":49}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"6":{"start":{"line":25,"column":2},"end":{"line":28,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":13}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":13}}},"branchMap":{},"code":["var _curry2 = require('./internal/_curry2');","","","/**"," * Creates a new object out of a list of keys and a list of values."," * Key/value pairing is truncated to the length of the shorter of the two lists."," * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`."," *"," * @func"," * @memberOf R"," * @since v0.3.0"," * @category List"," * @sig [String] -> [*] -> {String: *}"," * @param {Array} keys The array that will be properties on the output object."," * @param {Array} values The list of values on the output object."," * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`."," * @example"," *"," *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}"," */","module.exports = _curry2(function zipObj(keys, values) {","  var idx = 0;","  var len = Math.min(keys.length, values.length);","  var out = {};","  while (idx < len) {","    out[keys[idx]] = values[idx];","    idx += 1;","  }","  return out;","});",""],"l":{"1":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/zipWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-ramda/node_modules/ramda/src/zipWith.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"zipWith","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":28,"column":0},"end":{"line":37,"column":3}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":14}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":41}},"6":{"start":{"line":32,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":12}}},"branchMap":{},"code":["var _curry3 = require('./internal/_curry3');","","","/**"," * Creates a new list out of the two supplied by applying the function to each"," * equally-positioned pair in the lists. The returned list is truncated to the"," * length of the shorter of the two input lists."," *"," * @function"," * @memberOf R"," * @since v0.1.0"," * @category List"," * @sig (a,b -> c) -> [a] -> [b] -> [c]"," * @param {Function} fn The function used to combine the two elements into one value."," * @param {Array} list1 The first array to consider."," * @param {Array} list2 The second array to consider."," * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`"," *         using `fn`."," * @example"," *"," *      var f = (x, y) => {"," *        // ..."," *      };"," *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);"," *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]"," * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]"," */","module.exports = _curry3(function zipWith(fn, a, b) {","  var rv = [];","  var idx = 0;","  var len = Math.min(a.length, b.length);","  while (idx < len) {","    rv[idx] = fn(a[idx], b[idx]);","    idx += 1;","  }","  return rv;","});",""],"l":{"1":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0}}}